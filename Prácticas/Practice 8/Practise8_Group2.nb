(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1104511,      21917]
NotebookOptionsPosition[   1087490,      21656]
NotebookOutlinePosition[   1087832,      21671]
CellTagsIndexPosition[   1087789,      21668]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Practise 8: group 2. Nerea Andia, Ander Cano, Mikel Lamela and Aitor Larrinoa.\
\>", "Chapter",
 CellChangeTimes->{{3.828229136947777*^9, 
  3.828229188055867*^9}},ExpressionUUID->"786a3222-c28a-4a8a-ae61-\
60304c6de3e3"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["8.1. Galerkin Method",
 FontWeight->"Bold"]], "Section",
 CellChangeTimes->{{3.8282292033367195`*^9, 
  3.8282292106178284`*^9}},ExpressionUUID->"03e389e1-8da4-40c2-a793-\
abe552aa4d17"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["a) Write a program in Mathematica that solves (8.5) \
using Galerkin method and compares the approximated solution with the exact \
one",
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0.5, 0]]], "Subsection",
 CellChangeTimes->{{3.8282292283985863`*^9, 3.828229238663994*^9}, {
  3.8282293552078843`*^9, 3.828229358707847*^9}, {3.8282436489802933`*^9, 
  3.8282436497950907`*^9}, {3.8288427881478286`*^9, 
  3.828842833828246*^9}},ExpressionUUID->"3015dc94-c2be-48da-81e9-\
5fadb2e3a2a5"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fun", "[", "y_", "]"}], " ", ":=", " ", "y"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k", "[", "y_", "]"}], " ", ":=", " ", 
   RowBox[{"1", "+", "y"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u0", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vsin", "[", " ", 
   RowBox[{"k_", ",", "y_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"k", "  ", "Pi", " ", "y"}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.828229256663503*^9, 3.828229267835128*^9}, {
  3.8282293865508513`*^9, 3.8282294378777227`*^9}, {3.828229515234606*^9, 
  3.828229570930434*^9}, {3.828604467973393*^9, 3.8286044689447985`*^9}, {
  3.828604591141868*^9, 3.828604591631295*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"bb4cd7b9-5dc0-4295-8649-12281936c14e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "n"}], ",", " ", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"grafico", "[", "i", "]"}], "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"vsin", "[", 
       RowBox[{"i", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"grafico", "[", "2", "]"}], ",", 
   RowBox[{"grafico", "[", "1", "]"}], ",", 
   RowBox[{"grafico", "[", 
    RowBox[{"n", "-", "2"}], "]"}], ",", 
   RowBox[{"grafico", "[", "n", "]"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Plot of some of the basis functions\>\""}]}], 
  "]"}], "\n"}], "Input",
 CellChangeTimes->{
  3.828229585329794*^9, {3.828238495298953*^9, 3.828238509730083*^9}, {
   3.8282385584029207`*^9, 3.828238565329756*^9}, 3.8282386166870284`*^9, {
   3.828238687129077*^9, 3.8282386887078037`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"80dc6b85-4d99-49a6-a1ac-151bf2eb4f88"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
/UUWBbS3Dgj9Ifynzia3ZoYCqYbVl/4jnJn619OAmwqTN+OK/xGmYd3Q9GVU
iOK3l54jvGFfeIowPxXS+qT8GYTNb/WW+whSYcG0gUUl/BQp9PWKUWFa/+b5
DMJlPJ6zWlJUyNi1s+0h4VkDJJQsS4X+6QlTM8LKoXw7V28lLNDTKkLYoc1C
z30HFd66TVtRyP3jJBIvdu6mwteXlqz7hNusWbcPqlHhcKCQvyLhVe/UohMP
UqGnQmtDLYmvFsM/c5kWFcpOLym9QPimUlOdsx4V4ltcnNgkP5keEsNUYyqE
Hk2WdCdMK7D/t+8EFeQMmpvZJL8bFjMkXp+igtGcQJgNYQvtv3u5zlPBeDrQ
oo7oIzhQ9/glWyp8t3fctJ3wnFCvv/I1Knh+F2ptniX6Pa0QF+lO7h9wMH8d
YYc4j/w5bypo3nn21pzosW0rH6vcnwq+5wKjvkyR9zmoZnH6JRV2JroM8/4h
7+Pn7/o9jsR3xlaQh/hjQ3Xjk01vqWCTfVtvjvgp2My+mPWZClhFv7WG+O2K
w/OtfuVUaDJa775AJ/pP6zkyUkMFmRV4JptG/De21cqoiQpKhx4G2RA/69wu
DhPtosIS8+udb4jfN4aNzqVwqGASabk+rxdD8UXflOwJKjCvuStr9hD97RU+
822WCnERd26X/ST1rUO9oGFJM2Q9bynKIPVHXDroBhZrhrMXlfGOZgz5HOkt
s+ubYa3l2UYfCukfJVntXLLNsDU6fKSoEUOUXZeK0PZmYD/pq99Zh0EoVWFC
BZph9LqaS3YZhqzbRUmHdJrBK1Vodwmph6bHTE/oGjRDY3zEnqpiDKFj3lmn
TjbDz8kbE4WknvKrVbveutwMvOPFt/SyMfBWXGKh0GbIn78kyk7A8C5q7nVN
ZDNQ76Vz+ZL6rnM5xKj5VTM08B3Yu/I1Bn++3NSBt81Q6nDXbRnpD4umPI68
Bc1QN8Z//t1TotfepGHDX80QP132zMULw+hMf1/7rhaoDOTXOKKNIe9yaJmh
agvkrfeSjyT97X7n4Q9IowXij+4S79Mg/suPu5ai20LmyUHJU6Q/at04t3DH
qgV6HmZ96d2MIWayQ2JzYAukPJlROkz6rf54o7l7fwvcix7MNi/igPDFu/tp
Qy1wKDOAEZTPgT7qDikrZguUnnpoUpDNAc/Mp4NHp1pgGZ9cxmwyBxJcDdwl
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
        "]]},
      Annotation[#, "Charting`Private`Tag$2533#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
1w==
        "]]},
      Annotation[#, "Charting`Private`Tag$2403#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwUm3c81d8fx4kKSaEUUtEkoZKVvCUyK1syQqREQ9KQSES+iUqF7BWyZ+aR
bNl7u5d73f0hytbv8/vL4/X4fLzPe51z3s97EXe4a+y0gY2N7RgnG9v/f+o5
UTqrqWZqslU8bZOnE9Q4z4vcGxeWh3W3y5XcH3zgVFxEdIGwJgR1lroGvg8F
/db+/BhhU7DtrxK/+y4OLBwXKt8LOwJvmVj8q5AcGJUNPB8i7AGVvUaZB54j
iN95+VWwsD9oZ7j1E9Xbwav1c615mT/MTt591CzSAeYBExsOWAXAD0pm61R4
B/D+ue9THv0KzH2IDLOgTnjcE/6Yse81sJT3nP57uxuMPgy5XDr8FhxTv/uE
H+yHF1wFR14Lh8O06YBJyaUxkNJ+F5R/LxwCY3cqcjWMQVfAXepwQzg8WnFQ
/6U2Dgc5pL/JeH4EWfuML8ZCE1C/lizT0/UJXNMeFuSwEYB37tPpfW8ioS+U
/uVdPRGKTjz8pDMZCdKcK0W9a0SwvWeycF8lCvplJMg18pOQw9xWWkuJgj2b
O6PDEybBmBKk6qIVDWdjLHWXPacgYvTp+aL1WKhdYMqtbCPDuT2WyWNmceBA
e+pse44MtKuKG7my4kAo3bLWyp0MexlPrmcdj4cz1rvcxbvJcPeWwiG2kXiQ
LPvwpjp0GgQcc9JSlBLhAP/M/Q/zFLjxcq+limMiEAYHd8rvo0J5Ygh3e2gi
TKqX/7DXpYIj4bbLIjkRfnZdlbWPpkKR7VFp/Y9J4C9g2zisSoMrlgk5M7PJ
gGS/iUo40wEbNuVJFEkBY5+9hcxAOryy5XIyOZ8CxXlWD/TT6FBw/a5IcXgK
KCVbXS+fpgPfnbMBXoqpcOy7jvk1ewakzMyMS9ulQvXyb6fs5wxQfZCsMhaU
Cs/VRn7+94UBLo+3zKgPpUL4poA4rJsBdX6DVzd5fwX2bmLWZWCC9caQopKU
r8B2fmSZ05IJvwPVt99q+wrn/KgyWu5M2B/yta5lXxr8ixUsd0xiwrPPD+Xe
1aSBtYlZ1042FgiKSP6nQU+Dj37jpbuEWJARPUKaE0yHC0VCnxKOsaA/4fwX
c6d02G3yrU/fjAUnM/k37eHKgAZaQtBsIguaZOrsWuUy4Pu/kt1SRSywy3tc
/twyAwoXGyUo9SwIKR6/R8jIgIeZUf/NUVhwUPlDy/vuDOj+7e+gvsSCsvIL
hzVXM+CWMUri58aAUp01nHrxGww5xbuoH8HA57y9whXPb2CkO/go5jQGQvU7
3nHHfYOqgKB17/MYnG/xuuA68w2ynv2IbrTBYOiibIKYcCbcFHDUP+mCwb0O
4krbuUwQu5qbsNcTg9he3bwTHzJB5gsW9PwNBqevrG2ZLM+EsfPR1bOfMPg1
lHsjfCoT7O2dmeR4DJbGd+1ZOJ0F+UXXX5sXYBDm0OKZZpsF9fkbczrKMThM
et5pGZgFFX1pCr9+YmBKI72qGMiChLAA1oUuDOiukQQ39mx4YrU0VTeAgR9m
oLpPKhsCYiab6sYwEHZn+9xhnA2G+00DLkxhkDtfMPvCKxtSt5qz61Ax0H7k
bHAqORtktWckm5kYjC2JfJ36lQ2Hig8xf81i4PGsjf3Tn2zY8eGPiuEfDLb8
e2GtvTcHSlOsNpouYhBxy8JW+kIOdK1D/69lDA72SNvx38kB/p4mzpZVDPLU
Njj8/ZgDsTGmry6tY6CW3n99uDIHxrQEzC3+YdAimOVUTcqBfNhyj4RrafhR
0LUpF3I/7u1axLX7/Df5OpFcuPib/dk7XJemfyoqkcmFpfhzd3Nwe2zXXihk
aOSCbJB6jvEaBhd2uJZEm+fCsz1K57xWMHjTZK4U6pIL9wyUpCWXMOh+fq70
xfNceON05In1XwxE5KVVPN7nwoHfP07unMPAjipUfiM1F46ERTmZYBikxrKr
Wpbh61UL799Fx4BpwqjQb8sF8XxvdzsyBvLc/WfViLnA9W/wjiwBg6dVP6rk
/uZC0u1dkv7DGFQ/yIQDPHkgHDFXbNuLwWbJz9U79+bB9Sw2OdSGwaWxF+e4
TuYBdUNKVkoDBuEfXGuWtfJgV6WIvkA1BuLr52rH3fIg6/FLq+c5GNwskNbq
epEHF/5w8z1PxSD75q762o/4+4OB1zhjMDjTzWhIr8wD66Jw95QgvB+C+nWi
O/NAYFrDr9obg8azNU1vSXnAqD/U6uCOgVna55YHW/NBcSa/9uxVDKJt/Axu
iOdDw6M/rZ4XMSAKuLVeOZ0PcfVfWhTVMbjrrdF+1iYfuO357xsfxOC1MbNr
c1Y+XAlkXp8hs6Bj84DJcnU+rJ5e33C3jwVClTU9jJ58cJhm2j6qY0HSkYi+
ztV8aNb2NDmM7+/KVY2hLwYFoKyjVcFpzgLO/ONWb+0KYG/aUs3AORboOe8e
8fUoAPsY+2ql4/h50ckcdYougH6H26MxG1gwmxpBkGUUwA8J/sKNaUw4ZMSi
/PyvEMJHW7ZFjTJAxEdbxTmhEE52OGSzVzNge1b8fzwlheBvsRQ6ncCAZS4T
GSNiIZwpbTgr58iAjuqSB2NKRfBF3Da7lkiHp3Iv1hdJRaB6+3XIs0Ya3LUd
uhy9UgQkcYPfvEk0cHxzKgH4i6Fjx4kDh7xpcJlCOv9KtRjClgs+Y7I0OBiv
91rwQzFY7D6xkS2MCm3bduyQUS+B/wTue+eoUODnWTenTrMSoBrevsLPR4Hv
t+uLPW6XAOZ9MXUTYRqSGh5bln8qgZ3bSpqyA6bhsc9orA6zBA68lyNsaSaD
BJYqeT3qO9we4GEUAgketSlDxHwp+MRoDC9PEYBPpojUxFUG64/3f4BcAiSH
yL1Z2VMGjxS56tS8CNBpcGTQVqsM2K0MB+9uJ8Cxlh0PDn0qA8Lv2LYCxQkY
b8BS8xXLodl+bPfa/Aho/0jha31aAXF3HGwss3thVyH/GDs7AvN+m2mP9e9g
/WbFdEoIQUvBNs2BoWJIdCS11Esj0MpK3d9VXAjSO0tL/7uC4PoNGWKuWy5o
eNp93JmL4LDuU+cquzhQiLZIDZethvb0phzN7ERkb5tqkzZWDZeMfeT6quuQ
v55oZCS1Gi5cq8xMaa9HqQphPcHz1RDP+W5ky1gDYvA91Xfj+QHxoScHgpaa
kCe6qHxS4QdMPRRRrZRqQ2/2/9lREfIDOjk6MuhK3aiYeP5Xu2oNRE6kVnYp
DaM+nRezIdo1IEf8cehn/jD6m10lZGBcAxnah42UpEeQopeyfaNzDVhfs/dL
ExtF3wVl/1a/rwHOzfVVTstjqFRTZH8+pQbo/ELXfxoQ0FCGhda9uRoQGvZ4
4xRAQMvbP7rIrNeA802hH6WVBKQyuq0oQ/AnfPPiuO5xnIjKHm7US1L7CS/8
PB/t4p5EFakzD8LDf0KtTdLWc7lTaIRXJtI47idUpYmEvpucQqvut6u2Z/yE
q1kt+wKESOgskLlC0E/A1vJJRl4kVNU/HBNA+wmmJt/ibqmTEeJqaPBUr4Xq
9fIzPSXTaOIOJ1NevxYI74qFsalpxNZ7TmDOrBbC01u/xvFTkHpChfXd27Xg
dqu3rOoWBVUr5886f6qFozIT7uM7qKjGJUbUklEL87xHJDeb01AB9fZt27+1
MKPain1+QkPJN1XKr7PVwYs9Oko10TQUcKP/6p0ddVCoVC1LINCQjgN/1EvV
OhC+EaSo4kxHyoRxatCFOtgd0OcbFEhHUnbZym8N62BeaF7B9Ssd8drqD0Y4
1kH8ssvaLImO2i0Ddme/qYNDNn8GqDYMVD1gcrPgUx24xcld73vKQLkWEt+/
x9eBv6lJpulnBnpvhix+FtaBX9uPn5ztDGRutPRpYKQOEsS87Y4oM9GIjttO
juP1ELNdPGfvIhO1Npxx4lKsB37TxCMLW1mo6gJP0dZz9aDbdfOC1QEWitP8
arrbrB6kxPWO1xmwkIM64cNx73qg+25n3xXFQiYoZ/JkYD3oFR9k08xkIU21
56eU3tXD8cl09eVKFjqkKtqtkYKvRwh5yD7BQhRFM4ErrfWQ8tQ1/sFeDA0W
H3Cw6a+HhnzpsElpDDWf/p3nQKgH1+1u7UMqGPp2KtTI7U892BavO9maYSg6
3ybB/V89iEp8M6fZY+jNCenZR9wN8C4wtGnVDUN3ZJvC/MQa4PAM+VmhP4au
ZX+eCDzSAOrvnJ0sQzFkePyGXMiJBgioUN3vH4mhk8c4Oj5rNUCh3aX7LpkY
OpDRuS/mcgNoK9tVHSrC0A7J+LuJlg0Q5umuf6MSQ38On92W5dYASfczvnr+
wpAaUaMh+HEDDEd65nZ3Y+hVjI7PzZcNIOSrNBA3hKG2K5cUL7xtAA3m+r+h
CQwJ7TDFDkQ2wLYi1y0BZAzZtlt+ZU9uAD7F0okYOoZSg69dG89ugK09uTcP
zWCIpeW0q7K0AYosit6KzmNIgf12e1RtAziZV6n7LmDoecW9wMftuL8+lndN
ljFU/8gTzIdw/4gZWz+uYojv1LOFU6QGcJB249dax5AF60UO/0wD9HXNul//
h6H49EBnbLkBvimLH5/BNcUxZF/rxkYQaXp6lo5ruf0f+jO2N4LB0o5kU1w/
Ho4IDRJthFmjmOvSuL3qT7HaNw43gqDtlRfu+Hpcxsn/zp9ohN3h4huP4P4Y
bs0oEVdtBPaTt5d0cX8jG3Pu/rvQCENb1W4Pz2GI+LLoyKhRI9y6quwyjGFI
CsrHy6wbYYvdey49PB/uy9WfI5wboV9yh9URPF9lRfWXPd0bYeHwvicP8Hxu
uP9rs6l3I5ypTnsmg+dbT7oLnQhqhHmCit8VvB7vp/sfbfvQCJufzqXNtmBo
OHFUlhnTCHq0lwLLPzF00HZyujmtEY7elZu8X44hV2FqXFpBI/g/bT9nmY+h
1dD5bY5NjXChYafRo1gMaeovN5zraQTTV2rW2R/w/tvE5rtvvBFOHbPKMAvC
kJj3lpmh+UZwdv408ecuhm4o8ad9/9cIsdFpipgDhrLnhOw+8TSBw/KHHEu8
n9VcJDqM9jfBi9C+FT8lvH8OHQ2SPdYE3fMPTDQk8f6ZOK6+VaEJBF57dD0Q
xvvFQjm3Ub8JKr/+vimzyEI+moZh8KgJrq32evDksFDjPzMdMb8mKHvY6n79
CwttL7diW3nTBHdV58VOBLJQ/Anne8WJTSC1vpF1zIaFqvc+Nzze1gTea8V7
MzawENfQS64tg03wcEB9bwGNiQw/vq6mTDZB+EVN7FQXExG2fJRLXmqCE9uk
62PjmGjD0rftooeaoXXtOv9heSYSbdWYA9lmqNE5njQqzETyCYO9jsrN0NRL
/yH+j4GcdDd/yb7YDN7/DAyNGhmoMdLhkIZnM6yXniqzNGOgUBVhlVsNzRDH
0dHx8CodpfHl7nnb2Qy/JadrjinTUTXxwr/84WZYzPtT+HAXHf0O9qhdxZoh
5PPnvIYuGjIfbr8UtrsFlkZ2CD3QpKE9z15dL7nVAjdPhsg44ef5aUOxCyMP
WoBE2H0jhkFBlw4WHmV/3gJSQq8q3GspyOcXgan3vgVesM9oLrhTEHHP2cdj
ZS0QbHbk3ZOWaZReOfdmI+8vCHW4bP3XhYwU/tkVm2T/Ah/3E+pFNyeRwcVq
P63vv6DKJrabqDCJrn/Zd1mx5hf8IokcauCcRGGKY9Mifb/geKj/v+I4IqLe
tRImrv2Cpa+oTKeLgKInzJ7du9gKHPqqcxNSE4i9Rk8jhNEKOWEbTizaDqJf
/vJt9VLtIJyS+4KrvxapbGvZ8O50O2hxS3Lqt/xEaZH2ilbq7XAjoyhbHtWg
l9lv4zGzdngXEK+3PbUaqQxQ3He/aAfGgcgDgxPfUdqxmF0u/fj73rH/kcbi
kAbVL3eTRgcsuCctmRBL4YlMW/Nt7Q4gtP+1zlwrh9wHwqQOgw7wEOPdG7i7
Cvau5wh/seiAR9d+Ll46/AOWBEb9ZN06IDFs7kmyeR3kqiqaXYnoAL680ney
ya2wL4y+lM7qgHNpSZtkqH1QZe+Tnj/XAVfmBKslrvWD7SlBy/LFDphNSTlY
0dMP0X0q339t6IRjpg41vVUDsFss2BMT6oTE0T5n97dDIJBxdE4eOuHq0+Pi
DcJjsLHWCW+iTth1XYPo7kKE5I9LXxrDO6E5ns2ZJ5YIms4h+p2RnRA2yHXM
spMIfjxFGcSkTvDMFzIUVpyEdUPOWxu/d8KtN8HOfP8mYXE0kaQ30QkcPqp3
JXxJQF8YH+uV64KRuckTlHMUKHYOrdFT6ILL2HmOW3co4NuvlorOdMGXDP6v
T6IoIFQS45Z+oQtE4rPUtGcp+DxotfrMugv2VEpufR5Jhaj5PuGDQV1wyzdz
oaCbBk6Or9YiQrpAolYqvn+RBnI9pwlbP3RBhfPHez5idKgvCE9biOkCtq8n
aFec6DDrbqzYUtAFT+9pOYljdNCZbTV1H++CF3V39rygMUDQ3ltpeqoLij9Q
zGI2M2GsQ3qPNa0LdAwjNOUPMsEj979JrT9dMGdJU+iwYkLcXV134S3dYHfp
wbf8Wia4jC+avd3eDWKF3GWfRpkgfzlNmUOoG6TKrL7O/mFCs8xmdub+bvAc
tLTnOcSCv8za0GqFbmhKvFVQ/owFP2w8HpxW7YboBevN+u9Y8Kb1gEXGuW5I
JNLZLqWwQCLLb2+4QTcIhgw8ymphAXPPyQ3cxt3Qf3SjFvcYC76/IZC8Lbrh
meodi36MBRdd1bOcHbqh5pjP5iZ+DHaPYGEjzt3AKtTnZojjPKcf52Hk1g1p
I/G7fU9g8PjY+pkzj7vheucVzeVLGJz/krUv17sb9vc5DI5bY8C3xYbj0Mtu
cDC/4HbaBYNkWnkz39tuuGCpGyf7EoM7ny8fcPnQDeINtRGxbzFQ1Jz0qovo
Bv6zI4wXkTifz3r27I/thmUd+9uDSRg0x/Acf5bUDV/Ph5GTs3De1YsN6E/D
7Ynyn5oqxsB24cTYyexu0BBcPPIZYTBraBlK/d4NnZdvP7Box6BsjTGtWdUN
Nszz/o59GPhn+KrH/+yG7Hd78qdGcJ622BG50tgNCZjcRD8Rj58zbda8rRtC
MqXnz1Lw+HPP6OV34/npOdYnxMTgm0174tbBbtDSKr/n8P/PO3iur9wc64ZS
nsHc/X8wUCv5a1I72Q1Pi+YDjBYx4HIMztxH7QZmIkaYX8aga/vejV4sPL4z
YqU8azg/V+bZ9M11Q+HR8xs+rGPg5KJVfGKpG2SfRBaH/MNAZtcgX8h6NwT+
bO5cxvXiT1dnCkcPbFScNxrCdc09turz3D3wLDlFURrXb8TCd8fx9UCbFyFg
Brdv3nzk/rJgD3yu2qNxZBWDfY/Km8yEe4CXoubRsYQB5cBliby9PbDYlHCY
8ReD/A7iU96DPbBky3/j6RwGz7w9u50le6D/Xcs5LwyDC1I80j9lekBo2aeF
RcNge3+M/175HsgOubyrl4TB4MsTo0+Ue2Bd+9cZmQkMEuXqTveq9cB03aLR
8iAGrqNX3spp9oBYv/ZD5W4MFIIZ5P90e6CUM/onvQWvv6IvTF/qgVlebRv+
Wrz+k4IRGqY9IGzK7ZRRjsGHsK8zMZY9MKDHz1aSj8FhWluCqWMPXLNvCzsW
h8HMJ4flnFs9EJbANvohHK//+b/GW+72wCOT+7fuvcbgYowYZ82THth2O54n
8D5eP0PXG7KhPbDbQsRF7gxev7V/VcHhPfi5LJ+kLo3B5owPu8iRPSB47zSt
fg8GURzljdHJ+O+XqBQrrOL7sZj7GE9ZD+jFPLH8VsiC4OsxL50QHn+jAqdH
AgtMt58Yqa7tgRgt/gNFISyg3LoS8qi9BxpiF/YkOrKAT+wrNjXVAxbbNh44
wcsCdfOXo5PUHvBpSP907S8T3EOvtRBZPcDOOv1dZIIJfey7v04s9sBm2U82
SvlMiCUH2Y7w9gLp8sKaiBETZHJdWrvle+HgxOv3nU8YYEe9UN6l3AuyUdId
f60Z8F7iQHqnWi8klT+azAYG/A0f9m/X6QV/S4/LgxwMqHpioNpi3QvaJ6UX
DgTS4eJ5mW81/r2wNHjny8oTGjx/xhP543Uv0ERF374yp0FuEflV9dtekG/o
Fs88SYMdR+McqiJ6YaVn2qyJSoUR3u0iZZm9cJT2yNnKhAqufbNBeT29ECS4
UGO7gwJvbhXdiD/YB+4ZYc0njElAU88K2iLVB1zL7qpn9pFAe3dKhqdsHywR
1XlJ9CnY0BDOMlDpg6EP3LfE/KfgyUEPz6XLfQClYgyV3Em4MX7ylbFXH2wg
HeJcWyDAObPcFM6uPmg9mnthV+QI/FX/NnXTpx9+KdAEOnc2gcfJ2kKhnwOg
pxxpeW6sC92Q3x//rnEAwiIFLfPsu9EVhWf/8bYNwBfDpx8bprrRGRV5hw2D
A6BQeklvlNqDNmgkb2OxBkCzKjrtNtaHQo38XepEBiHrrZwLD3kIZdzT3O/h
PgjT3tWc35XwecQ9fgv2aBBYQ7otUe4EFOKx+veW9yCk8Kf+lM4koHuPC1uv
BQ3CyPWu/Vf3EpGi70Ev/dhB0Nre+aNynYhqQzn7JJoHQf7FMYeG7Ck0nl37
X6f4EBR72w2dqJtGHUxOxskjQzDT6Rap/nsaVUtrGYRLD4GJ1uT9qb0UFJ9R
x2uhOARxgg0mFE8KckitDxkxGIKq/TGvWsSpiBzTGDr9aAi4n0ZaWjnQUN8I
14yO9xDMyXY/dgiioQZRXcMMvyHYuPvDobksGj4fNW13CxmC0RRWcPYCDbl8
bH73O3EISm5y5nkF0BHzza8Pa61DkOT+/Mf0awYaa+Gdt+0eAvqkVcXZNAZq
47loWj0wBLuXxxoF6xkoO6h1x8vJIZD9ZcCpxsZE9/zbPnItDcGF2Xk27ztM
ZPeT7++t9SFwuBT7sC6IiYw2XDZv4RiGQ4If+YMTmeikb7vQW75hSHP7/Ceg
h4nmvTo+Cx4chsKWOhfVkyw0VbZ90UNyGJw3pWy6qsNCvUuGV/pkhoEn+J37
DD6/Fz/q3B2pPAzKOQ/OvMLn+9Ri/ifLasPgF1w75o/P/5//GA1aaQ4D03Zk
bDmbhR4/6Irce3kYxMU0ovV7WOhmvsCyj+kwyLQv5x8is5DlrPFVguUwvP5t
PPhwgYVU7naLJDsOQy1ZQuLRbgytuPR8kXw6DJG2xo1/TDBkqmDzTsZnGCp9
fleH22Eok5386pT/MGi8PN5Z6orzSsTC/bNvh/FzMcz740sMlVz3ddb4gNs/
TqvWf4uh7bLcNtoRw6D25pxLYASGftSJ6BglDkN0KDJ6+w1DIu+Szpp/HYZP
SUtaloU4D1pLn7LKHMbvCUve9AoMtRwpOmqXNwyt+z/6e9fiPDd3dq9TMW6/
F8L6cN7zrqoXdCkfBlJsq0BhF4b6Xl/mvls9jPPE+9mdgxiSMRtYf1A3DGJ+
PwRXxzAUuN9+/nHzMATcv+dwYwpDE3Qq1bt9GDYOhTeaUjGkVOI+7tczDLOb
Np1qYGLond9KT+DgMAQvPAurnMUQ7aJ/85uxYRBNDO9U/IOh88Jbq99NDkOj
bDPl9CKGoqc+Fn2iDIPACe/mEpyP53P2fvvCHIa1Zsy1Eufni15f4+N/DwNj
5ELjBZyvUy/IfUpZGIbD+4L7THD+Xucv/S9jdRi4VJI/TOHaYvTcixz2EZjs
dVhbxHVuWrNn4aYR8E/yFHyHa24PE9fSLSNw0+ZBfyZuzwFG7Ku2j0D0j3YD
gzWcp3mcLH7uHAFtf9LjuysYEuxjGjSKjABBZdZBaAnn4QRPjdZ9IyCkLrDj
3F8M1br+U+w6OAJmYXqfsd847yoFHe+XHIGNcc+XxHF+9+TgPzAiMwJPDz7U
HaBhqL0tcjfh1Ai8nOr7LIDz+9EoCT6y0gjkuMksdOD87uv0jYN+dgSMO6e9
BIcxNCgnv4RpjMAOU0PVoR4MnVytYM1rj4Dzrk+Gh9owFNygNbVkMAK+5Q1d
8/UYUrW1aOewGIE9Kq/fi5dg6KPkRC2X9QjcEf241ScbQ6z5m2Vb7UdAd/Xl
ffsUDMX99zRl1+0RyO57/7LoHYYWzTm+7Lk3AszX+58fCcSQocSbMPGHIyAT
eHt57zMMbSiN8TrmMwIch98cinPEkJX/4fty/nh8KdmyR69gqPByzo3Tr0dg
peGwu6I+hpzI1UbwYQS4TbbcpspiqCpPV1szYgS83of890YcQ0LeXaq6MSOQ
/Cr0e7EAhhoFp46YfB0BE+WH+xPmWOjYuc3rN8pHoHaYQOnBeT4349uRgeoR
kOTbJnksmoXkdxga6daPAA8tIfoPvt9VpyOSj3WOgDtb6jsKfh5cCpHSnyGP
gO1ct7MRBwt1/W3zsGeMwMcNV8gmdCaysHsQ2zU7AkrGFNSK87zdqYrZwtUR
+JYSd0EynoncBy9GPBEYhQzZI15vcJ7/q/H7B23XKOjzfos0381EXpmf6FZi
o8AT2t/3ZYWB/H3G1dSOjsIvum1FZDUDfTp0n7RBbRSeKF+UcNdkoNL74Sff
3BoFp5e3bu6QpyO1YSXrtTujsPfq6y3d2+ioRnM04I7HKIymhgoJ0Wmoedfh
QUOfUbjRmrpROp6GRipLfHZ+HIWIfa+PZXDSEBvP8K/Y6lFQFu4uDSmhIO1E
cee8XWMQVdOgcLmZhOQj+A7X7xmDUKunz+y/kND+tytTQ+JjoMo8XSHmSkLL
T3odOKXHwNWtVfQzLwllGb22tVAfg09hWucTdaeQIPus2drNMRjLeJNYV0hE
49eqNXXLxkCQ6+/94vQx9EjsmgTBehwyzGiz3PntSJphtqX/4gRUrihOSmq3
wXdTAxRsOAGKGXe4Oy+1w/lKjQdqJhPASNwY+UeqA66+lR1OuTIBWZzdnKdO
dMJrOe5vHtcnQOiGxb1l5W4ge1ToCTyZgLYNBe8rVPohfk0i+GLyBMDGyLU7
1DGQviGsxv51Ah6+em++024cStq2/S5MnwCJallHmb5xaItbtdyTMwHXiepH
r9hNwNq5Pkl66QTcHfOZtdYmwNVXr5uC2ieAYuwgF7ZpEgS3zXDVLk9AYpHP
+pAGGboqgwN11ybgpPl++9P3yPDe9dCm9n8TUJOjXqsYQwaB5qscQ5wESPHU
bznxF9cBdWsYHwF8p9SnppOmYftK1G/RAwSQsuIUbmJSoCP99P2EQwQ47nyq
02QnFcKudGCHjxLgMvma1DNVKmwr3sg8cZwAW+xmria9pgLf/XvT2ooE+IMJ
6J7ZRwPeaa2RB/oE8Lr9VFBQkQ6/Pk5cXbpIAH+1RPVTV+jwRtNr8LkhARSG
3slRHtNhS2Ju32szAvS2WlnyldKBx0a0M+4aAZ7ueiarJs+A5i3Flw85EOCx
hWHjXyMGBJcZtmU4EqClz9lQ/S4DuHe/aim6RYAjFl8d/dMYwNU9U9fygAC6
xQ5PancyofHFf5pGngRYfepmvSjLhCC5wz/7HhPgIVWgsVSXCZvfWlUTvAnw
PpiSOunFhE269WULgQSYv/6d1DjEhPoFO2XvYDx/F80cbWeZ8Cp1pWRDCB5f
9M6HzzezYCPniaKt7/H1vUrnrE+ygBN9yTkQTQDqP6ZlsB8LhlQ1dcZjCRAp
fuv38icW5JQxJqISCOBhXRI3lsGCq8VnBQS+EqBTdODXWgcL5OTJGa3pBOBo
5I1RmmTBpvy3519n4vnZOCJBmmdBXta4B1s+ATJVZXjfC2Hw6ljQ1opCAoxx
h/a8O4yBdbpc6qMS/Pmwzp4NCjgfprzoZ1UQ4GICYdspEwzGJKTuZSACaKIL
p+fsMCiI7+K6UUOAwATBVok7OO9GH1AZbSDArbWA6+2vMJAX+dUV0UwAyWzf
Gf33GHBHeNw2bSWAUEwor2IMbm+nGOf2Dtz/ZzcCwr5iUPihLrqlC7dHtTh2
JQ+DYP47pwN7CfBW07wzpAwDu1ChNo0BAqy8nDc48RODLf85/ysdJcCbxZdH
f3RhMMG1PeLhBAFmk2rVs3CeK371Xe7EJN4PLlpxm3Dee8Np38Qg4f33rf5w
K86DDn7cDmkUAswpZlWw0TFQYstfvk4ngGfnBt0EnCe3Pr/6YR+LAIrhnsXZ
OG8SVzZID88QwNnK5vfRBQy+P/lW+2mOAHVC+YxtOD+/XTCxMf6Lx79DKOI6
zrPXH67+2bpEABu1TuoBnJ+V5pLfNq0QgN2ga9AQ52G++xePBKwT4MR0tgMN
11OsP0idnQiKdUkvZnBd5hp7ZZWDCG8KwhWu4zqMdmG2ZBMRLkfw+mv8n8dv
Yq8fcBPhy42zd9/i66mQP0vI8hIhdBMbmzbuz3ZH9XIaHxGOnuhRd8X9JRMo
Jqn8RKDChNo6Hk/FtXcM+x1E0JqZ4V7D430/qhwgtosIXSJPCm/i+XC2IooN
ChPB1PadyTkyBqqDwcXhe4jwsmph/RWeTwGLU5cN9xEhX2Fbp/IQzus9w9Nb
JIhwXn2cbInzc6Wxv2/DQSIwDATtpnF+ft8hLfzyCBEa5ZdtiXj9bl7qzVOT
IoJxRACXPs7Par+89ZaliaCmoOsvjvOzoN7hySJZIuw+/XTVKQ2DKq1HO46f
JsJFa9EI5Q8YhP/cl0VRJEJ8/U6xpkAMbp1r1EpWIYKHaZh9gxcGO84KPxJV
J4KyNYGL3wGD2/Llg9z6RGjvH38xfgSD6o7ezO8XibBTTfmx4m4MdrrN+Dgb
EqHuSrHtRi4MUMqhw3VmRPh14sBeTjILBHeFufva4fmUChj6+IUFNwsytGSv
E8HQjVGYEsiCyst1u8eciCC6zYZd5gELnIOWq87cJkKFxGnbdB0WlC85bll4
SIRh7dxvZkwmbP/kM5bymAh/bna8PtXLBKeTUXmmXkQYi9D9/aaCCdtut1vk
+xIhiv+aSOFrJlwfUU52+48INRIhlyfEmLAF8Z2diifCJn6bJVEZnKetJLd/
SCLC+wUhRNvKgKKF85PnUonwI/brvCqTDtfknryO+0aE+xf6/rhl0KEgYbL3
ajERlB5sLhbYRwcr/+93OluIIJxM1JydpULu/u5zvm1E8J/anwXNVNhYydwh
20kE7otL70UTqZDzR6L8TR8RWALWic8NqcDhHLJZh/D/eqw2bUyjwDddh/iq
v0S4U2luVaUxDfLS4mo4LMMHpBVvt2saqvgmhtEKnt/OEwXpdDJ0dNvs+sE2
CfK02umTH8gwb2P59ifPJHzSvmchP0YCNXfDZ417J0Hfs5se4jgFHVFqV7ou
TIL48Knjef+/R+gi28mfJkGF4/MTknYPFJloc4RrTsFrNrPkp+XNKEj/e8Ae
7Sk49nHtu3FhC7I+L8mVojsFz8MLJSozf6ENp7ZsLb40BQM9KZHK0W3okkC7
0MCVKUi992s1X6UTUTrMpfa4TQEvj4ZIzKZeJHLphlHyxykQ3T9+xMZ6BDG1
+rulI6ZwXulh128bQdVndcyLoqbg0dtvPfUwim4cl7Kqj5uCsDsT9vbiY6iA
l+VISZ+Ctxk3XWbHxpFBy8PH0lVT0MIjs7QeT0A+OgFxheQp+G4QEiXWNoW6
bG9ay1Gn4OCEfpf92hQ6+FBfOJM+BZ+k+E+YS5NQcwL/h6SZKWAvvRFl8JqE
dqzEvHq/PAVndPvHrIGM0rKK3e7xkaDLs8n04ZdptPwzUoqxnQS50pJzLjif
Xxx6Nu0sSIJXE1MHNmHT6Pem8/bXdpOgQSyvVuocBanatZtekiCBaWoa9x4C
BXUIUM5IK5Dgffk9e9FtNCQh2bL4VYkETSz3ZYlTNPQQsosOnCHB39pSSr05
DYm4esiKqpPgyUv1NEI0DTnWsR3g0SPB5YtyZ00P0tHiI2Eeig0J+Fs28KJ9
DKT3drX+uh0JLlI0yy+fZaCY5PGX4w4kUEi3X/O4ykAanSlrfc748xvavl4f
GOiN1MnZuvsk/F5KqXPF+Vx8VG8gKYCE349lrYF1TBRccybHLIgEa5nixcJj
TPT7q/Srzf+RoPdlet+hv0xU484nfzuMBFd+RAl+O8hCjlxdoSe/kEC2yFXX
1ouFfjFrbkzF4PF8omQXh7LQ6e6Cs5/iScA0XZB7lcRCm2I/0pdSSLBkrCn1
uomF0k5Zav/Ixe3t+NqzcxvOv8J6ex8UkGAwl3tWbB+Gnqyr/DlYTILS7Myv
UTIY0mvakxRUTgLz4G8dMzhf5GdvfapSRQJVt3jUZInzcfi6IaOaBLe5eDSE
nDFEt51Yv1xPAqfHrju5fXE+1+zsZW/C809I+Zv9H4YqJGsyC1pIoCLe/1/D
J5yXtxW8dGrD45kwSDJOwNCb+aSruzpJ8Pt161ZDnL/nB8NPNHWTYM++qFiE
87cNCuDy6iPB3vU7xxIqcX4Odi4eGybBsEFYdGkrhj7dvRIShu9L16papRmc
3/6Z6jpqEEhgV92lHoHz3U0VlTPzk/j7VdRPeQQMdew7JpBKJsFdg+/7VKdx
vt64h2pBJYFftGuNIgND8TTeam4GCe7/LryZPIMhro61T+UsEoRsrF5/MY+h
+0UsN7dZEvRZnn3QsYChoahxzX3zJAgPsSkJxflaw7dDtPMvCdK/dFUhnK8z
nH789lsiQaZAh48dzsMC+vlN8qsk6FbfMncf5+Wncknx5HUSvDMtF5zH9eTO
8EcR7GTY7h45Tsa1wYr/JT1OMthUTpjr4bpw4uGh1U1ksLe89Gwvbm9P/Y3V
LG4yRFmJm+H3PQr4ZtF9jZcM8YUi1N24P6wwnQz+bWRw3uqtAbi/5p7KL37y
k0E/kvdO3xzOi1ZSVx7uIMPECJ/XGM7Th8+Jyh7ZRYbAW3peFnQMvT3Mu2lQ
mAyjIZte4vcvWtiyNhK8hwy9yzzp0ThP280yC1T3kaHcJm7TrSGcL/vGglni
ZFhiBZekdmNIrqLdPv4gGWL+CA6Z/cJQREK1kvERMvTAv7eetRhiC8zbxilF
hm1hoUtcFRi65ZpILpImg8g/f9hagCEVRf9w4ZNkENTnY3eNw1Cfg7BCjDwZ
OO1mWl58xNCDt9n9+xXJsCdkx709eL9lkgZEjqqSQU7oCGXCA0M6/HcqvqmR
gZxZJ7DlFoZIqhy2sufIoO2zsbbMGkN7w48nKFwgw5vDJs++aWCoDNVolOng
8bisURjyGLKgW0yd1ScD21nfr4WHMRSm4XdEy5AMGRx5S/1cOK/P9mWZXCUD
o/TdI48GFord43q535oM8m1dNFYRC53RYZ+9eg2vn6lQ3Cy+Pz3ijsk7OJJh
qIubFPachcgXfcvu3cHzYbFtI8iwkN+TndbzOAc9/c7xnkOYhfalZKw9eoDX
x7T3pzHO11dWe9R9HpPhbuchl/d9TNSSIdkQ4kcGRaPI+/GPmOhmX9VN/gAy
GFVtbvppy0ScG0x5PgaS4b+B4C8eWkykZvn8YvQb3L9cXTVffibK3dzdnfGJ
DBVamwv0khko3PHZREMGGU5EtZdtKaIjuTB+P/0sMuT1MBqUPtJRa3nqgfYc
MowLHtVZ9qCjTYKdN/oKyZCMfKNUT9HR4x+HmFNVZGgQsMj6lUFD1nvbl9i7
yVB7EK2HvaIiPmH3ovJeMkSkDP/dZENFPwR33n84QAbrK77FXKeo6DC3FYUy
SoYs1wNh+aMUhM2R+9opZLjfz69SdJyC/JrWC2LW8X5yyLolWYrfJx4yd5Sl
puFryFZK08tJdPVup+Sc9DQcGe5IM7k4iba6eJAyZafh9BmLBX+hSeR+rcx6
/+lp0G/8dYz4lYjO6F3Q36w+DYObyS2J9QTUts/2aK/ZNJQHy5w8RxtHf5pD
iPdeTMMWhz5tisoAGtnSe3P15TTUdC38NKztRzUGe7DAV9MgNk3Uu3qxH4W1
ZazE/jcNNnQ0bWHbh6S6Gna0fpyGavPFghPPepDtILu2ZMY03PHqT92U3oHq
px9+I3RNg9SGUj2z9B8ogtPWw/ggBRbifM2Ijypg/fqu052HKaBUX1Km4lIF
jj87/lyWpMDyewPJbTLVIOd3/tFFGQrsquCOld9XA43/jj7VUaKA8tSltL3r
dbCwPOejZkCBi787n8t9awXz2df/SXlQwGFcQsnYtA8qDM8bpHtSYLIUy81t
6gOJ3FXeo08osHVXUWqJWj+w7tx9e+g5bu9hD+f3IwMQwDB9tz+IAtw9QaVG
fwahcHrfZ6FoCvwWrVRw9h4FwbGixA21FOD9MaGYK0KEt7ze3iX1FPhj+S83
xpgIPGc0r7g2UeDxdzk7pWAibIjo2trXRgHfA4YP7y8S4bcR9jh9kAIX4ok2
/R2T0FF39LIhRoE+Xj3L2HskMJjHJDf+pgAtLaKJkUiCRokSzrJ5CqgZsD8a
7CEB8tEqO7BMgR7pUM5g/FzIVnY4tMBJhcCs9UzZRXyfZ31ZiRGhgm3aiZOd
ThTgGnHoMxajQqPHtYSYdxTw55HK27yfCgdyf2xdqaCAl/P3G/cPUeHxOasO
JwEquIj3dmrKUUGpIXELuYQKOh/50uhaVFh53v1ohkGD2p+9fvE6VPhXcVTv
IT8d1H9H25jpU8HX+mubz2k6KF4+JojwOXWKl+p44BkdDnPrPH9vha/vKuz7
gYMBG71fmCrfp0L/q3S/8GUGFM4yltADKtxALZ06O5ngeONK3AVPKrxapqQH
yzKh9rIszcSLClsKn1gWOTDBX2LU504AFdLY//R/+ckE+c86h/4EUiEsIM0/
b4gJU1sKm72CqcAWaZ9nNMsEzT/BO1+HUuGEwYujcmI4/zcqfUuKpIKd3QsN
67ssKFRNNpSKpgLP7vbPFX4scMzb9jc3lgpvvlb3J39kQW0UWb0qiQpPHaux
LWUs8NhmTNZMxeNPDlIKbmHBQf/K/1rSqJC66/bF0BEWvHQL7xvIosLFIJdO
6TUWnCT+87qWSwV6imR1LS/Ot+a3xcn5VBCU0X1KFMVAQ13DdQ7Ps0rtO8ds
JQw2CM6w89VQwfD12U1+rhjkB1p9Da/F6zDYpajxGOfp1XoD0QY8no7SkFcv
MaghxXw++osKs9c5F6IiMHC/yn02p40K3NP3SlwSMZBo9yCe7qTCvoMafyu/
YeD3Xf/4+T4qfMySsWVVYHDyeElX0wAVMrDE8y21uH8JEo8Nh6lgTpDZf+wX
zpNCb8X6R6lgZvCrbyvOmxr/LdXYTFAhPcje4AHO/7//Od6cIuLPp384W41j
kOjRsfU2iQqeO7P566cwMKaeKZidpkLmox75AioG7LZfrzymUWHP885KCRYG
uV0C6+sMnHNmZL/s+I2BnfbzpACMCq2nblUG/cH5uoKqw/ubCg8CSEI+izhP
ypmx3s9TAZ1c/bKA8/e9lOoPwgtUqKub0/iN8/l+EWnl+CUqjB3bwHkX5/eO
t5/HDq9SwaDHYNAN53tfDg7/rHUqaDdQqli4lnt8R1KenQY3iobyZ3E9wRhs
K+Oggds/oSLP/38eYK/lcW4TDZ4Wv2jwxu2p9+UKN3LR4EM4i7lpDYMZvT3o
0hYafGHulxFYwSAeBTr2bqVBVERLaBzur6H8HLf1dhp4d4btycHjYUu3zSEK
0EBUcMOEOh5vPaP/TtxOGvhyx55eYWLwRs5Ixno3DRLExxbE8XwZezQzd4vS
4Oa5Y2eLJjHY9f18Vq8YDcpXPu8tGsVgZKXC9f1+fL09EyXi/Xj+QUH68gEa
rB69eWSlHQOZhqPfGo/SIMdGYPsfhME8T6JLwDEarKyf795ZgkHZJVEpDRka
3DrSzfb/v6/Q6tuaXn6KBo+C9Ay4IzHgEQm8+ViBBtWYW9NECJ5PG7ajp5Vp
8ODl9buH/TCwJv1OzVajgV6kEv/aTbzfJF1v3D5Hg/3Pr794a4UBxZV06Kgm
DU6e+bMh9CIGD+b7kxN0adB5shDGZDFQUjJytDWgQYmrqP/x/RisezUfEL1M
AxMOKwZjGwbBHJWJ4aY0qNNyt6hkssBQW8HByIIGsTS9xbZhFgj9lyPOd5UG
fRwri0ZNLEgUSIwPvEaD94Ln3LMSWVAqHhj71IUGpc0v1WovseC5E5utohsN
eLcerHdRYoFm+hOx+bs0sM1uig8QZ0GHnGu020MaiJlhi8K/mUABoyg7Xzzf
R4Kdmt4wIftls6XYSxoc3BWQvNedCR4N54WHAmjAtORqoZsz4d8lhQiT/2hQ
tHu2AdvLBCFb0U8XPtGA/fHkUGYaA0YSws04ImlwT8wjtv01AxJJW3dWf6FB
saeG1x0XBhx3YwtXTqDB4eHdDRJSDNB8RnonnUmDCo3rwp5JdHCPygkRqKHB
hP9av/FzPG+rUYE1tTRAYtf8FK7gdbd99cK9gQbb2wLak0/QIPCAzcOuXzRY
O+PJcXCSCtGZPDbv+2lwO/3Mnmp1fN9UOUkLMGkgVSIzuW16GnZPirbw76ZD
0ZahHY9JU2Cjtbnuhwgd/sxKfJTIn4LEr7+r7ovRYUeBC/He8ymQdm3K75Sg
g+OBiuerO6fg3B/PqHfH6cDZTjSiqk+Cy+auW/zn6fDsi9Eq7RUBKo8FcfHf
oUOi+di1lsJhUOjZ1fr+Hh2s534VrGsMQ+6zr+92PKDD4sbWK40dQ5DYWi+y
+zEd9Eei/Q7RByHo7sbj+/zo0O1y86CS6AAYF/gZHf9Eh/Pf/03puvTAtIp3
lG4VHbTl/Lm9EpqAX89d2o+PAXP19rk6jako/se2LSr8DICGJgk+3m9ITjmL
OivIgJRB0qUrl3PQpaOUVHthBsQnZYYK0QpQ8CZb8XMH8efvTdOsXSoQ509d
ITYVBki1qCSKptWjv2fE2Z47MYBQkqHl/6UbBRRUjZ2+yYBRluF9Z7EetOOY
dSUTr2tHvzjGiu1Bp0Q+P7W5x4Cr5CfphPhedG+R94+qFwM63Z793hnfj6iF
i9SVMAbYyKZnV70eRiPHO7qfVDBgrTQ9z9ibgOLo/N4ciAE7g98diMwnIId0
k8MhPxigrWqtHTlNQNSD/Y/j6xngcPWl1U9DIvorOibW0MGAkqHV+a/7JhE/
D8N5B4kB6c5SOWw5U6in4Th/7DQDHDms+PzGp1BEwN2yIzQG3Li2yy93Gwnt
ZZ/jPYMxQHqckMF/l4SkF5fy7JcYsHJx1LFDkowukDevZm9lwqOXfOuxb6cR
d7JuitJ2Jjg7Sg9GlU6jX/b/XaoRYELXwBMPpalpZDLKl9C7iwnPRzFtcyUK
suvZeWFVnAlG1i5neEYoyKvmQJiuAhO2XNwo1LCdhtR8nZS7lZiwQ7928v1p
Gtqg9pVofYYJgnmaH/5a0lBQqdTpe+pMSKhmmL9MoKFPuSeGPukx4TRlA1fS
MTrKjYWDU7ZM0GujqAYcY6C5p3Ob7e2ZsPejBHVRh4EULL7SR68zofzs4me2
GwxUvm1bQf9NJmjtQ+ebYxmo3nfsXAu+zyeVokTObGEiLpv3h3QeMuG/WPNd
5w8xkb7yBe66R0w4SU1sHVZjoo7ZrI6qZ0wwqc8mVN5jomEH72v5r5iQTn9m
p9LORHvhxHnZ10w4t3VrfyWJiexESYcz/2PCqvulo+0rTETuNmClhDHhfOnn
LVGHWWhGc493ZBQTZtU28TR6stAp8Q47oRgm/Mj/9zzvNQt5rr3U/BDHhB7L
YuvD0Sy0UkTfEpLMhMI/qip5iIU2HSmP8s1mgoRhtoImO4Z0Oe4+X8tlAkeM
S+yL7Rh6My7h8LSACTFEWVedfRjijwiW9PjOBOLVWcv7ZzBk6qG2dbaMCQ6+
LnzdOhj6ZPh7xq2SCal7KUaVZjifc1/97lyDz2l3vWuk7mDoGmlr9FQtEzT4
jN9nPcFQ4o8fPvYN+Hr2qQrf/TF05KmkttUvJuzbtWzmGIkhF/NRqYE2JpTG
8fptTML59uQ7PrNOvB9M66eOZ2LoJH2x91IfEx5flKgVrMTQw4bM0pYBJuTU
qbN14nz9PckuRmeYCeEN/2Z34Py97LPjRd0oE/qVEr3HuzB01rrRUWOCCVnP
VF7LDWLIV+mZDiIyoawvY3XzOIZqdshJq5KYcLwh5YfTFIY2zk5uK51mAuta
9k9dKs7XrZ/nTtOY0Ph+90wBE0PB6fr9+Qzc38fcCsmzGGoN+Fcmi+H1fv/o
lcgfDG13KIjNxOdOMfZjPUKLGDJWc/aTnGfCprJKwchlDH0UEb2R+pcJS7lf
ziSsYmjgb5vugSUmXFvboCm7jiGRbr/j8Sv//16L48j5fxiyyVHgF1tnQpDh
i4kRXBdfXeTrYGNBWaCw1xKu+TaV8b7kYIFpu9SFV7h2zvPiUdjEgvvTZedf
/v//CazPclG5WPCl2+zxDL7ebq5/G6O3sOBm/VZ6K+7P/YJqjst8LHye9koR
xf1ttvVj38DPAt1v5QWD8xiS4NH8VyjIAtqnBwe58HifFm1ccxb6//dqv7i+
MjDUbdewLCLMgjbDBx7F0xiS5n292CqK64RobwUihvxL9P767mWByPN/qkdG
MDTiwDt/Cr9nj9n1twb1Yug0X9ss+QALPpyZvGjVhiGyoxHTQBK/t0f2x5lU
YUhtuyD93zEW2K9Yf39ShKHP5T2UfBkWPHwxYciP94eOwJWp3fIs0Bmy+vbx
M4biK4WJLQosfH6yb/J7g6Glm8Pjz5VZMC/asJfoi6EMZDs8pcaChoOK5xed
MbTh9v7Bz+dYsI2q6JdzFUNWQsQ+PU0W/OzxHxg0wBCvm1NXri4L9n45Xh8k
i6E7Iq5Nz0xZsN7M2GrBYqH6uuMNshYs0Hc7bJs9wkL77mO1REsWnGL9Xnna
zEIdDe7VOtdYYGNIuPUwmYVOPnxSssMF5wxzgahFIxYK3n+mqMGVBSuxzR0c
qiw02bKa/xTnEvRQ4kjgIRYKl/DNnvBggXDmxaaFv0y00P4qJdOHBezbUl+9
+cBEhl46Sddwbvk8l2Xg+ISJ0g7zJAgEsMBXdC26xJaJrnqHRD8OZsEtX62q
riNMVCEV/kET55qXaR/zKAUM5BuQ8GIkA9eB/2lzFdLR1keb9eyzWHA8R+3k
gXA6irrpJkDOwf1HuSe6HtBRgb5yElaI1/+6vgvrBB2R+TtrNyAW9D47vX48
nYb0Y9m4JLtZIM9v2K/uT0UDoTc6snpZkBQpNTZsQ0WOL35FnBzA7bnmJggq
UtFzxwhJ1VEWHOLXQ1YUCsqVktO/PM0C97fPDK5doCChkmtvH66wgNuGD6pn
yCgprc58GeeqPynWd+/XkpFc1LF9Pmw4BzmfDGr6TEa63gs5QRsxOOXbKHv/
LBk9Ox/a+QWfIz3vbmjM8ychYnvVjpoD+JxJOzf7mWMKZVHEvvAZYECPC/+p
2DiBgmIC7MYuYeDiHv1y6r8J5GjMPJRthAE/sg1XvzyB9lRU5F60wGBg+EeY
UMY4Cg61qn/jgMFPTmm7XWWj6KZC5CzPEwye5nl+C0CDSMJ/h87mVAy4PZJz
1e93onWlZ1v70zD4rpn7ag+1Aw0yJ7tScS7bkDlNTrHrQGEWBTYX8jDYvPn4
1c8xbeiflPGDAJzTZi/y069cbkYjnaGxHDiHBcpHD+2P/oG+v1q43t2Lgdis
28d/L6tR+JlrkkkDOAfcmX0r2l+F/heQAG//S6UutELe7z8ka3Thm3O6v7p4
zcmB6e8/Lirlfeamsb+WLTWPUezvPwq5dzyO5a6/ceKcVCHv7z+QmyzUuHyq
vyhMbN/A9O8/JQUJDaCpob8EAdSkkPfvP8GIOGwPf5q/4LU7amD67z/ZMnmK
XaqRv7xqoy8w/e8/vloVCauqgb+XHwv1///vP10wjc7jNaG+CTu4Ww==
        "]]},
      Annotation[#, "Charting`Private`Tag$2818#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
QQwmLlX+OEu5fOBsfrVbZEbFv1egdNU=
        "]]},
      Annotation[#, "Charting`Private`Tag$2912#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Plot of some of the basis functions\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.828842577851224*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"b0e9f4c8-d4ab-4d46-855b-b38aeee025ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dvsin", "[", 
    RowBox[{"j_", ",", "y_"}], "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"vsin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], ",", "y"}], "]"}]}], ";"}], "\n", 
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "n"}], ",", " ", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"grafico", "[", "i", "]"}], "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"dvsin", "[", 
       RowBox[{"i", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"grafico", "[", "1", "]"}], ",", 
   RowBox[{"grafico", "[", "2", "]"}], ",", 
   RowBox[{"grafico", "[", 
    RowBox[{"n", "-", "2"}], "]"}], ",", 
   RowBox[{"grafico", "[", "n", "]"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Plot of some of the derivative of the basis functions\>\""}]}], 
  "]"}]}], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"57449121-1525-4106-82fd-92a3e09f8a48"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt13k0ltv3AHCZ3vPIEEmZkiEi5Haj+e6ngfKSrkgpmYUGU9NFyFQRqZsr
GaIMhSsyhuIYG8xFyhhJhvd9n1xFVHzPb63fH2ed9VnrrL323mf/s5UdPQ+4
8PPx8XHJ+b+b7TLajscO/kHp7Lb8oUzRgrvkvAZkN0CNf+iNOeLfU+KTCmV3
w/xLM8PvxMMKasEX1M3g3NZMn6/EJs1dBcmyllC8OHIFQ6wWpZixoGQNK67P
GYwS/2Q73XZQt4VGne/NA8TjYR11DnEO0Hw6tK+T+JDzzLO/ZZ2BO5rk8oq4
bpdcaW3ScWg0Nzz+jFhPdXv+VyV36PIJGHhEnMRvn7U67SRY6Bq13yVGQyH3
rdQ94EBg6tZo4vIPr5trLb2g9Gz0Sj9irz+d2TZx3rBhq7ifC3Hfuiu7omXP
wjGrtoSNxLEpK/Dqo+cg5Jy0/UpitkT2tsqk81A8O5ksQFzCa9JnlHxBsyko
9OUqij5la1twxcEPXNN+X5tNrNLC6K5K84esySsmEcTXc6XWmKsHgtpiuemd
xIaK6eljrkHQpWhzSZE4sCFhSbXlJQg12BM6rUTRGwy0o63jgiFdXGUqjTh1
2f7LkbJhcPzeen/OSor2b75dZ1UeBjFhgo3lxFbhH/hVj4aDB/8/t64Qi37z
DqpIugw/bOavKxD/1RH7F0cpAuSy9q/boEjRFlF9JU9wBEh0+RhOK1C07m71
b2EOkTCl4dVRQjxcWOqtmHYN3pajY78Tm9/qPmGmfh1e3FKVlZOnaG0T1Sy5
59fhqHLEdKsc6bfAqc8jrjGgsW/cNIzYrmz+cZXlDZBdVOA8KkvRyzRv6B6O
uwnnE/rouysoOhgVakTIxkJ1smY+XkbRWntuXi3wioW2H261B4lfh3uO9TyP
hW3rLy4ekybzI6Cdo3v+H8AO27eIEDf8StfteB0H36NEl26UIvVOxekrRd0B
xTeHyraIU3Txb+fi9n68A8onqxULxSja1stixntLArDuRZZqEudxJcrqRhNg
taXTNUlRij4wenXbCcMkcBYwLm6kKDq+z29X8fxdCDijJT8uSNE7FKzT+w+m
wMQ9r25D4vEjG4VQbgqsWqhpTRGg6JUcX6dcnVR4MVxhY8ZP0Z7uBqv5elOh
pv/AorgFREs55z3M2HQfvi6oXWqdRfRh63t5XybTwTAjsnCCg2imx1LkvlwG
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

        "]]},
      Annotation[#, "Charting`Private`Tag$2961#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
hRKbW9ME8lp754doINUet3XmsfMEMh3jq+g9z4Pitvpzv/lIpJLuFZx7kQcG
62PE9wqQ6NOi9Qstw3hQ1frLQXQBicwGPilGX+fBGn1Vd0lREqneMmbvucWD
jcYjCZvFSDRjnpWtncCDMXescUScRGVFAQbvUnhQDkb7UiRIpB4mZ7Ewiwf7
FJaq58mQaG598OKuxzywyFPcmCpLoh7O0IesPGo87O8UhMuR6IZT6QHzYh6c
yOHP2iJPIm/xJUvly3hgv9BDR45OIou3oSNfynmQzzRexKQ8r7P7VPgran6F
nDsPkCTqZT5f71DJA6MszSppBRKVx6vNaVTxYNDngsgbyj5z36Nq6nkwXDOX
Pr+ERJale3bGN1D92VU3Ea9IIk0vLHukmQeqf+3T1JVI1N9+/Z7gRx7Y2SnN
aCmT6FnElNvHTh54Zy8sSvvf+fOmg8sfdfOg1lPhlfj/zqu/13H9+6j7r9ao
nqZslalXtpXBg2p1w/6PlLX2JgbKDPIg7sQcT1eVRAKSc8bsIR5M1ZzdF0yZ
Ue0uVDLMg5SsSOXa/52Hn2t+f/kbD2K/0DcIq5EoceV/123HeeCSK5cHlP3Y
qfZqPB4sP+V92o/yjiQhhR8/eHBLVirhLmXtHd5MPMmDd2UT4m/+93+AvyPj
xhQPbnQu6u+mzHq66dihvzwwt7QWoL7v0atjj1bpz/Kgz6giZIpykorYr/l5
Hvz//4X/AzZfjUU=
        "]]},
      Annotation[#, "Charting`Private`Tag$3008#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
M/wfXOfFIg==
        "]]},
      Annotation[#, "Charting`Private`Tag$3290#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
H6cpLfoyP8+O7//3S/0LzcP6mA==
        "]]},
      Annotation[#, "Charting`Private`Tag$3384#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Plot of some of the derivative of the basis functions\"", 
    TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8288425782542577`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"2b9577a6-587f-4566-a0a9-f606cb512e18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"j", "=", "1"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"j", "++"}], ",", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"j_", ",", "y_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"vsin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], "/;", "  ", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"j", ",", "1"}], "]"}], "\[Equal]", "0"}]}]}]}], "]"}], "\n", 
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"j", "=", "1"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"j", "++"}], ",", 
   RowBox[{
    RowBox[{"dv", "[", 
     RowBox[{"j_", ",", "y_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"dvsin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], "/;", "  ", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"j", ",", "1"}], "]"}], "\[Equal]", "0"}]}]}]}], "]"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"v", " ", "[", 
      RowBox[{"1", ",", "y"}], "]"}], ",", 
     RowBox[{"dv", "[", 
      RowBox[{"1", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\n", 
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"grafico", "[", "i", "]"}], "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"v", "[", 
       RowBox[{"i", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"grafico", "[", "1", "]"}], ",", 
   RowBox[{"grafico", "[", "2", "]"}], ",", 
   RowBox[{"grafico", "[", "n", "]"}]}], "]"}], "\n", 
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"grafico", "[", "i", "]"}], "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"dv", "[", 
       RowBox[{"i", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"grafico", "[", "1", "]"}], ",", 
   RowBox[{"grafico", "[", "2", "]"}], ",", 
   RowBox[{"grafico", "[", "n", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{3.8282296013713584`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"d96c2444-d214-4ce0-8615-7c66efdac775"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
1w==
       "]]},
     Annotation[#, "Charting`Private`Tag$3434#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt13k0ltv3AHCZ3vPIEEmZkiEi5Haj+e6ngfKSrkgpmYUGU9NFyFQRqZsr
GaIMhSsyhuIYG8xFyhhJhvd9n1xFVHzPb63fH2ed9VnrrL323mf/s5UdPQ+4
8PPx8XHJ+b+b7TLajscO/kHp7Lb8oUzRgrvkvAZkN0CNf+iNOeLfU+KTCmV3
w/xLM8PvxMMKasEX1M3g3NZMn6/EJs1dBcmyllC8OHIFQ6wWpZixoGQNK67P
GYwS/2Q73XZQt4VGne/NA8TjYR11DnEO0Hw6tK+T+JDzzLO/ZZ2BO5rk8oq4
bpdcaW3ScWg0Nzz+jFhPdXv+VyV36PIJGHhEnMRvn7U67SRY6Bq13yVGQyH3
rdQ94EBg6tZo4vIPr5trLb2g9Gz0Sj9irz+d2TZx3rBhq7ifC3Hfuiu7omXP
wjGrtoSNxLEpK/Dqo+cg5Jy0/UpitkT2tsqk81A8O5ksQFzCa9JnlHxBsyko
9OUqij5la1twxcEPXNN+X5tNrNLC6K5K84esySsmEcTXc6XWmKsHgtpiuemd
xIaK6eljrkHQpWhzSZE4sCFhSbXlJQg12BM6rUTRGwy0o63jgiFdXGUqjTh1
2f7LkbJhcPzeen/OSor2b75dZ1UeBjFhgo3lxFbhH/hVj4aDB/8/t64Qi37z
DqpIugw/bOavKxD/1RH7F0cpAuSy9q/boEjRFlF9JU9wBEh0+RhOK1C07m71
b2EOkTCl4dVRQjxcWOqtmHYN3pajY78Tm9/qPmGmfh1e3FKVlZOnaG0T1Sy5
59fhqHLEdKsc6bfAqc8jrjGgsW/cNIzYrmz+cZXlDZBdVOA8KkvRyzRv6B6O
uwnnE/rouysoOhgVakTIxkJ1smY+XkbRWntuXi3wioW2H261B4lfh3uO9TyP
hW3rLy4ekybzI6Cdo3v+H8AO27eIEDf8StfteB0H36NEl26UIvVOxekrRd0B
xTeHyraIU3Txb+fi9n68A8onqxULxSja1stixntLArDuRZZqEudxJcrqRhNg
taXTNUlRij4wenXbCcMkcBYwLm6kKDq+z29X8fxdCDijJT8uSNE7FKzT+w+m
wMQ9r25D4vEjG4VQbgqsWqhpTRGg6JUcX6dcnVR4MVxhY8ZP0Z7uBqv5elOh
pv/AorgFREs55z3M2HQfvi6oXWqdRfRh63t5XybTwTAjsnCCg2imx1LkvlwG
fBcaYCkSX7ZFLha7MkDG1qvFdALRhU6eciWxGXBhLqDgwRiixT22h/tvzAQn
35Iu9gii60PeHxEOeAA9UX73jQYQvf5fSWEFlA2NfQeSpdsQ/VK33r5ZLxtc
p0wtpVsRbf/4r4pA62x452gRJNWC6OiSAa/B7GxgCut/E2lC9CjO7cnclwMr
jZDI5+eIvttp/Pi3W//CbfPbcVZViF68EGyzZ2UeTLz0vyOWi+h490O22kZ5
MBaY920wB9FqHdr2kh550KR9uqsoG9F/ZHU59TzLg3slLWutHiK6LCuuuFQ3
H8L2a8pdSUM014Lz1KQlH7wPBijev4Pogw9vN54RK4B1/7INn4UhOulYiOlx
5QKQ6XS/4BiK6CGp082H9Qugb8Ol34RDEO0ZsLN1+7ECKNUc2W4chOiIA9zX
rNwCOPFquOyZL6Kf/dzZnWhaCJfaXMztPRC92pw3WnutCPp0uuOjrBAtF7Rn
i+u9Ivh2OyF80BLRS3JTr4mUFgF6oVGxwQLRc8hC13yoCAavKi96ux/Rbbj0
TP+mYnhZNvpDwBjRfnrB898/FYNHUe9zsa2IbpGQltalS2Eq43j8e0VEX2jZ
DPFfy8DcfJ+vdT+LFtct/vQSlUPI+T9OuvSy6PRovagfCuWQlik64tnNottN
Nd7bGpbDhHfF+UtvWfTaRukzq+PKIaq+gXWjhUUPPGcyCzZWgKo9n6B7JYve
U50h3uz3FATtpA0Fkln08iLJ/kWLquCd8XH9DwdZdMnQrqbWbTWwJpG9RPGh
MF1zIlnemlMHzYe/1MkMC9Hf1LdL5J5+DmUPJ7X3LBei+WdzlsivfgVL68uf
aKgI0gYL9iUWj5pg8JWdYOoaAbopbENLg1YrhJrcEYhR5qeVbkzMZvHa4LAJ
P5XyhY+emBno79R7DSmLupa+D1+A9PGKV+LX34CuPW5d3vkTxBUfMMPDHTC6
+6lexZI5iHIvPp6q9hYe6yS2L3GcgWk6Z9gtqAsqN2zfPm33Fc6uryuSqX0H
grXdbiYXJ2HgUd21duVuODfTuu3jdQ78ONGRqOnXA3/qCJ37oDICa3ew5o9X
9EKkm3thjfgH2HNf2fXx8n5wHT/09GjTa7igaKcyaDMALk4e6o/Vy0Cbc3Bx
174P4BAbkS+z6EnVUokvqG7uA6xw1n3INntTJViVmKeaNAhHZsMpv4yBqpMb
Kt5TJkPQW5l9TMh7pCrH2DG1cnoIBs7smtrbxan6NiG3ZCTuI2iZ6i3503qy
qthij0Ds7mHwy77bbHTma1XQ3vCUopFhaDdSsI7aNVOl3Md+lxb+CdI+qSzs
Z2artmwMi5VdPwLXdku8Zpf9rLJZ2Tq76M0IuFilWIUaLFR9exU95BX8GY4G
SEZ6fOTD8YK2Zw+ojcIj92vVXoL8eGl/8X3+ulG4ra9gZCEugIUCgi03e49B
vffJICE5QcyXZZs3JDUOKpnR4W4LgtgnIS9aqmYcJHQ9AtM/COFna68iSY8J
YMt4VP6WIYwl2T7aIeIckHzB7uwwZOHUaonFWyQ5kH+DvdVmLwvrbc4dm1zK
gRN17d8H2SxstmY000GWA5z4St/R/SwcKWyrvEONA5cbJK8PWrOwYK2xDN8W
DnSs5HsfepqFp7cq8wW6cGD2oVH1lVss3KvT9sb3KQeoV5MRod0snDIhGSBQ
xYHEmOZc/14WdsyyUI+u5sAh2yArn34WHlPr+iu1gQMqDqP6R4dIPPl+xedt
HIjVOKUpP87CkiIcV+lPHGB7ur+wmGVhoxHWz0diXFAouCr9QAZhKt04Y9MS
LsRp+Md7rkC4yeGaWY0UFxznIpMN5BC26BO/17mcC4Jvb2phRYTtO5YZ/VQm
70+u3VethrB/jeoNYwMuVB+xTPJfj3D+XVAbtuWCl92tjFZThKf8plgODly4
4ewibW+GsMGhBxN9TlwQEBVawuxHuEJCorDLjQvuqma5yALhhkv9Oxp9uBB/
wSdAyxrhHscAu4LLXDh8M91ujQvCwhoVCZcecUFNf1e06EWEjQU8A3/lc2En
Y+3uEYBw1ICKo18hF0JyPFtbAhGWjI/UPPuEC/WauzdfC0ZYgTryxLWGC7Ny
7OD/LiO8fuJ7p9lbLmSwutv8biJ8LM9AUnGeC5azyh+9MxAuOfJdvI2PBw+8
xt9XZiIsLlwuGirAgyu90ctEHiKMbbajMcQD7wfoaGI2wioiuxeKlvKg0pOt
kJWH8IizOddUkwdu6/Y6e5ch7CF36uVFSx5UzfT6FDWSeut1nq87xIM72/d3
v2xCWMmbqRuy5sF03JfQvmaE25774L12PCjRP5O80EryPedbKn2CB9VdDp91
OxCeab2c8W8QDyJW3WnY3IvwpfB7wb3ZPHg8GWzAN4Gw2AUW2yGXB8nZYvMt
xAlup6VG8nhwHodBEgfhQpPNaUwRD9I+8+ut55F8Jdvr+Kt40J70qd5kEmGT
u3xI8w0PNMoayvVnEH4Xc7wtt5MHTeeOyHOInYOb4te/48Hb/+S/pX5HONA5
XnNbHw+GRH4uFZ4j86ClZ7L/Mw/uTfPNP/uJsEyp3fVzP3gA+3m+w4sonPaw
3mruFw/UvJzcQvgprJewVimIjwHNBPvWlQIUNg6YybsqxMDywSZhC0EKX9wV
054owcDro65yWcIUHmqtlK5RZaD9fm3T4sUU9qxW6zNSZ8BbywduEv8siMxo
XMPAvik5rWWiFF4WZ2XQqcPAAcWtrivEKLzXhndodCMDDoPvg0QlKJw7qpgo
bsrARTM+tRwpCl9NDrfvN2PgzJNL6WpLKex8gLv6kTkDN3+Mb00iVnj6NH/f
IQbGqg7nhUtTODLmaEOUIwNT7LQHO2QofHx37TUbFwaUQ/37c4h3zmqZa7sx
MFHzfa30cgrPOs71NJ5moKuoRmSA2M3gzqSILwOyi6veHpOl8O4JvtJufwZU
1caqnxArpbpdzA4k+dRfrJWUo/BbahOLHcbAl4x6qpLYsO+tQkQMyV9L8/6C
PIVX/f3H0OG/GehpGgMTBdIPo8wHa/5hIKJxcCqWuCj/3PoXCaSfUQ53VRQp
rBImvZeVycB7SdFf6ispPL/poljXQwb+DPvPxIn4Pffj68wcBk77f85PJr5x
qPCY0WMGfv058VRUicKnROVVZYoYOFs26bSDeG91yOinEgYSy7+tOku8oHXg
TPhTBh7pf+59Q9w9ULbpYBUDps7NPXyrKFwSqzyvVsPAfOz9L2uJPea/XK17
zkA5n5jNRWJ24WGz2FcMaMsnFdwjXu2Glzo3MxA6LaZUT9zbHnNX4A0DXsYx
m4WVKfzk8ozTm04GdBrvfFYljt1qp5n2jgF5lYAcIPb60sDz6WEgW29juDWx
SYZu0c5+BlLn6896E6sfifOVGiT/V6bhd4WYX2L+j6GPDGQWHPknkbi/1kWw
YIQBfqdjDbnE5X81vwweY8DJVVeskjhORz/GnEPqC2lybyL2HkqyVGYYSEk0
6H1HbHpbUG5ykoFYfNL5I/Ea01MD+CsDFaon+TnEgos60m/MkPiKG0r+I/5Q
vPWE/Rzpn2ZD0Azx0xNp6/R+MXCMs8qO7Kf4ttLibwsLDPz//or/B8Yx5RY=

       "]]},
     Annotation[#, "Charting`Private`Tag$3434#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-3.1415926535897865`, 3.1415926535897865`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8288425783590193`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"8c0f4b41-e7e2-46f4-9bf3-e8b5bc034e69"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
1w==
        "]]},
      Annotation[#, "Charting`Private`Tag$3482#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
/UUWBbS3Dgj9Ifynzia3ZoYCqYbVl/4jnJn619OAmwqTN+OK/xGmYd3Q9GVU
iOK3l54jvGFfeIowPxXS+qT8GYTNb/WW+whSYcG0gUUl/BQp9PWKUWFa/+b5
DMJlPJ6zWlJUyNi1s+0h4VkDJJQsS4X+6QlTM8LKoXw7V28lLNDTKkLYoc1C
z30HFd66TVtRyP3jJBIvdu6mwteXlqz7hNusWbcPqlHhcKCQvyLhVe/UohMP
UqGnQmtDLYmvFsM/c5kWFcpOLym9QPimUlOdsx4V4ltcnNgkP5keEsNUYyqE
Hk2WdCdMK7D/t+8EFeQMmpvZJL8bFjMkXp+igtGcQJgNYQvtv3u5zlPBeDrQ
oo7oIzhQ9/glWyp8t3fctJ3wnFCvv/I1Knh+F2ptniX6Pa0QF+lO7h9wMH8d
YYc4j/w5bypo3nn21pzosW0rH6vcnwq+5wKjvkyR9zmoZnH6JRV2JroM8/4h
7+Pn7/o9jsR3xlaQh/hjQ3Xjk01vqWCTfVtvjvgp2My+mPWZClhFv7WG+O2K
w/OtfuVUaDJa775AJ/pP6zkyUkMFmRV4JptG/De21cqoiQpKhx4G2RA/69wu
DhPtosIS8+udb4jfN4aNzqVwqGASabk+rxdD8UXflOwJKjCvuStr9hD97RU+
822WCnERd26X/ST1rUO9oGFJM2Q9bynKIPVHXDroBhZrhrMXlfGOZgz5HOkt
s+ubYa3l2UYfCukfJVntXLLNsDU6fKSoEUOUXZeK0PZmYD/pq99Zh0EoVWFC
BZph9LqaS3YZhqzbRUmHdJrBK1Vodwmph6bHTE/oGjRDY3zEnqpiDKFj3lmn
TjbDz8kbE4WknvKrVbveutwMvOPFt/SyMfBWXGKh0GbIn78kyk7A8C5q7nVN
ZDNQ76Vz+ZL6rnM5xKj5VTM08B3Yu/I1Bn++3NSBt81Q6nDXbRnpD4umPI68
Bc1QN8Z//t1TotfepGHDX80QP132zMULw+hMf1/7rhaoDOTXOKKNIe9yaJmh
agvkrfeSjyT97X7n4Q9IowXij+4S79Mg/suPu5ai20LmyUHJU6Q/at04t3DH
qgV6HmZ96d2MIWayQ2JzYAukPJlROkz6rf54o7l7fwvcix7MNi/igPDFu/tp
Qy1wKDOAEZTPgT7qDikrZguUnnpoUpDNAc/Mp4NHp1pgGZ9cxmwyBxJcDdwl
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
        "]]},
      Annotation[#, "Charting`Private`Tag$3529#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
QQwmLlX+OEu5fOBsfrVbZEbFv1egdNU=
        "]]},
      Annotation[#, "Charting`Private`Tag$3905#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.82884257871618*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"84349fab-8cc5-4f54-bd42-fc13ac34bf8d"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt13k0ltv3AHCZ3vPIEEmZkiEi5Haj+e6ngfKSrkgpmYUGU9NFyFQRqZsr
GaIMhSsyhuIYG8xFyhhJhvd9n1xFVHzPb63fH2ed9VnrrL323mf/s5UdPQ+4
8PPx8XHJ+b+b7TLajscO/kHp7Lb8oUzRgrvkvAZkN0CNf+iNOeLfU+KTCmV3
w/xLM8PvxMMKasEX1M3g3NZMn6/EJs1dBcmyllC8OHIFQ6wWpZixoGQNK67P
GYwS/2Q73XZQt4VGne/NA8TjYR11DnEO0Hw6tK+T+JDzzLO/ZZ2BO5rk8oq4
bpdcaW3ScWg0Nzz+jFhPdXv+VyV36PIJGHhEnMRvn7U67SRY6Bq13yVGQyH3
rdQ94EBg6tZo4vIPr5trLb2g9Gz0Sj9irz+d2TZx3rBhq7ifC3Hfuiu7omXP
wjGrtoSNxLEpK/Dqo+cg5Jy0/UpitkT2tsqk81A8O5ksQFzCa9JnlHxBsyko
9OUqij5la1twxcEPXNN+X5tNrNLC6K5K84esySsmEcTXc6XWmKsHgtpiuemd
xIaK6eljrkHQpWhzSZE4sCFhSbXlJQg12BM6rUTRGwy0o63jgiFdXGUqjTh1
2f7LkbJhcPzeen/OSor2b75dZ1UeBjFhgo3lxFbhH/hVj4aDB/8/t64Qi37z
DqpIugw/bOavKxD/1RH7F0cpAuSy9q/boEjRFlF9JU9wBEh0+RhOK1C07m71
b2EOkTCl4dVRQjxcWOqtmHYN3pajY78Tm9/qPmGmfh1e3FKVlZOnaG0T1Sy5
59fhqHLEdKsc6bfAqc8jrjGgsW/cNIzYrmz+cZXlDZBdVOA8KkvRyzRv6B6O
uwnnE/rouysoOhgVakTIxkJ1smY+XkbRWntuXi3wioW2H261B4lfh3uO9TyP
hW3rLy4ekybzI6Cdo3v+H8AO27eIEDf8StfteB0H36NEl26UIvVOxekrRd0B
xTeHyraIU3Txb+fi9n68A8onqxULxSja1stixntLArDuRZZqEudxJcrqRhNg
taXTNUlRij4wenXbCcMkcBYwLm6kKDq+z29X8fxdCDijJT8uSNE7FKzT+w+m
wMQ9r25D4vEjG4VQbgqsWqhpTRGg6JUcX6dcnVR4MVxhY8ZP0Z7uBqv5elOh
pv/AorgFREs55z3M2HQfvi6oXWqdRfRh63t5XybTwTAjsnCCg2imx1LkvlwG
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

        "]]},
      Annotation[#, "Charting`Private`Tag$3952#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
hRKbW9ME8lp754doINUet3XmsfMEMh3jq+g9z4Pitvpzv/lIpJLuFZx7kQcG
62PE9wqQ6NOi9Qstw3hQ1frLQXQBicwGPilGX+fBGn1Vd0lREqneMmbvucWD
jcYjCZvFSDRjnpWtncCDMXescUScRGVFAQbvUnhQDkb7UiRIpB4mZ7Ewiwf7
FJaq58mQaG598OKuxzywyFPcmCpLoh7O0IesPGo87O8UhMuR6IZT6QHzYh6c
yOHP2iJPIm/xJUvly3hgv9BDR45OIou3oSNfynmQzzRexKQ8r7P7VPgran6F
nDsPkCTqZT5f71DJA6MszSppBRKVx6vNaVTxYNDngsgbyj5z36Nq6nkwXDOX
Pr+ERJale3bGN1D92VU3Ea9IIk0vLHukmQeqf+3T1JVI1N9+/Z7gRx7Y2SnN
aCmT6FnElNvHTh54Zy8sSvvf+fOmg8sfdfOg1lPhlfj/zqu/13H9+6j7r9ao
nqZslalXtpXBg2p1w/6PlLX2JgbKDPIg7sQcT1eVRAKSc8bsIR5M1ZzdF0yZ
Ue0uVDLMg5SsSOXa/52Hn2t+f/kbD2K/0DcIq5EoceV/123HeeCSK5cHlP3Y
qfZqPB4sP+V92o/yjiQhhR8/eHBLVirhLmXtHd5MPMmDd2UT4m/+93+AvyPj
xhQPbnQu6u+mzHq66dihvzwwt7QWoL7v0atjj1bpz/Kgz6giZIpykorYr/l5
Hvz//4X/AzZfjUU=
        "]]},
      Annotation[#, "Charting`Private`Tag$3999#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwU23c8ld8fAHAjIVIRITKK7L3d+3yOUDKyV0WRhIRQaUipRFmVVNIglURJ
9jz2zszel8tFqPRtod/z+8vr8zrjOedzzvO8Pu+X15Vw97c5zsLExPR6HRPT
//+aHp/pwAx7wljVXvaCD6B1hsIBo0IasOOJX4IwGas/e5j8UcgIlIOujfz1
AjQpsuvqOekDgLZ68Ow4AcistTfniZAdrMWfVL7qAWhXtOjLf2LOMOMRZi3l
BmjF9NgDN2lXeMS/KWqDC6DZ6901bolucDqfb1HFCZCjx8+yu0Ie8MpqU8pD
G0A1hsIF1cmeUKbMXWlgDkhlJzV7WcwbTvImn1EwBpTMcvSN1IuT8A16GU5U
QBwT4akO0n4we/WQRb0GoOKxztZquwC4z2LWfU4eUICVh+nhxNPwYpNZgY8E
oGHlm4YxQsHQfPPRLUEuQAnPBLHUoTNQ9zCPpXuNQKabMijlyWchY98FeudX
AuUvtGguip0Hm6SvqsmfCeTr6ppz0+0CvP1uZnyijkCSnxaVxF9chAKDpO3n
8gkUm8UrYy19GcJVPR55JhDIWDQtjXEiDB7YiW/eF06gy3VJmyvtrsCWcPOZ
U/4E0tBSiHFOvAp7Unmi4/cR6Dm/ZcQtoeuQMVyGtBep6GLrgxqH4uswHXLD
0KmXihxujLHsPHQD+m3yC6rLqYj7x+mwkuQI8J7pPHDpNhWFdCeEzItFgb5h
aMoNESqyjR7OL8RR4MddfYHrHwUpGUn/uO52C/4xBzDGxiho8mPBadEXt6FS
zMo7NJWCrO8N+ByQjoWhIW3uu6IUpGC2841wfSwEFOyPfvNHH3Gw+k7TT8RB
UP5yh0CvPjpStPahwi4eeCY/8/0Xo4/4ZeOVnBLvQF3yfuGx73roKsfH3VFC
CaC68e5RjRRdJLfvTmROQAJsrPlZbBigizpv+DMG6xNgpdlG6Qmhi3axKrxV
OnsfLEy3fVXv10F1q2lK3Z2JoBls/FNwvQ7i/p6oKRb9COJ+2EVsQVro4fAF
w7y1pyCn5mqnhtSQgYhz2oj9M4havno6/q8qmj2ozcaR9QwORgj8OpWvinbM
nz+WpfgckN/ttXdyqsjfW0uKaeg5iDtHjIRtVEG8Hu/TX+qkAucnbU/ikjxy
ck55v/Q1DfLuzfex5EqgxUG7DanCL6Fjm6iWsagEinDlOG5r+BJYZubGRCLE
0cdj/sL5CS/hb0tlvmbWDsTjR71xUfsVmLuw7QikC6Ha8P6D60NfQ/0n/js3
KJuRWuaW9SIcGeDzx/b632ezFY1KtUdbVTLANWPPkL/Wt4qjH0JKLjtngNUJ
/pMBIj8rYvJHA8YzMoAj5JSbdRATnsFZg68s3kLQH0tpfZ0N+Onn/R9U72WC
ae6eG21tApjr39XD+3a8h63nVAf6Rnbhh96Orgp734M916nLmf5SeFe3wtEt
fu+hvS3p/b9/Uph403tssOw9OP16rLNNbDcuepOYV6CUDRJTW/izHGTxF9v5
UrNP2eCScyQjPl0Ra3D2UomJbLifd5mzTVkJXyivLFf5LxtAwCLCKV8Js8s+
wPw7PkCzVpIRqlTGEmsGNaOnPsBWyuFhtmkVbJ/+oDloYw7YxEUGBo+p4WSX
cHNPiRyInvK9nyuqjid4T7U6aebA4cKTCuEH1bF/6J42qksOvLXdwoE71XGU
zZdO9qwc6GUz3P+sTAOXrewZeGz+ESrWOc2UXNTC63IUD8Ue/Qg2tf/eKX3Q
wqYnBIeuBH8EPoctl4ToWri348vw8eSPIHnUQsfmgDb++urhuPL8RxDQf+qg
JKiDpawXZqpv50J4lCRrTLwuFg7bp3ciJRcijhhzvse6eHPW89sbCnKBWev5
he1LuvgPh62S9UQu7Oa/4vPJXA+344KgEZ08mO24IX9+VQ/XLmyuvXogD4K1
Cf7m3fq4WMRHQMojD3RWRCJcrPXxyxCRopNxeaA7IuoHqfr4gsrVtV9TeYA2
v3vQp0fB/q4Dlsl/80DLzb1n0xEK9ohWT4Et+eCZcZkzLJyCLWemDCMo+RD0
kf8kcz0F73puGsV3Lx/+8B+QvrSXioU+vRjIT8+HpmqfeScPKuZZWZE/WJ4P
eR1Pgz2vUvFvx/efnjPyYbz3+ZPNRVT8adPWrUqoAALXTthF7yBwNfXU8Q77
AmBRqGcb0CRw4cm6/OCTBbA9hSPXxpzAL+pDnEsSyfZJ83tVZwn88EdHhmtm
AfxjCDwqvEXg2J3yK8xVBVA45Wzc+4TAIWHDT02+FEC+1srF6EoCn8rSWppj
KQQphfsbJDsJ7D4YZxAnWAj9eyVMRsYJ7MTJuKumVAixt7Nq8RKBLbT3TH42
LIRvjnuFG9cIvOf4Y83zzoWQv/fPxH9cgHXuLUeI+BeCImOoar8gYMnFV7LH
kgrBNj4t0EUJ8DZRpovrswuBqWz0lagOYG4z55Y3tYUwp/WnmNkAMMv5HFGL
wUI4eNowgHM/4J+vuPyXlgrhco5IrIYV4PluD3xvfREkp/4ZD3cAPMFSvkVb
pAgisj1h+RDgXpVtxwZUi4DTjOlK5FHALa4BuaH7iuDeYug18ABcFd3IJuFS
BJ0b3ykLnQBcUCzpWBNYBAH4XAC/N+DMmYvpJyKLoODgoLaGD+BUgc+/Nzwt
Avvmb6FnyPiBkZLZu49FsL77K+on+0cH3ky2biwi3z/pG0e8AIc/H/uyPFIE
48v/2XF4Aj73SRceLhfBJ9Mp3OUOmEcpb6qRoxg4176Y8hwBnBajEv1XpBgU
rVgUIg8C1vvyVk1RtRhWHs6GGdgD7jDf3e9qXAxHP248oWcJ2CszNSzeuRgO
aQWsDzIBvMa1Q7rqVDHU3Pl4cw4BTjj5qOX71WKI4+EXSiPzK9+8NUgqsRiG
cny/JCuT+5eLF3LMKIZcTgVKjxRgp1tcOLK8GG5/OmxgtR3wjf0sG+fpxVBS
KXuWfR1gkTehH0X/FkPv5xoN458EzuH47Wy5qQRs8prraxgEHq1ffJWjXQLr
KA4lt1oIfHb3SYtJsxLwozi2dZQSmPsm/Tv/0RKw9i3ecTiTwLp7h9H5yBJ4
snKVgxJF4PaXTtMZySXAuu/Jhbvk/fVk644Zyi4BNq9rvYrHCHyvpmkA+ktg
6844NU09Asvt2nv19JcSkPCzUUjdRWB8rXL3C+ZSiJvh53DgIfCXPYXB6+VK
IUO6ISZhlIr3Vb7kab1QCl/XUSYunafiEXGJvLXYUuh+qDqs4krFwVeSD6m8
KIXrR/ouqeyh4hS4l36vuRSMWI+78nNQ8d+yK3sOipTBD0mxyKjbFHxXdGXm
tkoZrEDfiXc+FCwTei6uzKgMrp4qrN61n4LtKX5D4qfKQGbjsjznOgp+X3zo
7HRZGTSMVpk2nNbHe4V7RYQ6yyBmfcaFeDN9PHTeptqUXgZBW1c4P+zSx5y6
+ze/4ymH0akmtn/devhYgVZG8JFyEJgUj2Io6uFtuVtGmJkrwL1NwnCkUgcf
jv5rNylQARm3rwUnxOjgVI+p5jqFCnB7ZxL7yEkHK/AXFd12qoDI9oCQxHlt
vOfs0fv82RVgmswpE8GtjbWSHV8lKGNYrHVPTlPUxG6ur1zSRzDsM/3xh41Z
FV833f7oEQNDxZITT2+RCn6lFd99axlDwo8jl5UDVfA8zwWzUxsqQWX7HP9q
lTI+W2Ghq6ZVCXkaf5yenFHE0eI/tpbGVAIlR2VwW64Mzp8wbGmjVAGmpo1U
eoniHpOrX2P2VYH9ITsjfWkR/N+7cgFzmypovnT319KEMNa+qOvWcKIKXgW2
+mscFMSFfMr/4btV8Hgh/QmvAR8uMhIWz5mpgjcfG+gTi8y49NVSUEJCNVgb
NqTL+LGjIW6lRzbPqqFYb0Q3mXkDWgk8Wb45oxpGX1/5dzCBG1GBzhFTUQ3t
V6stiwY3o/LewSc3Zqthov+zK9dvflTBUV9/FtXA2WmvppMbxFGVz5PtzvM1
4BHqyL6hSRZ9ZJw86fpfDWjKyM28dJBDaV56JceYauEq3fFc6oQcuuHZe9Bv
ay1sPhntnf1LHpm4b0m6RqkF/xGn/6pFlFCb8w3Bd9G1cIEI4V0VV0W4z9br
Y2ItKAjkn491U0XZjpKFhc9rIX6JqTw/RRXdta9wrM6tBZtTi2214mrIwfp3
Yt9QLfyJf70vV0gdDZmc4mdVrINq1u7i6B8aqLVe/ziHdh3c3cjdMqikicr3
bsjbaFAHeWHTxRknNNEzo9d2gvZ1oHVua09VryZyR+P3FEProPC3gnLBBy00
o23P69RaBxKS20wTzHRQf/5Od5feOjDPtODad0kHNWl+++A+Xgf6MWbZxzN1
0Fv1OOtTP+rgTceAyMQGXeSn3BgfLloPu5vmogqxLvohTd2UdaoepFUPLizy
6CNiYk/9rZB6YI5rbpLQ1UcRT0zCvK7Vw9AtY/a77vpIYKvd4s5H9ZBj1r5B
9qM+0mI+2ZZUUw/pFcEOvGYUdLk04GZIWz0cLWTsFvSnoLpzZ8FhoB5ksppL
be9SkOPC1fdbluohoEzE3KuHgkIGH8ZFbm8AL7Prq/N2VIQTn+7zlG4AY536
iohAKuKwSftnqNoA5qoGmy3jqOhRw3v/f3sbQIzzs5JXHRVNXMvbPWzdAG+1
uM8UjFGRHJSMFh9uANmvFbpqf6ioOK/O8mxgAywUpPm/liMQy+kWdrvQBuB5
pxj53ID0jkJnhWpkA2g+nD9V5UigwdRh5S9PGmDY96jq5asE2uVKm25KJ8dz
G9AF7pP+EWI8S//YAM5mBQI9rwm0Ere8yaORnO+M8GBtE4GMzP7UG3ST87Xf
OvtjgEDR65muiI02QHf80+T9swTqrmTTWWU0QJGa5VjlLwKJhnItDSw3gL5Y
zoDLekCeOlvSC/81wK6ov3KifIDefRc4mrihEXREr579twPQf+9EBIP5G4H7
ZqnXOjlAhI9ku7V4I6g1WXyUJ/0XISUTqSzfCJn+qxvPkD78NKaINmo1wp2b
5VpjpB8FktV/zaJGaL+c/dXXApCro252g1kjiDeKc263A/SKF7xeOTRCj2u0
xawzoIVWI/Hrbo0wxZNyf8AVkFaUaZ+bbyOUpBHlc+6Awoys4uFcI/BPnMsQ
9QTU8M/eRDS8ERrN7xkGkF7eXHKI6W90I1i2c52neQNyOutW2PegEZzV76Bz
pK+fq54IyE9thJ1uHInyZDwz7yuTkNUIKRG3LzKR/VXSA8dOFzbCI1af3z/I
+UOOhTy0rG6EC8oyO7hJb+Mdl60UPzWC1LfLa3uOkh4euMbB1d8IESqH8pIO
AbK6H4VnaI0gsHH4GJ8DoIdWcSF1C42gteKgmmUJaJzrvkra70aIzTQ38zIB
JFefNHN1XRNYVZ+eMkKAAsOfPz+yqQnO+6brGmqTvqa+cqIKN4FExb+bxxQB
sfx+u3m7VBOM/vgg8EoS0PbWPd9BuQlYdkic7d0GSCOl/7OHbhOwJpcLmnAD
Or6f/fE7iya48vaT6cw30sOiT0O7HJtg3fStc4JTBEr8qnH0l1sTRK2uk4zq
IVDDI3epPWebgCOgx0WxgEDjp36zn7jSBEFv4j64vSLQH4P42du3mqCvupa9
j/S2wmzZ+89Pm2C9pWBQNOnrOD0hPe/6Jki/0rVfQoRA6TzZIrEdTVAR+/J+
IBuB8MTefzmDTRCmeKuRc4GKvt0KrllZbIJDLefUuMtIbw+2HYgXbIYWZgmW
QBsq8n/vqZon2QySgiJerFpUFHltlW9AoRn4vFZLRgWpqEhevn+nQTPou9ms
uzREQSKXIo4VeDcDy4Wfs46HKEjTSnTvUFAzCFJZztjrUtCBXbkyzJeb4YUe
lStNgILCWsa/mN5thm8fsku12/TRhAg1ZKS4GbKsAiutdfTRm7Lv0WzcLaAy
VGIqOaeLqu7c8pcTaIEPFeHnnpbrooHjEjaW4i3gyTzFc/GOLuLmsdz2SKMF
Qn5dH3PW1EUBrhkpCi4t0BfR/6j1jA7S+nc03/ZdC8yHWi/dH9BC5hY43Liw
BfRyhmTyXmqhY4/FLLWrWsDVV+ScRYAWitcemRbuaQHx1JNWC6xaiOF/SGhi
tQXio/Oub5XSRMlj9pcCLFrhnutudSErdcRcZbonZr4VSr3X2cW/VEIt1zU+
1cm1gW0r394X4UJIb1Mzyx3NNoic3j7sTxFE6Y/ctA+hNhCXY71094cAuvYu
9vmifRuMndr1evX4VqTXNxMoeLUNTlTUT3+6woPS5Z9s8+ltg0y24k0NMd9h
DyM8e/2edoiXKrw9XbIJn1f61HRyXzukd93aObB7C84OEppqN28HsalRFZPT
vHjH2nuhx47tYNlRZ/SAhR//5h0OVz7VDuun6mPYdgjjbIq2vdPDdvisqVYr
KyiJxeLnfr9ZaAeaTH5TWZU8LncLe5PzvR0C7z75mm2hgF3V+ZxLfrWDYvyP
vT97FXByj15hC0sHmGxcswyYVcSCorfOLgp0wMcCUZPDrCqYN0PmuwZ0gEVy
yq45bjX84WJpKtWoA9RTLspQzdWwlYWVzd79HRB9sT5Q7LYajls698HRtgP8
VqOHY9nVMbd2vf+FEx1QW7VYuPhHHbPVHJ+viOsA59XpfSFNmjjt/u/HDQkd
cF2HbVScRQsbnYgx63jUAebLqVsNdbVw+Ia8jIkXHTC/wCWy+FILr1mt82Yr
7IDqCoMHlSHa+Ndw6pTpWAds358orc+qix+817pvO9UB7pa+u6ZVdbHW1Saj
w7MdwHM93+z3EV18Zte3F6eWyeerS+SZFevibz4G7vEcndDUzSZ0+4Qenvs5
OvJZpRO23A9rvvNCH+efiKsy1eoEA0Gsq9ysj6/0Eq8q9DtB99glA7Zv+lig
4MmpN3s74dzfqAYHKoWsFw+tXDrcCf7XVJ8FNlHwRvqGsa9unfA9PSm5YI6C
++yLqz1PdIJrx3lRRW4q9tMUum0V2AnlsT+4XplScdJyj9CuyE7QS2lLKCij
4uMeEasPYzrhQZTJZa8+Klbp1hzfeK8TwiLF9ht+o+K6jwnpP590QpXMr9Sg
nQS+s9Mo2vdFJ/h5bu2oJ+v/w/e++4+nd8K23tYdhtYE/hpoo938sRNcbrAn
ZV4kcOkE83ZU1AmLg+jBozgCR9h8WMst7wTvHXdt36YSWERtc93Txk4Y/u41
r1dH4OmUijd8bZ1gdvNTY0EP6Zst/jGR3Z0wqsjn5UgnsMnXVrvA0U4QURZQ
XGUBzOcWqjM92QmaXRYRLJsBj7QriBye7QTa6GE2WRHAb9DQv/bFTjibtc02
YDfg4OzbNOMfncD6+d6OPlXAIK5fX/ynE7qC5USP6gPeED+boczUBSwmFzZw
GAHu/vcoNo2tC7bd8U5vMwP8zH9/oBBXF1zv3V2RbwPYZ/SXfezmLtgcoixa
5gRYwzJdl1WgC5Q49j2YcAH8r9xRNGR7F2yMDufYTXqzSYmd+Yt4F1wMM7K5
dRzw/af5k27SXZDwgTjMTXr1KI9nQ498F2z9Hrg1i/Ss/GX+TDPVLjj/QN3f
l/Tuf19q4rBWF1Q27DxhSsaVLsFBmpQuWMrSXt37f/+27nTMMOgCZY9cHXfS
047ULj2xfV3wskl5dzLpbcms8B0J5uT+JOKHlkmPfxFRY+G06YKiEK4g38OA
C6PHp0Idu+DHL2kuVkfSzyvxjd8Od4H1j7zmQtL7Fr4o64R7F2j39o3H7Acs
OLQYP3SiC/QH/l4JNyD9b/Ys2PpUF4g+/jyRSHo3q+SAU11gF5SeP76vWQlw
iPyavn5IF/xu/bostguw4eMssezQLohcZNO5L0h6nMuFVepaF7RvDjgmz016
fLakiSe2C/hMKoZLlgjs98Byp8+9Llj0L6L+GyewthHtYu3DLjhqtp7/VCeB
m55sULz0ogsYEkwjjdkETjB9eqM3vQuO0Q0Ki54S2PWn6ojauy7gfPN74PNt
8r5aOccxCrvgwd1vnPdJ3xavzk8blXfBcEqEgu4BAl/PuIKeV3fB679KNVw6
BBZcl/7V4VMXpO2uKCM4CUwU/GdbQ+sCy4MsLAspVMzhcStTjNEFn7yTW7dF
UHHn5h1sFxe6YE5309kz3uT75mOcr/q7CxqHFy60KVJxtGiC4DOeboh5zmrP
n0XBDk27T//h6wYhlY3jy7coWOxcSaO9UDeMqB/l3eRFwTntExe4d3XDyR4X
5Z9iFNx/TXX4vG43LHhls+ZE6ONUlVrNz0Q3+A1fMA531ce+w06xKkbdMNP8
ff99TX3MpH0Fpg90wyPVOa7IcT0sPfspxc6DbHd98hKr6OFgK19P5bhuWC25
8ycuSwcTq//KbyV0w8ZnW5a2X9DB7Bn3ttEfdcN6h6ev14x1cBJrSUNyWjdZ
dZezfBrUxpX5nPIbirvh28nFL6X/tDCP6OvFyUlyvak8fEpymhg5XBumMbpB
/XzjiX9LGjgw7kjzxEI3MAWGt9gUaOAeZsHXY7+64SqTnsaNPRr4KT3SdYj7
M3DunpQEW3WslO3T2qXxGViT/D8bH1HFFoZKb6uuf4aFmmu2qk5yONo7z/P5
rh4IoQib/EnehGdRViSXXA+wtnjzubNtxPsEX2acVe6B4o8s8Su+GzBLfcKC
uV4P8G+V5ePTY8PndwWf/W3ZAz9lk5jvPf5R4TmqFmFzsQcOtf6nziS7DAb2
2S/XdfbADN8rF58KIfRUIb3ev7cHfm37V62+fjtaYX3OGBjqgdz2b3+p5iKo
MCdO8cN0DwSIMA0tfd6BlDb757ms9kDexpEKn0UJJNKsWJsv0wulfoqXfUel
0X/o7aRXWC8MFcUH9e9QQaVpc4/PXe+FN/bxLx+6qaBwDgXbiKheOBaQNv7t
hQriac+sfHGPHN9VKhC4WxVJH3n3dOR1L7xX++XoL0t6NPSDk117LzSG/Fzk
FtRAIuNfNx373Av8vZZlVbYaaMJIrf70QC+oRU7v+Rurgfy4P2rGTfaCJ3yp
XWDVRBGPc3mbfvVCSFTe1cJpTZRXVNACEn1wajjm7+v72uiC6K9rB6T7wFZO
WGyqQRuhqzr6LvJ94LPz1du4v9qoxaTozQXNPrByo0jKHNFBk73FEXn7+6Dl
TiUYi+miDP2/1JoDfTAbtduixYKsz57p/+i07YMO07eeBRd10Ypn6bEllz5I
fdRun/dZF239rwzJB/ZBHiEtrhauhwac137qnuuDj2tf/Uve6qHnZcR7k0t9
0D8ideR5tx5SuFEh6hnRB46Sj5TP79JHRlsr/zxP6gN2iWxW81J9tCGEOef9
sz7YtV3t6YMxfdQ+aOBdntYHT1SivbTXUdDhF1W9g+/6YOJnrmTAfgoKVqvJ
FajuAwpDV+V9MwV5aog/v9PQB/NLCwObv1CQk9al29yf+kDvYL16ykYq0tfT
cGfp74Ohz7DP1JyKFCjxFqEjfRCWFEBx86GiHcS8zi9aH7z575vdi5tUxLIn
bdPCQh9UiPC+fllBRcuGTH+9lvtgv5ubmccAFU0ZH6bTfveBw+vAGdNlKmrY
v7Wsf10/0JCxVIwUWe9bX/epFe4HiZNNmZ2hBLpiO2aPxPthY0D6YtkdAgXa
UwxKpPqhczp0pTmNQA7Oy9s+qPQDoVhnc6CBQCaHrFgVtPrh7KDh48o+Aum6
ZC680u8HBeaet/YzBBJx86hN3tsPvA+eeI2sA8RzDGdvM+8HJyXHvZ1bADEd
F0m+a90PwW7qllOigL55htzc6NgP6aad8ttkAdG8ugMjD/dDZZDq7RPqgLp9
VFxZ3fvBWvydZA8FUJ1v9P7LJ/qh2Zv9nTvp1UK/GY3fvv3goXh0kZv0akaA
kXhwYD9UNaP33baAkgOfcy2e6wfX4oelRaRXY4JX/vMO7Yc79Ir5EtKrl886
TUyG94PR7Lntg6RXA0JyW49E9oMy7xe5baQn3S9sLhqI6YcCzQLW/3vV7pJv
mv29frA4OpAwRfpz7+WGuPaH5PrM67v+71XtK7sumj3th5vvD5VKk7FM+BXP
uhf98J/ThNU3crzw9SFrgzf9YCvOlzRAzs8doUMtfdcPv17xvh49BmjtZoKM
dm4/6MyejmEmvboUtcSXU9QPx18reiPSq+O3zf8pVPQD5U7W4WR7QJ0x6bOv
a/rhu0N1PD/p1Zq4dT2STf3QfumNRuY+QPl3jlY+aeuH0+tZLh8FQOn3SjMF
P/dDxrfudDUtQEn3BR/eG+gHwajYn5IKgG4/CL7GM9YPYedXc1QlAF161O4X
NdUPcy1Wckf4Afk9Vji4bq4fstL5P77lAGTzbFLlz49+cD655PdinkBGKUjk
zF8yv1fGfC2HCaT5Ipl9iWkA2sqXtoi0Ekjwtd3IFNcAiPzIUhDKINCGN9mN
R7cMQPznvGemDwi0ksGdNygwAMcjonOfXiPQ6Lua2x0SA/DykhnrB2cCtX9Z
N6+2ewCEOLyFBwxJnyoYmycoDMCucDkBFUUCPc+o5XbUHoBx5mzd46tU5P6q
LmbIfACmfe/S1idQkc3U+gWqzQDU79PIeHOOigx37TvwzHEA7gXgqcsHqWhX
aj2Pu/sAuBT9t1AtSkX0Jw1x0+cGoFr/8UxbEgX1DHEsmYQOQM2JhVbREAqq
377fKiN8AEZ4s3a8tKOQPmvcfCpmADbqXJk6xkVBPveb7nxLHQA98fU+5f76
6Et0y73V1gG4a3wtdXCrHhpp5l527RqAY/vFWoGuiz5tsLDDfQPw4tt3y8V8
XfQusnXrNdoAnBjaf1vTgfz+Xf90n+P3AORvOLHzerQOWr7Y/oBv1yBcsv6X
f6xfC00Wb/4VLDsIHznvR0g+10Kff1s59SgNQrTD2euGnloo/1yH4CPdQZAB
DtecJU0UEtT5aIflIFgQPYUBaxror0/3Y9kLgxDo+2+OvqaG7LRc7iiFDULa
xMkb6yvVUCYzPUL9+iCw/LxinBuuhlwf/jxNjR2EoMoUKbxODVXWCptYpw7C
6OSkbzWrKrop7rYc0jQIp/OPS6QMKyK+ni/mDcJDMCPFUXeVQwrJG7CveZYM
QcTXDGVG9RJkZ7zd3YeHQEheMuwQ1zRobLWy3l83BDeyrZyviJD3fvphmnzH
EMiOq7QH9LdXHIiRM1uiD8GWJ7a5WOl3RWC/xcPzvMOwaGvOIlG2GRedTlCL
9h6GF/zf19iTJDExqHN41W8Ydg1i4216O3GV0fANv+BhSOSTdHrSvxM3bZPu
twobhkeb+IRXBKTwUFlBGP/9YfDkocVF3tqNmTYMtjzFwyCVvtSxyVoB70uV
OPFh2wiwcBq+I56pYY2HPNJ1IiPwjiFYJjaihsVj/04OSIyAJt+GU7dF1PGf
85/d1ymMwFTifMrKA3WcZR3l6ohGwHjJ5JlIlAbmY/5qv+o1AoxzH0d4bLUw
08/hrbx+I5DwVyp2NkoLz883dUkHjcCYQziHHtbCdX1p1lah5HyTzMLK8tr4
fLaTxYs7I+BTXZho8Ucbjx7BRvuLR8DlvtLE3ku6uMU+i9W1YgRyuQ4+b3ij
iwvNkqoCa0ZgdnNWUUaPLr6rHYySP43Az9CRtNtKeth4kwxlcYKMfRWbU3v0
sBob/1/WmREIfeOYx/lPD+/4y1ws+GUEJDrb3jdI6+Nf9EHtPT9HgO1M7Ypp
sD5+Wx6nfp9rFNzaXy7uZafgh7mXvr3ZPAp/jHN17OQoZP3s/aGcfxQCUwzM
c8wp2DXRUHlGbBSWD/0X5hJHwVv8fsrpa4yChAxR50x6de3YJMNSdxSG7nB/
65Gl4lnnjnQPYhSOXqDlPN1LxTXGb6VjTUbBNXRZnusyFZ8TPSI5fphst/e4
bDxJxe5WKg5DbqNw3FxJPO4vFR+4xnyr13MUsr+hMCleAkszXnxtDRiFq55G
LlpUAvOKnJFqPDMKpx4XDbwn/bp6YK9zzYVR6LOO4A0+TuDu3BlcfH0UBEIy
hwZuERhPFy3nRY1CHrdX3KVkAr8Vvi3zIXYUjF8aUU9kETj8imL864ejEEwR
/MPfSnrl41p16pNRUMxINesfJLAzve3nk9RRCPU8LzrJILCKeeCRhMxRiOiP
+u8TK2CRMMN7cR9GgXtzm/u7TYDZc7bW38ofBX31i0LdwoC/TU79uVEyCl2B
M70gRXp3W4HSVTwKWqMNR76SvmoyjXS/VDsKv4Z3n5vRBpwX6px4ronc3/WT
M7sQ4OfZck2BbaPA22cf/mof6UXa39VT3aPwc5lN8NQB0mcCrare/aMgIvz7
Sogd4GP7nx73GBmFxMdcjxqcAR+45P/oCI3MZ/F55OIKWO89aj04Mwotx8YO
aZG+lZ7YwuzwZRR2d1K7bUnfbuGnaVh/G4VDQt8S80iPruzL9TL/OQrNCRX3
D5FenblwI3nfyijkU5rrjEnPzjrIe6UwjYHmePKuYDI+usTHIsY6BqOmYu/o
ZP+eqJXHyWxjYGLw3PMJ6WWznVOawhxjYHqu3f6hJ2Bc2tr2YMMY/DlcfbP3
GGAth3xv/o1jcKl3gfsQ6d3Mxaes9zaNQcqI3B9J0ruSUTefbOYdA22mD17K
pHcfSgZox24l52/cfvaKNenRUqcOrm1jsI3f00iA9P91e4OTUUJjsGww+3vJ
EPDvBVk2dpEx+GrmVrmZAtgvkvfZ9R1j4Ns63nhGHfCkxF8dFokxeDA1sldc
DnC7XYvvqtQYTDyduLqXH/Dehdz1F2XGIK36bmkVJ+DSm0+e/5IbA5Ynm47f
WCXw62K/7u/KZHvfeZnRCQKL2Dn6nVYbg/ptpRNnuwl89wtwLGqMQTz36f0O
tQS+LL6FMqs7BpcVjG99SSPwctHvzycoY5DFJiv96h6BfWwn/KeIMdjks+7b
66sEto/4+GLMcAz2tKq1RB4isMK8PVevxRhIKB462LKewIV25hW3rMaAqTov
duwLFRuW7QkibMfgHXFaTrKbig/GKg++dBqDD/YegSpPqThKhfNt8LExOPLj
0eVYGSre+uifq4znGNzUyPwnyUnFz5n/4x3yGoMCg1eqczMUXNg5ccHQbwx6
txfoCL+iYHpwqSnv+TEI6q5Z5d5GwYHDOWu1F8egSGUjp/NXfbxq/Cbn/OUx
UG36eWasSR9v3ZYoPH5tDHo+j+W+vKiPDYv8Z9/HjoFfSsJHmW49/HxV8pZF
2hhw1nlYCrnrYgVPIYL59RhYrsRMvFTRxQWfNn3LfTMG/ezLmlfXdPCnZyvO
Iu/HIOb3s5eyD3XwqkGP7FzRGPAo7PTzrtbGByOiGiPbyPs2HCT57Y8m5tu0
xFHzZwzEL/9wuPhbFXeW3bq5f3UMnraOnLhUpIrv+kqtb/s3Bqc45IY2n1fF
vE0HWQfWjUOX4jmRP/+pYN4btauLPONwtOtF/PdBZbz5b9K37TvH4eugv4xM
gjzmnjYeCjIbB305jofZ0ZJ4XcXj9zuTx6Hg/MhKaEIXDFCMTEafjoNCZomx
oO0kvC+eH0tKGYdTMhSDI4MLcDCfysv7ehzyHrPFXlv+DR+yRoOZcsZh16Ut
PqKX2JFr8k694fpxENnPbVygKIAKz7+tSfw+Dn1M7+YDDKRQ7E9bF5v/xiHK
3PpL7agUOnZm5cfG3+PwonH0QmioNOI5bbH7xto4NO+yvs5SsBsd91qMCuKc
gO5lVzOGhBzidVS3tBKbgNrT5yXdu5TQSY2Sfk6zCdhhmzjyp1od4fbPmYUW
E3BA55U3+zoNxH9qKeyE1QQsUo8IRhlqoIqXUtK19hPQ4GjCMoU1EN+2+MAr
RyfgEotxU1uuJir57cH188wE5Flec1l3RRttTgwbeRkyARwlksZP8rXRcbWk
D3YXJ2CdsfebO/PaaNPJNsecKxPgLirLd9NBBx0b0k07dXsCKA9UH16S1EVc
FTzUyecTEPD6n8CxR3ro6CHZzfdeTIB6115/nlo9lPfTkGbwagKK+5c3MS3p
oSMq56OevZ0AtnPjNz8Y6qOPKbTPB/MngIj7vKI4oY84iLV0zqIJODy9U3ye
nYJcBgQvFZaQ6xtcap5WoCB2vgOSApUTkDLHju8FU9Ch64V+Hc0TEDJt7fzi
DwVli3cZXPk0Af+xsw6qCVMRW9mXrcodEzCH3c/+0qGi9z8kS6J7JmDyYvkb
yWAqWneXGqvfPwFJ94xe34inImclJ7fZwQkYjn0YtT2TilhPxLCbjE9AIq10
3fAYFTmxpg/8R5uAR0sxyux/qCjrWVXWS/oEnFPXOebGSyDHvp+2rPMTMFDw
394XiEBv97s/L/+PbH9eMWt2j0AaChIE/J4Am7yEs29JT5bzjA1W/J2AumHm
zTZ5ZD3f5bKtkokGm+6wjwR2E8g5XyTPgJUG9EvYYX6CQBMPB22q2Gggm+lw
/O0SgZZdnGOrN9AgZi1t5RcnoFAkqGC0kQZ781/OR5A+Wb+zt7FmEw38ggUN
nMUBxbMlnjDmpUHYQmahvxwgoRk7trqtNGj8cEWgifRlahPfi73baMBzT1zS
i/SlQlYnqheigTjrrdf7jQDlxd0Z2SdCg1IThXN+ZoCIQKtLDTtoUPmMcbzH
GlC93Sbh/RI0OEAVtLjqCMhK+1NB404a7NK9tsH/MKB+oRh7U2kaSBw+eeUZ
6Tn3FbPvTTLk+K6b93k9AM2NbLhjJk+D4qb1mg2kB4MrG5VaFGnwhh5zAJNe
XHsR2WKuQgOcodfzh/TmzYh9Pq1q5H4qUmv+783N3us5DmjS4IpYt4A2GSeZ
1b78pE0DDVn7Tzpk/51K1w0t9WiQeX/X10snAGVuNhxvo9AgxK4oivU4IM3v
zGFWQIPT5iyvW9wAlX/GIh0GNHjK7Hm4zwXQvsKwYmsjGuwQr6qUJv3cnkQ4
de6lgdC8z/cC0tfOoas/bPbToDZRjjea9PfEkdJ7XWY0uB6CDF/sBXRyz0VV
uwM04FY5mr1KAFrepdfWbUWD9lfZNx+T/gxl/+1rb0sDwz9Nfy8pkuc3W7Ch
x54Gr0yLDFN3kuf1XnNv70EafI8+YVC0kTyvO8s0RxcanHrkcfEtM3lewR+v
9h2hQXNR5p2JZQIRuqpl/R40UDmiEC3eT5A+Wzp48AQNBlXnt8k0Echq7d2v
AW8aFGDWtjPFBHKvVtAY8qOB7qtbxNRDAs29nOs4fJoGxhaxlew3CRQcmeE/
HETm/9ZGtsBgAt20kHk7EkIDFvWrd8UsCLRZZdrkyEUaPI9sbDymQ6Ak3lf0
0VAajH1QTv4qSaDM3p2S4+E0kKS5isz/oCLN4okKtxs0qJ4f73ceoaLy5BSX
iZs0UD2+ZM1XR0XtbmKPaNE0WC/8t+LkPSr6MSe8mZ5IA3bmA2nVUlSU8GS6
PvkRDTTNZ6Ql11ORumVumG0yeV4Bja9ypijodI7FIk6hgc6Vn5RTqRT0JeTK
p8eZ5HqOyDsc46WgaDmLCJv3NAjf9J+i77w+kh8SIjhzaCDj/6jzXa0+8oaP
WWcLaAACtV1TZ/TRFBs92rqKBod6I8T0WvXQ9YIcI45aGkyG6KWopOihnd5h
K+X1NKgL6t/hE6yH3FoEfRVaabD6wHLDW0E9NHzXzIy9jwYGd+cyIp100Wex
D5xlX2igOMG6SCO/v8EdoZVBSzT4JBxhmhGmjfiumZ6X+06DtdeSg437tJE1
nTbz4BcNRg5ldwr3aKHWTIGGQNZJeFTvkaQyp4lqdS9FyAhNQtK5X1+f/FJH
ebb7WBOMJuEdaD7odlZGkWaFN0T2TYK3QoY3R6cSOmwoy/Fy/yTsVdN4HLpf
CbGoc23MPzAJj38p2ehqKaIDvG0CfU6TcOuhyU1bdnk00+4gJ3JqEkx93CK4
b0sj4QOe1mn3J8Giuum2nrswCjO58SyXPgn9/y57+H3hwJ2uXodVGJMw9NL+
+sABLrzrjJlQ5twkuFwTs017vxE3pWy592JpEg4ffqUfrb0Fb/37JOLun0nQ
EefkW/nKj9Oz8k8F8EwBNXt9Ybq5GG7nndFX0JqCK6VBH87kymBJ2eZfr3Wm
wG7+bfY6A1l8Bt7l7dSfgsi3hxNWW2SxsG+w8nY0Bct3G7jFaXLYo5Zp5wbT
KRg91vCqlV0R/zontGHGZQrEP596x/pQBUsMm/a9uDEFt04umx8K0sC3qvTf
20dOAdaoj5HL0cDfXitEsN+eAr4j1f95LWngqkAejZPxU2CzrfyswklN7MHR
Gaf2eAqECuwinzlr4XR1532V2VPwXcr22idBHbxZyHRH0McpaK6qkm210MHn
1/R+7MqfAo8TKoUS4TrYtFHkRWTJFLQU4r66GR085zq2Zlk3BTeN4g0HsnSx
0q0T+SODU6D4aN3lNX59nOjvFBM/MgVgfzu0GPTxP7v9HnvGp+DD6ycNBV76
uF1MnnwDp6DRQ7b5dKE+Pp23cOrU1ymY9r93qvYABQ8kjRqJLU+Bs9po/KlA
Ct5zpX17x39TUHqH+uTAfQrmNctp1FiZglkN4lVBHwXnjp2RWllPhyc/LMS5
HahYpM5zJYuTDjdCKBvdg6j4xlvHriPcdIjcxRhixFGxw1ndq9Vb6HD7aSBX
dB0Vlx+SczqzlQ5bQ7/PpY1RsbTBduXd2+jQKnQjZ/43Ff/kWh26JUKHnRNj
6uvlCHz065ePFDFyvlucT3sQgRt6Rm4tSNAhaQenRZcDgR+mYB2b3XQY5Ond
ZnmFwEw3P2xaJ0cHiLXe0krW796+qfQ8BTokKLNynXlFYD3t6wlCanQY0Er7
gxoJ3OMupPVEgw7f9S+tc+gjcFDsu15xbTroPT0t+Z5O4M3FhufTdOnAs1t4
1WyZwJlTfcIyFDocTIowUGAGbLLFr/QtQc733ijFciPgKQqrq7IBHYS+Hu3M
EwS8I0ExRWsvHS688XmwXxFwcUXVnmITOggk/ck6qwXYcc5xkmpGh/0vVR5P
EYCXBb7cqLSgg8W7t/KJewHH7wnfbWxFB02XuyqRFoAV/LY1NtjQ4QglIazE
FnDjo0wfc3s6yBXPflMmvelZa8Dd7kiHHZsOek+5AGb52pNle5AOwRxqdYNu
gJ+K+Fr2HqZDZ/6Br7ykN/VNmL8ePEKHo8xCvbdIb/YFJd4dcaODtOhNL0PS
j8HP5DXcPeiQOiPymEL6cnMz/jzlSYc8+Xmvs2Sc9Z/9OW9vOhSVJLQvkf1N
JecEv5ykw5drRp/fkt6kW1wpDvCjw4bAgsuvSW+Gn+c/vBxA7mefdj+N9KbY
y4zVc0F04LJ4/OMo6c3Sdnj29wwdxBb3MXaQ3nRa6UZhIeR56yh9EiW9+WO3
zwTLRTrs1mquciG9edf237WIUDoYUHbPjpgCVgpLkNpwhQ7FWz6fTCG92Zwh
Wx8TTofstaWgl/qAvXrKvbbcoENJhZj6nBrgdSx2G+7fpEO6S8xIoCzgFEXG
W8FbdDjOmHtPEQNMOF+2SI6mw3uRwCmTrYAHrvMtisXRYWmkv/IBB+Bz2enx
L+7QIfGda7TsCoGz2bu6MhLp0CYiL7ZtnMDm6l5nlB7R4fC4W3RQJ4EZrqsC
OY/p4Mcbr7q1msCS+bsPFj2ng/Cmmac7Uwmc4HFprD6DDpxVhw5HOBJYJX5L
uFkWHV4P1eFNhgRuLXm1s+09HdRFK+vGFAm8nq/DsyeXvL85/yoOMRM4pFLq
y2Q5HWKUDR/WPCM9+aU41quSDtpdy8JJN6j4g6CVynw1HWruXqgs8aHiWf8L
Qd8b6FBWt3EjXY2KD+9o+83cRQfPpkd3GMUUzCMUmFfymYzD59OvPKTgSj7+
02f66DAzmcNqdoaCpTkPzcwMk89XenM+VIGCF7/Te9pm6NAvLn3k7B19nLoQ
dTdqjg68Vz661ZDfIzuGwgHDBTrkJx6SPkB+rwpHAmvzv9Phq8rgU6FZPRze
uPbxyRodone4Cudo6WGNmhR/R+ZpcI8e7P7Hroeny43kt6ybhn/Sssr3+nSx
ee6t1Ouc07BhLVYg/pwu5n8mcOfk1mlwQO+2cWbp4PRgJT9duWng8K6M1f+p
hQ/6d8h+V5iG1LRPF2LKtPBGn+CpTOVpeP3ZLpFyTQsHHik+LK45DX3ECXoh
txbWN91rxo6mIUyu5J2ToCb+JOYq89l+Gja/VZIq4lPHP5piJgKuTkOGlzOm
WSriIa7PXivXpmE7lTGcWaOAq8xFFm9GTMOYiv+xKh0FHP8p4+/T29NwPOu6
1dgOeSzXWb+19f40CB9rMzahyWDXfuZ9shnTsD4xc+eA5S5cN33m7XjnNDz+
k2wVlcqPH65zDbbZNQMvclbbEwK3oLVj2zQ7pGfg/fTCqtYLXuRR3f7DUnYG
djy4be/dxYdUwg3PWSjNwMFSWxZ3NQHU8E/mgonODEgdD/QcYgijn3++hxHm
M/DDSCLfQ0QSOXyNui0XPAOuxkOVHHzyqNTK0PzNWbK9/GFv0hN5JJm9wi1z
nnzeUJbOzd0KaMHPP1bq8gxYqAV+c9NVRDfm7e6IR87Aio1pWa2dMsqdFnsg
kDwDel3eRM1HVcQ3kpfKUjMDXQ9b/JmCNVEsd2hoQd0M5MHSjffZmmiDvpGT
b+MMKL+NuFA7r4lYHnZu7Pk0A9IF4e5ix7TQN+vFkDf95PpuRPW6mGij9loZ
S6vFGZg4JbbnzXcdZL68KMv2bQaSNXl4OKV1UYNkwbri5RlQr1ywKHDURRVh
xsU7/8zA7TeXPv4u1EXvdN2lfq5jgGL8t69LgXooOuvx3yfCDFjWu9waX016
dMi9x0aUAYcFeS8Rs/ro+ga5D+ziDIj+my2wezMFXTxR6HlaigHWJ/7R05wp
yEfic4eRCgMKq3+wa9MoiG6ZnPlbjQGGMcJsz1mpyP3ysZvvNBmAZqrkKTtJ
bw5+pQjqM+D769TLG45Skcl9nvQ5Y7J/cqHOTBsV1VR/Dn9uwoDp8iynLgYV
oW/JLvZmDGh89t1kjoVA2pbyfBVWDEixeT34VI1AOaHfvgTZMkDQwUpRdz+B
lDKLGmQcGBBb05i16kogaU6Ty3cPMeB3r9sASySBUrU3Oe9zZUDeL7rHnscE
2uHZo75ylAHhIVsG32QRSKDag3HckwEa7vcjF9oIdPerfI2wNwNiHJg+NY0S
iEf8+9O2kwwY8dHb3rpAILbQq3a6pxlAQybyezYAyv06/7siiAFbxnWv00mP
eng6Pdt7lgHwYz6nmfTo1sFqo9YQBhSzugV/JT1aY6k8a3uRAU/rlW45apD+
q0mKGwgl15MdVbxKenSX7npNtytkvowN2mmkR7uzTg9MhzMgyq8qidMc0HXJ
4TC/GwxITxJc8LMBpPHAROrHTQZUdS6k8jkBmuTKbbp4iwHUN/GJP0mPJlwR
C2CJYcDEprkMYdJ7Rj9u8UfFMaB1c0zdJdKjy97/FW+6+//9pXeLkl5MG3E7
mpjAgA9beGtX////T9tWNtEHDOC6syda5P+/h23QefviEQPKbB12/v/3sbmU
NCu5ZAas+7QxUoCMPT5s+i/7KQOcbreWfiXHb5W++Fg7hQHlYk8buMj5a5Lo
qPwFA66tyBd4kM8P3mRDN3rFAE+Z+ocrpJd3XS+73ZzOALdB9/Aucv3dv2RU
bd4yoGA1IYZBevvaqYSeviwG5N6630eQ+1eb+HfxSDYDGnqoEV2k1yccTkrQ
c8jzLGIvf03m725zT51vHgOOPOLOLCHzuwft8f1eQJ7vkXVXN5H5/5abteVC
MQNs9xsFviDPJ1VWqICpjAGRKWVF58jzY+FbYuapYoDYfSnTCU5AOTcPvU6o
Ide3/EP0/CrpyZU68+31DCj6XuFivUSgqqknD2RaGBBS5Otd30WgwIOc1Pef
GKAV3j55vIZAkm3BE5odDHAulJffl0ug8EIzRcMeBujs6n/TdYdAaooFnY19
DFCQ4cgPCyPQRIpkiNUgA9jFaBoBvgTac/t3lcsYAy6Y/TombkQgZtfXTiGz
DNCTkwlunqWi7E7etbV5Blz1fzKR3klFR/ddfnFjkQHjnWmzn4qoCKvYL9xd
Ju/fWVHlnzeo6Aor6/WsNQZkbc6xa+KnIpUQP1kN5llg7KjQX/tJQWPz/Z+K
WWeByrRtNayfglBPtlADxyw8LGViDkiiIKY3ru8neGdBe6zr8batFFQ33+v3
jH8WDhQlW3d/0UfRKtZKhwVn4Wn8Wfv6On20rdAw67PoLBzu4M2zO6uPlOpl
3jbIzALv7AqPYoseOjz17dU7YhZ+PhiVnLHVRZKyvp4nDWYhx6d0U5KELprx
nZKSMZoFr+9cYYkLOihouTctZf8sfI0tfBscoYNusZalJtjNApPpobrFLG1U
JHHz6QUfcj1psa7UYU10+TiTq/apWVCWj/p24LkmMnpzXnTZfxZEn31zqnHX
RO0qvsmnzswCZ77svfEpDTQD1klHr8wCe9Oa17YpdSTguj1xb+Is7H2Ueper
URUFJr2P4a2aBSXv5wsnveVQwUrSzaqaWTDaGOT0qlMWrbhGXA2snwVK21kW
RX1ZdHOny5nOllkoSfe8r7xBBiVnbnC52zsL4r5OKpefS6Ha8uMKvF9mQdH6
r/j3D+JIkLa9eYvgHPyuYlMVEd6AyuQjObb4zcHa1fLeHnERrNW9rfVuwBz4
BvWcXrAQxdmXXt/ZGjQHn2hKt+0u7MCprXXCgiFzsON778w5L3Ec6c+mKBY+
BzGd8scOFEtim4/h1oqJc2DeFtfft283ntYLTdpfPgc05yahqG/K+CiN+0gz
noPj2lNs6foqeOB28k6L6jnQ3qQn/yZUBbcMlWRaNczBNhVO4jKTKs65/Kfc
sXMOarnyj5owq+FLVedox+lzQIhCBdcCWU/4sKdPz5Dj9z1hSZDVwH58D3y9
5+ZgXxFFKtVDA7t55P/wXZqDRGb7YNN+Dbx3/Q/24D9zkGnK0p1Wqom3mAYq
hPPMA19TbqCjjzZ+XrmJS2/LPARoELEzKdpYRTeL8ZVvHvQJR5eOPm18QGbm
lZvQPBSoNK+9MNLBt9a7Shjsmgcd7pd5O7fqYqHLf//9kp6HqXyBXJO9ujj9
x8ORbNl5cLE+lltE1lv1k12PxZXnQfGiJlwg67F11fsFmPTmYXPWbz2rO3r4
nt70cgFlHuzqsifel+lhyZzrXf4wD/LlXcLWDD2MUiriR43mYe+zQU9bQh+H
hmlyVVjOg0VGa7XWqD7m/tnJOGszD3K7RsXC2Sg42S+gQcl+Hso5G76wyVNw
scvbG08PzoNYIk9hThAF/6cvwXT5+Dy8Wl6vfOMvBd/4WD6i6TUPjxLKtods
J+th+cNlX3zmIW6gufyxHhWrCz+44BIwD/UJH/JPn6XiqjsazvxB88DG7+Mm
eY+KbTg7tVvPzMN+JRM/pvdUHPCL+wfl4jy4/byaZDBJxf/8M7qWQ+dB6E8y
8WKVimOn9+VkXpmHkAbPA8oCpBd7wv1FIubBq7X0b7URgfUPiB/ojpwH6+Nx
Fs0HCdxUW6YQfZvMb+2roD/+pA9yfzH+xs9D1hvt6dYHZD2vkNjw8d48xFB5
hU5nEJgjTf31ycR5OPXs77RuKYGl7/l5DD4m86dz1ktvmMB5G7gN7z2dh5n/
tXDn0VhtbQDAiXtJMqSUi0xvhreMmXnPs5MkSaVEyFxkaTIVURRd1E31CSG3
klyuZMoU2SGSTElFqBSKc96dq0kZ7rlrfX+etc/az9nPfvY667f2XttfUPcI
TWHrU/kqm6/TcOnN5dq2HxT2OfJ+qOYWm89IhYxx1jOTH2LrgvNpSJUR0ytS
BhzjpZTFLaShQmZ2Rcpq1nsvayOHi2jIV94tkmUE+M+trrszSmgwKisqe8h6
Vaflm4ljOQ1XZeoGpDYCvk9dlhWrpMGKG7ox2gHwlgqDLw+qaTDhfL0v5gR4
QLurJ6KWBmYifWm1K9vfhHS0UD0NswdPbOF5AvbJ36H+xwMaXPRPt839tz/q
f7lTtomGTDnno7OsVz9yXhy71kxDgpMvZcb6snB4hSq3lYbQ9sdLSll/Hr7m
2lbWRsPGyMAJf9anaz2yQnkdbPzsvkbX/84Dyw8ptnTRoPlmf1YS+35Nn1LL
th4aSjZpRH5j/Rud5n24v5eGhxov911n4yGnHDm/lzSIdcwcTmC/R1hmpIHp
p6HHsvPvQg/ALV3qQUcHaejKt9KVYMeTdD5gmeAbGpwnFqy4vROwg33B/aRh
GiKbQ35PZPMhLUb7Lx2hoVWpOCeHzdezFm3p7DEaaiQS034C4PT4QzUa4zSM
9cRdumgC2G19iW8JTYNu6eCjvTqAVwpOiVsQGtwKYkKOcQAP3zesaJqkYVxO
vKtVDnBuVLinw2caYi07lF0lAK/5Pl3iPc3Op+LletMvFCZ3LdwmfrLr63pq
/u9jFC4NiRYOm2Pr8UpTvWwfhc2IgHOCEAPKui9efa2m8EyhlcCSXxmIDGdu
2OZTGAfG5WeKMmD2/PyKAbY+bUZFZooWM5AsVtDUGkzhhTc35ZpKMdARBW85
nhR+4n3WoWEJA55FF4812lF4x6DE9d7lDKxrnl/WrkRhr2fLbGZUGLCtzRFQ
ecDDnEvOJJ7DwNTTWy238nh4bOuVdEkNBnZecY8K/YOHD7YpTKiuYaBwso43
vouHjzeoXdhkzIChb4qA41tLTMXsNesxZeDEuUVftRos8QIqb9jdgoErRwr2
b71hiROquUaHEQN1dcmj8V6WOLVYvz/VjgFeReJI5TMLXJwNnPceDMSHq9tN
ZZnjqcgpEW9vBhr3fb42GGKOjZ3zJgZ9GShftpfLtTPH9yQly14EMBD2bvQe
89kMN8cMrWsLZsDodveU+Xoz/Mon2rP0DAOZDlWG/Y0meCXor9dNZKA76DPH
76IJ9pIfUS88y8C095pobw8TPNpjz8+9wIBCnBD33ldj/MlaIfpKBgPhVZ0J
4irG+FeNexkxRWx+G4rNrfYY4k1Ch07MFjNgUVRllK5qiM+9VvWJLGNA5+Vq
mfCxtVg6PUkrtIoB7yzlnx2H1mKFha5V/g0MLHCbxQrHDbDBxPdeh+cMpJVH
PA1k/1d77hhLK84xIFP6pPRxuCaucP0u0SXAhzjf6A1ygxpY4tca8dNCfNj3
VMoGW2lg7M4T/SjKB5/EwjhNcXWsKmY9Xy7Dh12cgtS+NDU86redsdfig95z
/lopbUV88Leg1qidfLhq4CqxAQni5ofaLbrOfHjk9qnRcutsvdIR0jS8mw/1
x/Znqih+r+9qCca2nnxoL4j7U+PgRL1BWETl0kD22SnxWZb3AHzrPJNbeJIP
FUYNncGOoigm/nrsQAEfFskVzhc7KKPFR0XsvG/zQbT9onjie2WUEXBgyegd
PhQ5crumI1RQ2WazHFLOh4XL1UzSclTRqHR304J6PtTsLzDzmOSgzdkColo9
fFBzOGUjHqqFZCs9z4f95IPz3Y2vxOb1UM5fD3f9mOXDyJOYqtVIH+llrFY6
KUCg6ChH4V2MPtoU/e1Owi8EvKXD7CQFDVDU+uTuTEkC/v1MtsGMARruvL+0
QY3AbMqhMZcBQ3ToAWfQRp2AT8f2RB1ZIzRTmpTbpkkgdq0b7/RWI7QsdZdx
rzbb/v6V301shGzd+c4fTAj0K4UqX8syRrc/KGZK2BOwe8r1dzM3RQlX472G
HAjohJV8NDhiivwcmVVF2wl0a3/Q35ZnihRqa4u3OBNYtbw5z0naDCUluzWf
8yGQdzItxGvADO2zbjzrvpfApErYRvPF5shqmrt9TQAB6kzl1S08czTt8+NV
2wECgY/1V8pnmqMA4yuTYhEEeH1fX3C3WCDrCYHK/uMEsstez+UftUBK1wKi
Ck4QsEq7N+R83QI9X2gqYhdHYFHkzj7zfyzQhsHnConJBDp/UT07k2iJlC9R
wy6XCLiYuSl13bZEMza38jQvE5CXOabf2mWJyovDDB5lEBjNXlSosZSHVOOW
2orcIuDOmw6OvMBDc6ZRi1/8RUDY0GWdx20e6mPePb31NxtPKeYfz1YeuuBc
tsemhMBiTe+i6jkeChKXV5MtJ9BxOFtVagWFbB+c+jBSQeC8QrV9rB6F5rmO
IfG1BOo/hb8pZj3d/7ra1KmegPW44fiBUApVpKjMcRoIOPpIjVslUujg3KeE
phYC4glaLgbFFLIrc3FIeUxAxgxf3dxAoVUBWMavnUD4et2ESNZDA93J2UI9
BK6eem+zfIpCVWe++fb0EkCrt3LjBFmvWnhq5bwksAENdwlLAjr8qZkf/IrA
nFpdT7o8oM25OuVWQwSiDcV6QAOQumtqxJK3BAZyBcOn9VmvSc5Rw+8IZKnT
gQ8tAA017hUuHSVg4rDKP4f1YM2x9tbYj2w99Spq/I/1dKq2UfJ2moBe5p6D
KTsAHRnO2qlCCAgdiBfJ2w3IPk34t8lJAgtubGt67AFI0z7oNf5MQC0iNXre
h/Ww4LObF76x82W9WWbDPkBv7loEev0gEOkWG5TJ+rc2MEdXb5ZA+sD+owtY
H6cpLfoyP8+O7//3S/0LzcP6mA==
        "]]},
      Annotation[#, "Charting`Private`Tag$4375#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8288425790575037`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"905c1199-fdd3-4e24-824e-fd24269c1f51"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Do", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"i", ",", "j"}], "]"}], " ", "=", " ", 
    RowBox[{"N", "[", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], " ", 
      RowBox[{
       RowBox[{"k", "[", "x", "]"}], "*", 
       RowBox[{"dv", "[", 
        RowBox[{"j", ",", "x"}], "]"}], "  ", 
       RowBox[{"dv", "[", 
        RowBox[{"i", ",", "x"}], "]"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], " ", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "n"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "n"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"AA", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"i", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Det", "[", "AA", "]"}], ";"}], "\n", 
 RowBox[{"Do", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"b", "[", "j", "]"}], " ", "=", 
    RowBox[{"N", "[", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{"fun", "[", "x", "]"}], " ", 
       RowBox[{"v", "[", 
        RowBox[{"j", ",", "x"}], "]"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "n"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"ff", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"b", ",", "n"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "%", "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.828229629721395*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"8e894d03-f420-40db-8ef4-db27d6b7cc1c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", " ", "=", " ", 
   RowBox[{"N", "[", 
    RowBox[{"LinearSolve", "[", 
     RowBox[{"AA", ",", " ", "ff"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Solution", " ", "[", "y_", "]"}], " ", ":=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "n"], 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"[", "k", "]"}], "]"}], " ", 
      RowBox[{"v", "[", 
       RowBox[{"k", ",", "y"}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Uexact", "[", "y_", "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"y", "/", "2"}], "-", 
    RowBox[{
     RowBox[{"y", "^", "2"}], "/", "4"}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"1", "+", "y"}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"4", "*", 
       RowBox[{"Log", "[", "2", "]"}]}], ")"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.828229642708774*^9, {3.8282392142480493`*^9, 3.828239218217927*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"5fb217fd-883c-457d-9993-031f54b9d427"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Uexact", "[", "y", "]"}], ",", 
     RowBox[{"Solution", "[", "y", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Dashed"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", " ", 
    "\"\<Comparisson between the approximated and the exact solution\>\""}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Exact solution\>\"", ",", "\"\<Approximation using Galerkin\>\""}], 
     "}"}]}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Uexact", "[", "y", "]"}], "-", 
      RowBox[{"Solution", "[", "y", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{
    "PlotLabel", "\[Rule]", " ", 
     "\"\<Error of the approximated solution\>\""}]}], "]"}], " "}]}], "Input",
 CellChangeTimes->{
  3.828229676828658*^9, 3.8282297400020285`*^9, {3.8282314985369864`*^9, 
   3.8282314992837443`*^9}, {3.828239235127601*^9, 3.8282392385274124`*^9}, {
   3.828239378707539*^9, 3.8282394321575747`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"cd26d408-2d44-45c8-aca0-c257c9c5dd14"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
AqVa2auN/w+A2BM5
          "]]}, Annotation[#, "Charting`Private`Tag$63504#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
JIr7CsJjMzMcWNxePm2ps2rz/2f8AYQ=
          "]]}, Annotation[#, "Charting`Private`Tag$63504#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Comparisson between the approximated and the exact \
solution\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {0., 0.041411594135066274`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Exact solution\"", "\"Approximation using Galerkin\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.82884261913221*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"ba02929d-2002-4211-8aab-e4f90b981235"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
2v4PwCJGtA==
       "]]},
     Annotation[#, "Charting`Private`Tag$63664#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Error of the approximated solution\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8288426193636837`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"b98d559c-ca8f-480b-ba1b-4eb23d10764a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"(*", 
    RowBox[{"discrete", " ", "error"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Uexact", "[", "y", "]"}], "-", 
        RowBox[{"Solution", "[", "y", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", "1", ",", 
         RowBox[{"1", "/", "n"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"PointSize", "[", "Large", "]"}]}], ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", " ", 
      "\"\<Discrete error of the approximated solution\>\""}]}], "]"}]}],
  FontColor->GrayLevel[0]]], "Input",
 CellChangeTimes->{
  3.828229710443233*^9, {3.828229749152237*^9, 3.82822977252754*^9}, {
   3.8282394384875536`*^9, 3.828239442257843*^9}, {3.8287030087413015`*^9, 
   3.8287030197412157`*^9}, 3.8287030727919827`*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"aea15d57-8c05-4853-b129-3291ec6fc983"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
     AbsoluteThickness[1.6], 
     PointBox[{{1., 0.}, {2., -0.000015964629435136213`}, {3., 
      0.0000148583991449458}, {4., -0.000013061730239238845`}, {5., 
      0.00001446605988129901}, {6., -0.00001654372972859086}, {7., 
      0.000019541119713473165`}, {8., -0.00002599892429241968}, {9., 
      0.00003369945409564812}, {10., -0.000050302992449541284`}, {11., 
      0.}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
      AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
      AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Discrete error of the approximated solution\"", TraditionalForm],
  PlotRange->{{0., 11.}, {-0.000050302992449541284`, 0.00003369945409564812}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.828842619505375*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"0360133e-99bd-4031-ad0b-88a8eace49a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"(*", 
    RowBox[{"max", " ", "value", " ", "discrete", " ", "error"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Max", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"Uexact", "[", "y", "]"}], "-", 
        RowBox[{"Solution", "[", "y", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1", ",", 
        RowBox[{"1", "/", "n"}]}], "}"}]}], "]"}], "]"}]}],
  FontColor->GrayLevel[0]]], "Input",
 CellChangeTimes->{
  3.8282297250923905`*^9, {3.828229782795216*^9, 3.828229795785342*^9}, {
   3.828239466047944*^9, 3.828239469737626*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"093e0011-1abf-426f-a9a3-3e3bb0feaa0a"],

Cell[BoxData["0.000050302992449541284`"], "Output",
 CellChangeTimes->{3.828842619541627*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"9138697e-01dd-46b2-ae23-11739e4fee9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ScientificForm", "[", "0.000050302992449541284`", "]"}]], "Input",
 CellChangeTimes->{{3.828604519571986*^9, 3.828604527830276*^9}, {
   3.828604560502779*^9, 3.828604562426565*^9}, 3.828604647197275*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"baeed611-a1b3-4849-b22f-6146555b3a84"],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   RowBox[{"\<\"5.0303\"\>", "\[Times]", 
    SuperscriptBox["10", "\<\"-5\"\>"]}],
   0.000050302992449541284`,
   AutoDelete->True],
  ScientificForm]], "Output",
 CellChangeTimes->{3.8288426195965953`*^9},
 CellLabel->
  "Out[33]//ScientificForm=",ExpressionUUID->"8f8cdfe7-a09d-45b4-b5f3-\
cf3c3569ad66"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["b)Write a program that solves (5.2), using Galerkin \
method and with two different f(x). Compare the approximated solutions with \
the ones obtained using FD method for elliptic problems. ",
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0.5, 0]]], "Subsection",
 CellChangeTimes->{{3.828229883749537*^9, 3.828229899965168*^9}, {
  3.8282413370196543`*^9, 3.828241375390744*^9}, {3.8288453126806707`*^9, 
  3.828845351282155*^9}},ExpressionUUID->"c9dcfd4a-4e37-428e-b3e4-\
4eeb192c59f1"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["f(x) = (3x+x^2)exp(x)",
 FontWeight->"Bold",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Subsubsection",
 CellChangeTimes->{{3.8282299656819515`*^9, 3.828229982381974*^9}, {
  3.828243875200096*^9, 
  3.828243875764977*^9}},ExpressionUUID->"5d41ffb9-cbd8-406f-a95a-\
cf0bccd1f135"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"tgal0", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "10"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fun", "[", "y_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", "y"}], "+", 
      RowBox[{"y", "^", "2"}]}], ")"}], "*", 
    RowBox[{"Exp", "[", "y", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k", "[", "y_", "]"}], " ", ":=", " ", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u0", "=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vsin", "[", " ", 
    RowBox[{"k_", ",", "y_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"k", "  ", "Pi", " ", "y"}], "]"}]}], " "}], "\n", 
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "n"}], ",", " ", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"grafico", "[", "i", "]"}], "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"vsin", "[", 
       RowBox[{"i", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"grafico", "[", "2", "]"}], ",", 
   RowBox[{"grafico", "[", "1", "]"}], ",", 
   RowBox[{"grafico", "[", 
    RowBox[{"n", "-", "2"}], "]"}], ",", 
   RowBox[{"grafico", "[", "n", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.828230064308455*^9, {3.828230258002934*^9, 3.828230458453019*^9}, {
   3.8282305409203496`*^9, 3.8282305686902514`*^9}, {3.8282306178360257`*^9, 
   3.828230626621704*^9}, {3.8282307252414975`*^9, 3.828230755232277*^9}, {
   3.8282308490762873`*^9, 3.828230849523461*^9}, {3.82823094995043*^9, 
   3.828230991323233*^9}, {3.8282311400588074`*^9, 3.8282311568403263`*^9}, {
   3.8282312878143997`*^9, 3.8282313184019456`*^9}, {3.8282416348297*^9, 
   3.8282416452409306`*^9}, {3.828241703526059*^9, 3.828241720662675*^9}, {
   3.82824176864086*^9, 3.8282418244909077`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"e8a08b7c-a76d-4b34-af63-cbd43f3ebece"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
/UUWBbS3Dgj9Ifynzia3ZoYCqYbVl/4jnJn619OAmwqTN+OK/xGmYd3Q9GVU
iOK3l54jvGFfeIowPxXS+qT8GYTNb/WW+whSYcG0gUUl/BQp9PWKUWFa/+b5
DMJlPJ6zWlJUyNi1s+0h4VkDJJQsS4X+6QlTM8LKoXw7V28lLNDTKkLYoc1C
z30HFd66TVtRyP3jJBIvdu6mwteXlqz7hNusWbcPqlHhcKCQvyLhVe/UohMP
UqGnQmtDLYmvFsM/c5kWFcpOLym9QPimUlOdsx4V4ltcnNgkP5keEsNUYyqE
Hk2WdCdMK7D/t+8EFeQMmpvZJL8bFjMkXp+igtGcQJgNYQvtv3u5zlPBeDrQ
oo7oIzhQ9/glWyp8t3fctJ3wnFCvv/I1Knh+F2ptniX6Pa0QF+lO7h9wMH8d
YYc4j/w5bypo3nn21pzosW0rH6vcnwq+5wKjvkyR9zmoZnH6JRV2JroM8/4h
7+Pn7/o9jsR3xlaQh/hjQ3Xjk01vqWCTfVtvjvgp2My+mPWZClhFv7WG+O2K
w/OtfuVUaDJa775AJ/pP6zkyUkMFmRV4JptG/De21cqoiQpKhx4G2RA/69wu
DhPtosIS8+udb4jfN4aNzqVwqGASabk+rxdD8UXflOwJKjCvuStr9hD97RU+
822WCnERd26X/ST1rUO9oGFJM2Q9bynKIPVHXDroBhZrhrMXlfGOZgz5HOkt
s+ubYa3l2UYfCukfJVntXLLNsDU6fKSoEUOUXZeK0PZmYD/pq99Zh0EoVWFC
BZph9LqaS3YZhqzbRUmHdJrBK1Vodwmph6bHTE/oGjRDY3zEnqpiDKFj3lmn
TjbDz8kbE4WknvKrVbveutwMvOPFt/SyMfBWXGKh0GbIn78kyk7A8C5q7nVN
ZDNQ76Vz+ZL6rnM5xKj5VTM08B3Yu/I1Bn++3NSBt81Q6nDXbRnpD4umPI68
Bc1QN8Z//t1TotfepGHDX80QP132zMULw+hMf1/7rhaoDOTXOKKNIe9yaJmh
agvkrfeSjyT97X7n4Q9IowXij+4S79Mg/suPu5ai20LmyUHJU6Q/at04t3DH
qgV6HmZ96d2MIWayQ2JzYAukPJlROkz6rf54o7l7fwvcix7MNi/igPDFu/tp
Qy1wKDOAEZTPgT7qDikrZguUnnpoUpDNAc/Mp4NHp1pgGZ9cxmwyBxJcDdwl
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
        "]]},
      Annotation[#, "Charting`Private`Tag$133588#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
1w==
        "]]},
      Annotation[#, "Charting`Private`Tag$133541#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$133870#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
QQwmLlX+OEu5fOBsfrVbZEbFv1egdNU=
        "]]},
      Annotation[#, "Charting`Private`Tag$133964#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8288433776290293`*^9, 3.8288434469872503`*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"eec7deac-7368-4223-97be-2bd8a3eb9723"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dvsin", "[", 
    RowBox[{"j_", ",", "y_"}], "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"vsin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], ",", "y"}], "]"}]}], ";"}], "\n", 
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "n"}], ",", " ", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"grafico", "[", "i", "]"}], "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"dvsin", "[", 
       RowBox[{"i", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"grafico", "[", "1", "]"}], ",", 
   RowBox[{"grafico", "[", "2", "]"}], ",", 
   RowBox[{"grafico", "[", 
    RowBox[{"n", "-", "2"}], "]"}], ",", 
   RowBox[{"grafico", "[", "n", "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[152]:=",ExpressionUUID->"655a598b-57bb-4170-8a35-e3f29827d891"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt13k0ltv3AHCZ3vPIEEmZkiEi5Haj+e6ngfKSrkgpmYUGU9NFyFQRqZsr
GaIMhSsyhuIYG8xFyhhJhvd9n1xFVHzPb63fH2ed9VnrrL323mf/s5UdPQ+4
8PPx8XHJ+b+b7TLajscO/kHp7Lb8oUzRgrvkvAZkN0CNf+iNOeLfU+KTCmV3
w/xLM8PvxMMKasEX1M3g3NZMn6/EJs1dBcmyllC8OHIFQ6wWpZixoGQNK67P
GYwS/2Q73XZQt4VGne/NA8TjYR11DnEO0Hw6tK+T+JDzzLO/ZZ2BO5rk8oq4
bpdcaW3ScWg0Nzz+jFhPdXv+VyV36PIJGHhEnMRvn7U67SRY6Bq13yVGQyH3
rdQ94EBg6tZo4vIPr5trLb2g9Gz0Sj9irz+d2TZx3rBhq7ifC3Hfuiu7omXP
wjGrtoSNxLEpK/Dqo+cg5Jy0/UpitkT2tsqk81A8O5ksQFzCa9JnlHxBsyko
9OUqij5la1twxcEPXNN+X5tNrNLC6K5K84esySsmEcTXc6XWmKsHgtpiuemd
xIaK6eljrkHQpWhzSZE4sCFhSbXlJQg12BM6rUTRGwy0o63jgiFdXGUqjTh1
2f7LkbJhcPzeen/OSor2b75dZ1UeBjFhgo3lxFbhH/hVj4aDB/8/t64Qi37z
DqpIugw/bOavKxD/1RH7F0cpAuSy9q/boEjRFlF9JU9wBEh0+RhOK1C07m71
b2EOkTCl4dVRQjxcWOqtmHYN3pajY78Tm9/qPmGmfh1e3FKVlZOnaG0T1Sy5
59fhqHLEdKsc6bfAqc8jrjGgsW/cNIzYrmz+cZXlDZBdVOA8KkvRyzRv6B6O
uwnnE/rouysoOhgVakTIxkJ1smY+XkbRWntuXi3wioW2H261B4lfh3uO9TyP
hW3rLy4ekybzI6Cdo3v+H8AO27eIEDf8StfteB0H36NEl26UIvVOxekrRd0B
xTeHyraIU3Txb+fi9n68A8onqxULxSja1stixntLArDuRZZqEudxJcrqRhNg
taXTNUlRij4wenXbCcMkcBYwLm6kKDq+z29X8fxdCDijJT8uSNE7FKzT+w+m
wMQ9r25D4vEjG4VQbgqsWqhpTRGg6JUcX6dcnVR4MVxhY8ZP0Z7uBqv5elOh
pv/AorgFREs55z3M2HQfvi6oXWqdRfRh63t5XybTwTAjsnCCg2imx1LkvlwG
fBcaYCkSX7ZFLha7MkDG1qvFdALRhU6eciWxGXBhLqDgwRiixT22h/tvzAQn
35Iu9gii60PeHxEOeAA9UX73jQYQvf5fSWEFlA2NfQeSpdsQ/VK33r5ZLxtc
p0wtpVsRbf/4r4pA62x452gRJNWC6OiSAa/B7GxgCut/E2lC9CjO7cnclwMr
jZDI5+eIvttp/Pi3W//CbfPbcVZViF68EGyzZ2UeTLz0vyOWi+h490O22kZ5
MBaY920wB9FqHdr2kh550KR9uqsoG9F/ZHU59TzLg3slLWutHiK6LCuuuFQ3
H8L2a8pdSUM014Lz1KQlH7wPBijev4Pogw9vN54RK4B1/7INn4UhOulYiOlx
5QKQ6XS/4BiK6CGp082H9Qugb8Ol34RDEO0ZsLN1+7ECKNUc2W4chOiIA9zX
rNwCOPFquOyZL6Kf/dzZnWhaCJfaXMztPRC92pw3WnutCPp0uuOjrBAtF7Rn
i+u9Ivh2OyF80BLRS3JTr4mUFgF6oVGxwQLRc8hC13yoCAavKi96ux/Rbbj0
TP+mYnhZNvpDwBjRfnrB898/FYNHUe9zsa2IbpGQltalS2Eq43j8e0VEX2jZ
DPFfy8DcfJ+vdT+LFtct/vQSlUPI+T9OuvSy6PRovagfCuWQlik64tnNottN
Nd7bGpbDhHfF+UtvWfTaRukzq+PKIaq+gXWjhUUPPGcyCzZWgKo9n6B7JYve
U50h3uz3FATtpA0Fkln08iLJ/kWLquCd8XH9DwdZdMnQrqbWbTWwJpG9RPGh
MF1zIlnemlMHzYe/1MkMC9Hf1LdL5J5+DmUPJ7X3LBei+WdzlsivfgVL68uf
aKgI0gYL9iUWj5pg8JWdYOoaAbopbENLg1YrhJrcEYhR5qeVbkzMZvHa4LAJ
P5XyhY+emBno79R7DSmLupa+D1+A9PGKV+LX34CuPW5d3vkTxBUfMMPDHTC6
+6lexZI5iHIvPp6q9hYe6yS2L3GcgWk6Z9gtqAsqN2zfPm33Fc6uryuSqX0H
grXdbiYXJ2HgUd21duVuODfTuu3jdQ78ONGRqOnXA3/qCJ37oDICa3ew5o9X
9EKkm3thjfgH2HNf2fXx8n5wHT/09GjTa7igaKcyaDMALk4e6o/Vy0Cbc3Bx
174P4BAbkS+z6EnVUokvqG7uA6xw1n3INntTJViVmKeaNAhHZsMpv4yBqpMb
Kt5TJkPQW5l9TMh7pCrH2DG1cnoIBs7smtrbxan6NiG3ZCTuI2iZ6i3503qy
qthij0Ds7mHwy77bbHTma1XQ3vCUopFhaDdSsI7aNVOl3Md+lxb+CdI+qSzs
Z2artmwMi5VdPwLXdku8Zpf9rLJZ2Tq76M0IuFilWIUaLFR9exU95BX8GY4G
SEZ6fOTD8YK2Zw+ojcIj92vVXoL8eGl/8X3+ulG4ra9gZCEugIUCgi03e49B
vffJICE5QcyXZZs3JDUOKpnR4W4LgtgnIS9aqmYcJHQ9AtM/COFna68iSY8J
YMt4VP6WIYwl2T7aIeIckHzB7uwwZOHUaonFWyQ5kH+DvdVmLwvrbc4dm1zK
gRN17d8H2SxstmY000GWA5z4St/R/SwcKWyrvEONA5cbJK8PWrOwYK2xDN8W
DnSs5HsfepqFp7cq8wW6cGD2oVH1lVss3KvT9sb3KQeoV5MRod0snDIhGSBQ
xYHEmOZc/14WdsyyUI+u5sAh2yArn34WHlPr+iu1gQMqDqP6R4dIPPl+xedt
HIjVOKUpP87CkiIcV+lPHGB7ur+wmGVhoxHWz0diXFAouCr9QAZhKt04Y9MS
LsRp+Md7rkC4yeGaWY0UFxznIpMN5BC26BO/17mcC4Jvb2phRYTtO5YZ/VQm
70+u3VethrB/jeoNYwMuVB+xTPJfj3D+XVAbtuWCl92tjFZThKf8plgODly4
4ewibW+GsMGhBxN9TlwQEBVawuxHuEJCorDLjQvuqma5yALhhkv9Oxp9uBB/
wSdAyxrhHscAu4LLXDh8M91ujQvCwhoVCZcecUFNf1e06EWEjQU8A3/lc2En
Y+3uEYBw1ICKo18hF0JyPFtbAhGWjI/UPPuEC/WauzdfC0ZYgTryxLWGC7Ny
7OD/LiO8fuJ7p9lbLmSwutv8biJ8LM9AUnGeC5azyh+9MxAuOfJdvI2PBw+8
xt9XZiIsLlwuGirAgyu90ctEHiKMbbajMcQD7wfoaGI2wioiuxeKlvKg0pOt
kJWH8IizOddUkwdu6/Y6e5ch7CF36uVFSx5UzfT6FDWSeut1nq87xIM72/d3
v2xCWMmbqRuy5sF03JfQvmaE25774L12PCjRP5O80EryPedbKn2CB9VdDp91
OxCeab2c8W8QDyJW3WnY3IvwpfB7wb3ZPHg8GWzAN4Gw2AUW2yGXB8nZYvMt
xAlup6VG8nhwHodBEgfhQpPNaUwRD9I+8+ut55F8Jdvr+Kt40J70qd5kEmGT
u3xI8w0PNMoayvVnEH4Xc7wtt5MHTeeOyHOInYOb4te/48Hb/+S/pX5HONA5
XnNbHw+GRH4uFZ4j86ClZ7L/Mw/uTfPNP/uJsEyp3fVzP3gA+3m+w4sonPaw
3mruFw/UvJzcQvgprJewVimIjwHNBPvWlQIUNg6YybsqxMDywSZhC0EKX9wV
054owcDro65yWcIUHmqtlK5RZaD9fm3T4sUU9qxW6zNSZ8BbywduEv8siMxo
XMPAvik5rWWiFF4WZ2XQqcPAAcWtrivEKLzXhndodCMDDoPvg0QlKJw7qpgo
bsrARTM+tRwpCl9NDrfvN2PgzJNL6WpLKex8gLv6kTkDN3+Mb00iVnj6NH/f
IQbGqg7nhUtTODLmaEOUIwNT7LQHO2QofHx37TUbFwaUQ/37c4h3zmqZa7sx
MFHzfa30cgrPOs71NJ5moKuoRmSA2M3gzqSILwOyi6veHpOl8O4JvtJufwZU
1caqnxArpbpdzA4k+dRfrJWUo/BbahOLHcbAl4x6qpLYsO+tQkQMyV9L8/6C
PIVX/f3H0OG/GehpGgMTBdIPo8wHa/5hIKJxcCqWuCj/3PoXCaSfUQ53VRQp
rBImvZeVycB7SdFf6ispPL/poljXQwb+DPvPxIn4Pffj68wcBk77f85PJr5x
qPCY0WMGfv058VRUicKnROVVZYoYOFs26bSDeG91yOinEgYSy7+tOku8oHXg
TPhTBh7pf+59Q9w9ULbpYBUDps7NPXyrKFwSqzyvVsPAfOz9L2uJPea/XK17
zkA5n5jNRWJ24WGz2FcMaMsnFdwjXu2Glzo3MxA6LaZUT9zbHnNX4A0DXsYx
m4WVKfzk8ozTm04GdBrvfFYljt1qp5n2jgF5lYAcIPb60sDz6WEgW29juDWx
SYZu0c5+BlLn6896E6sfifOVGiT/V6bhd4WYX2L+j6GPDGQWHPknkbi/1kWw
YIQBfqdjDbnE5X81vwweY8DJVVeskjhORz/GnEPqC2lybyL2HkqyVGYYSEk0
6H1HbHpbUG5ykoFYfNL5I/Ea01MD+CsDFaon+TnEgos60m/MkPiKG0r+I/5Q
vPWE/Rzpn2ZD0Azx0xNp6/R+MXCMs8qO7Kf4ttLibwsLDPz//or/B8Yx5RY=

        "]]},
      Annotation[#, "Charting`Private`Tag$134011#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
hRKbW9ME8lp754doINUet3XmsfMEMh3jq+g9z4Pitvpzv/lIpJLuFZx7kQcG
62PE9wqQ6NOi9Qstw3hQ1frLQXQBicwGPilGX+fBGn1Vd0lREqneMmbvucWD
jcYjCZvFSDRjnpWtncCDMXescUScRGVFAQbvUnhQDkb7UiRIpB4mZ7Ewiwf7
FJaq58mQaG598OKuxzywyFPcmCpLoh7O0IesPGo87O8UhMuR6IZT6QHzYh6c
yOHP2iJPIm/xJUvly3hgv9BDR45OIou3oSNfynmQzzRexKQ8r7P7VPgran6F
nDsPkCTqZT5f71DJA6MszSppBRKVx6vNaVTxYNDngsgbyj5z36Nq6nkwXDOX
Pr+ERJale3bGN1D92VU3Ea9IIk0vLHukmQeqf+3T1JVI1N9+/Z7gRx7Y2SnN
aCmT6FnElNvHTh54Zy8sSvvf+fOmg8sfdfOg1lPhlfj/zqu/13H9+6j7r9ao
nqZslalXtpXBg2p1w/6PlLX2JgbKDPIg7sQcT1eVRAKSc8bsIR5M1ZzdF0yZ
Ue0uVDLMg5SsSOXa/52Hn2t+f/kbD2K/0DcIq5EoceV/123HeeCSK5cHlP3Y
qfZqPB4sP+V92o/yjiQhhR8/eHBLVirhLmXtHd5MPMmDd2UT4m/+93+AvyPj
xhQPbnQu6u+mzHq66dihvzwwt7QWoL7v0atjj1bpz/Kgz6giZIpykorYr/l5
Hvz//4X/AzZfjUU=
        "]]},
      Annotation[#, "Charting`Private`Tag$134058#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
M/wfXOfFIg==
        "]]},
      Annotation[#, "Charting`Private`Tag$134340#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwU23c8ld8fAHAjIVIRITKK7L3d+3yOUDKyV0WRhIRQaUipRFmVVNIglURJ
9jz2zszel8tFqPRtod/z+8vr8zrjOedzzvO8Pu+X15Vw97c5zsLExPR6HRPT
//+aHp/pwAx7wljVXvaCD6B1hsIBo0IasOOJX4IwGas/e5j8UcgIlIOujfz1
AjQpsuvqOekDgLZ68Ow4AcistTfniZAdrMWfVL7qAWhXtOjLf2LOMOMRZi3l
BmjF9NgDN2lXeMS/KWqDC6DZ6901bolucDqfb1HFCZCjx8+yu0Ie8MpqU8pD
G0A1hsIF1cmeUKbMXWlgDkhlJzV7WcwbTvImn1EwBpTMcvSN1IuT8A16GU5U
QBwT4akO0n4we/WQRb0GoOKxztZquwC4z2LWfU4eUICVh+nhxNPwYpNZgY8E
oGHlm4YxQsHQfPPRLUEuQAnPBLHUoTNQ9zCPpXuNQKabMijlyWchY98FeudX
AuUvtGguip0Hm6SvqsmfCeTr6ppz0+0CvP1uZnyijkCSnxaVxF9chAKDpO3n
8gkUm8UrYy19GcJVPR55JhDIWDQtjXEiDB7YiW/eF06gy3VJmyvtrsCWcPOZ
U/4E0tBSiHFOvAp7Unmi4/cR6Dm/ZcQtoeuQMVyGtBep6GLrgxqH4uswHXLD
0KmXihxujLHsPHQD+m3yC6rLqYj7x+mwkuQI8J7pPHDpNhWFdCeEzItFgb5h
aMoNESqyjR7OL8RR4MddfYHrHwUpGUn/uO52C/4xBzDGxiho8mPBadEXt6FS
zMo7NJWCrO8N+ByQjoWhIW3uu6IUpGC2841wfSwEFOyPfvNHH3Gw+k7TT8RB
UP5yh0CvPjpStPahwi4eeCY/8/0Xo4/4ZeOVnBLvQF3yfuGx73roKsfH3VFC
CaC68e5RjRRdJLfvTmROQAJsrPlZbBigizpv+DMG6xNgpdlG6Qmhi3axKrxV
OnsfLEy3fVXv10F1q2lK3Z2JoBls/FNwvQ7i/p6oKRb9COJ+2EVsQVro4fAF
w7y1pyCn5mqnhtSQgYhz2oj9M4havno6/q8qmj2ozcaR9QwORgj8OpWvinbM
nz+WpfgckN/ttXdyqsjfW0uKaeg5iDtHjIRtVEG8Hu/TX+qkAucnbU/ikjxy
ck55v/Q1DfLuzfex5EqgxUG7DanCL6Fjm6iWsagEinDlOG5r+BJYZubGRCLE
0cdj/sL5CS/hb0tlvmbWDsTjR71xUfsVmLuw7QikC6Ha8P6D60NfQ/0n/js3
KJuRWuaW9SIcGeDzx/b632ezFY1KtUdbVTLANWPPkL/Wt4qjH0JKLjtngNUJ
/pMBIj8rYvJHA8YzMoAj5JSbdRATnsFZg68s3kLQH0tpfZ0N+Onn/R9U72WC
ae6eG21tApjr39XD+3a8h63nVAf6Rnbhh96Orgp734M916nLmf5SeFe3wtEt
fu+hvS3p/b9/Uph403tssOw9OP16rLNNbDcuepOYV6CUDRJTW/izHGTxF9v5
UrNP2eCScyQjPl0Ra3D2UomJbLifd5mzTVkJXyivLFf5LxtAwCLCKV8Js8s+
wPw7PkCzVpIRqlTGEmsGNaOnPsBWyuFhtmkVbJ/+oDloYw7YxEUGBo+p4WSX
cHNPiRyInvK9nyuqjid4T7U6aebA4cKTCuEH1bF/6J42qksOvLXdwoE71XGU
zZdO9qwc6GUz3P+sTAOXrewZeGz+ESrWOc2UXNTC63IUD8Ue/Qg2tf/eKX3Q
wqYnBIeuBH8EPoctl4ToWri348vw8eSPIHnUQsfmgDb++urhuPL8RxDQf+qg
JKiDpawXZqpv50J4lCRrTLwuFg7bp3ciJRcijhhzvse6eHPW89sbCnKBWev5
he1LuvgPh62S9UQu7Oa/4vPJXA+344KgEZ08mO24IX9+VQ/XLmyuvXogD4K1
Cf7m3fq4WMRHQMojD3RWRCJcrPXxyxCRopNxeaA7IuoHqfr4gsrVtV9TeYA2
v3vQp0fB/q4Dlsl/80DLzb1n0xEK9ohWT4Et+eCZcZkzLJyCLWemDCMo+RD0
kf8kcz0F73puGsV3Lx/+8B+QvrSXioU+vRjIT8+HpmqfeScPKuZZWZE/WJ4P
eR1Pgz2vUvFvx/efnjPyYbz3+ZPNRVT8adPWrUqoAALXTthF7yBwNfXU8Q77
AmBRqGcb0CRw4cm6/OCTBbA9hSPXxpzAL+pDnEsSyfZJ83tVZwn88EdHhmtm
AfxjCDwqvEXg2J3yK8xVBVA45Wzc+4TAIWHDT02+FEC+1srF6EoCn8rSWppj
KQQphfsbJDsJ7D4YZxAnWAj9eyVMRsYJ7MTJuKumVAixt7Nq8RKBLbT3TH42
LIRvjnuFG9cIvOf4Y83zzoWQv/fPxH9cgHXuLUeI+BeCImOoar8gYMnFV7LH
kgrBNj4t0EUJ8DZRpovrswuBqWz0lagOYG4z55Y3tYUwp/WnmNkAMMv5HFGL
wUI4eNowgHM/4J+vuPyXlgrhco5IrIYV4PluD3xvfREkp/4ZD3cAPMFSvkVb
pAgisj1h+RDgXpVtxwZUi4DTjOlK5FHALa4BuaH7iuDeYug18ABcFd3IJuFS
BJ0b3ykLnQBcUCzpWBNYBAH4XAC/N+DMmYvpJyKLoODgoLaGD+BUgc+/Nzwt
Avvmb6FnyPiBkZLZu49FsL77K+on+0cH3ky2biwi3z/pG0e8AIc/H/uyPFIE
48v/2XF4Aj73SRceLhfBJ9Mp3OUOmEcpb6qRoxg4176Y8hwBnBajEv1XpBgU
rVgUIg8C1vvyVk1RtRhWHs6GGdgD7jDf3e9qXAxHP248oWcJ2CszNSzeuRgO
aQWsDzIBvMa1Q7rqVDHU3Pl4cw4BTjj5qOX71WKI4+EXSiPzK9+8NUgqsRiG
cny/JCuT+5eLF3LMKIZcTgVKjxRgp1tcOLK8GG5/OmxgtR3wjf0sG+fpxVBS
KXuWfR1gkTehH0X/FkPv5xoN458EzuH47Wy5qQRs8prraxgEHq1ffJWjXQLr
KA4lt1oIfHb3SYtJsxLwozi2dZQSmPsm/Tv/0RKw9i3ecTiTwLp7h9H5yBJ4
snKVgxJF4PaXTtMZySXAuu/Jhbvk/fVk644Zyi4BNq9rvYrHCHyvpmkA+ktg
6844NU09Asvt2nv19JcSkPCzUUjdRWB8rXL3C+ZSiJvh53DgIfCXPYXB6+VK
IUO6ISZhlIr3Vb7kab1QCl/XUSYunafiEXGJvLXYUuh+qDqs4krFwVeSD6m8
KIXrR/ouqeyh4hS4l36vuRSMWI+78nNQ8d+yK3sOipTBD0mxyKjbFHxXdGXm
tkoZrEDfiXc+FCwTei6uzKgMrp4qrN61n4LtKX5D4qfKQGbjsjznOgp+X3zo
7HRZGTSMVpk2nNbHe4V7RYQ6yyBmfcaFeDN9PHTeptqUXgZBW1c4P+zSx5y6
+ze/4ymH0akmtn/devhYgVZG8JFyEJgUj2Io6uFtuVtGmJkrwL1NwnCkUgcf
jv5rNylQARm3rwUnxOjgVI+p5jqFCnB7ZxL7yEkHK/AXFd12qoDI9oCQxHlt
vOfs0fv82RVgmswpE8GtjbWSHV8lKGNYrHVPTlPUxG6ur1zSRzDsM/3xh41Z
FV833f7oEQNDxZITT2+RCn6lFd99axlDwo8jl5UDVfA8zwWzUxsqQWX7HP9q
lTI+W2Ghq6ZVCXkaf5yenFHE0eI/tpbGVAIlR2VwW64Mzp8wbGmjVAGmpo1U
eoniHpOrX2P2VYH9ITsjfWkR/N+7cgFzmypovnT319KEMNa+qOvWcKIKXgW2
+mscFMSFfMr/4btV8Hgh/QmvAR8uMhIWz5mpgjcfG+gTi8y49NVSUEJCNVgb
NqTL+LGjIW6lRzbPqqFYb0Q3mXkDWgk8Wb45oxpGX1/5dzCBG1GBzhFTUQ3t
V6stiwY3o/LewSc3Zqthov+zK9dvflTBUV9/FtXA2WmvppMbxFGVz5PtzvM1
4BHqyL6hSRZ9ZJw86fpfDWjKyM28dJBDaV56JceYauEq3fFc6oQcuuHZe9Bv
ay1sPhntnf1LHpm4b0m6RqkF/xGn/6pFlFCb8w3Bd9G1cIEI4V0VV0W4z9br
Y2ItKAjkn491U0XZjpKFhc9rIX6JqTw/RRXdta9wrM6tBZtTi2214mrIwfp3
Yt9QLfyJf70vV0gdDZmc4mdVrINq1u7i6B8aqLVe/ziHdh3c3cjdMqikicr3
bsjbaFAHeWHTxRknNNEzo9d2gvZ1oHVua09VryZyR+P3FEProPC3gnLBBy00
o23P69RaBxKS20wTzHRQf/5Od5feOjDPtODad0kHNWl+++A+Xgf6MWbZxzN1
0Fv1OOtTP+rgTceAyMQGXeSn3BgfLloPu5vmogqxLvohTd2UdaoepFUPLizy
6CNiYk/9rZB6YI5rbpLQ1UcRT0zCvK7Vw9AtY/a77vpIYKvd4s5H9ZBj1r5B
9qM+0mI+2ZZUUw/pFcEOvGYUdLk04GZIWz0cLWTsFvSnoLpzZ8FhoB5ksppL
be9SkOPC1fdbluohoEzE3KuHgkIGH8ZFbm8AL7Prq/N2VIQTn+7zlG4AY536
iohAKuKwSftnqNoA5qoGmy3jqOhRw3v/f3sbQIzzs5JXHRVNXMvbPWzdAG+1
uM8UjFGRHJSMFh9uANmvFbpqf6ioOK/O8mxgAywUpPm/liMQy+kWdrvQBuB5
pxj53ID0jkJnhWpkA2g+nD9V5UigwdRh5S9PGmDY96jq5asE2uVKm25KJ8dz
G9AF7pP+EWI8S//YAM5mBQI9rwm0Ere8yaORnO+M8GBtE4GMzP7UG3ST87Xf
OvtjgEDR65muiI02QHf80+T9swTqrmTTWWU0QJGa5VjlLwKJhnItDSw3gL5Y
zoDLekCeOlvSC/81wK6ov3KifIDefRc4mrihEXREr579twPQf+9EBIP5G4H7
ZqnXOjlAhI9ku7V4I6g1WXyUJ/0XISUTqSzfCJn+qxvPkD78NKaINmo1wp2b
5VpjpB8FktV/zaJGaL+c/dXXApCro252g1kjiDeKc263A/SKF7xeOTRCj2u0
xawzoIVWI/Hrbo0wxZNyf8AVkFaUaZ+bbyOUpBHlc+6Awoys4uFcI/BPnMsQ
9QTU8M/eRDS8ERrN7xkGkF7eXHKI6W90I1i2c52neQNyOutW2PegEZzV76Bz
pK+fq54IyE9thJ1uHInyZDwz7yuTkNUIKRG3LzKR/VXSA8dOFzbCI1af3z/I
+UOOhTy0rG6EC8oyO7hJb+Mdl60UPzWC1LfLa3uOkh4euMbB1d8IESqH8pIO
AbK6H4VnaI0gsHH4GJ8DoIdWcSF1C42gteKgmmUJaJzrvkra70aIzTQ38zIB
JFefNHN1XRNYVZ+eMkKAAsOfPz+yqQnO+6brGmqTvqa+cqIKN4FExb+bxxQB
sfx+u3m7VBOM/vgg8EoS0PbWPd9BuQlYdkic7d0GSCOl/7OHbhOwJpcLmnAD
Or6f/fE7iya48vaT6cw30sOiT0O7HJtg3fStc4JTBEr8qnH0l1sTRK2uk4zq
IVDDI3epPWebgCOgx0WxgEDjp36zn7jSBEFv4j64vSLQH4P42du3mqCvupa9
j/S2wmzZ+89Pm2C9pWBQNOnrOD0hPe/6Jki/0rVfQoRA6TzZIrEdTVAR+/J+
IBuB8MTefzmDTRCmeKuRc4GKvt0KrllZbIJDLefUuMtIbw+2HYgXbIYWZgmW
QBsq8n/vqZon2QySgiJerFpUFHltlW9AoRn4vFZLRgWpqEhevn+nQTPou9ms
uzREQSKXIo4VeDcDy4Wfs46HKEjTSnTvUFAzCFJZztjrUtCBXbkyzJeb4YUe
lStNgILCWsa/mN5thm8fsku12/TRhAg1ZKS4GbKsAiutdfTRm7Lv0WzcLaAy
VGIqOaeLqu7c8pcTaIEPFeHnnpbrooHjEjaW4i3gyTzFc/GOLuLmsdz2SKMF
Qn5dH3PW1EUBrhkpCi4t0BfR/6j1jA7S+nc03/ZdC8yHWi/dH9BC5hY43Liw
BfRyhmTyXmqhY4/FLLWrWsDVV+ScRYAWitcemRbuaQHx1JNWC6xaiOF/SGhi
tQXio/Oub5XSRMlj9pcCLFrhnutudSErdcRcZbonZr4VSr3X2cW/VEIt1zU+
1cm1gW0r394X4UJIb1Mzyx3NNoic3j7sTxFE6Y/ctA+hNhCXY71094cAuvYu
9vmifRuMndr1evX4VqTXNxMoeLUNTlTUT3+6woPS5Z9s8+ltg0y24k0NMd9h
DyM8e/2edoiXKrw9XbIJn1f61HRyXzukd93aObB7C84OEppqN28HsalRFZPT
vHjH2nuhx47tYNlRZ/SAhR//5h0OVz7VDuun6mPYdgjjbIq2vdPDdvisqVYr
KyiJxeLnfr9ZaAeaTH5TWZU8LncLe5PzvR0C7z75mm2hgF3V+ZxLfrWDYvyP
vT97FXByj15hC0sHmGxcswyYVcSCorfOLgp0wMcCUZPDrCqYN0PmuwZ0gEVy
yq45bjX84WJpKtWoA9RTLspQzdWwlYWVzd79HRB9sT5Q7LYajls698HRtgP8
VqOHY9nVMbd2vf+FEx1QW7VYuPhHHbPVHJ+viOsA59XpfSFNmjjt/u/HDQkd
cF2HbVScRQsbnYgx63jUAebLqVsNdbVw+Ia8jIkXHTC/wCWy+FILr1mt82Yr
7IDqCoMHlSHa+Ndw6pTpWAds358orc+qix+817pvO9UB7pa+u6ZVdbHW1Saj
w7MdwHM93+z3EV18Zte3F6eWyeerS+SZFevibz4G7vEcndDUzSZ0+4Qenvs5
OvJZpRO23A9rvvNCH+efiKsy1eoEA0Gsq9ysj6/0Eq8q9DtB99glA7Zv+lig
4MmpN3s74dzfqAYHKoWsFw+tXDrcCf7XVJ8FNlHwRvqGsa9unfA9PSm5YI6C
++yLqz1PdIJrx3lRRW4q9tMUum0V2AnlsT+4XplScdJyj9CuyE7QS2lLKCij
4uMeEasPYzrhQZTJZa8+Klbp1hzfeK8TwiLF9ht+o+K6jwnpP590QpXMr9Sg
nQS+s9Mo2vdFJ/h5bu2oJ+v/w/e++4+nd8K23tYdhtYE/hpoo938sRNcbrAn
ZV4kcOkE83ZU1AmLg+jBozgCR9h8WMst7wTvHXdt36YSWERtc93Txk4Y/u41
r1dH4OmUijd8bZ1gdvNTY0EP6Zst/jGR3Z0wqsjn5UgnsMnXVrvA0U4QURZQ
XGUBzOcWqjM92QmaXRYRLJsBj7QriBye7QTa6GE2WRHAb9DQv/bFTjibtc02
YDfg4OzbNOMfncD6+d6OPlXAIK5fX/ynE7qC5USP6gPeED+boczUBSwmFzZw
GAHu/vcoNo2tC7bd8U5vMwP8zH9/oBBXF1zv3V2RbwPYZ/SXfezmLtgcoixa
5gRYwzJdl1WgC5Q49j2YcAH8r9xRNGR7F2yMDufYTXqzSYmd+Yt4F1wMM7K5
dRzw/af5k27SXZDwgTjMTXr1KI9nQ498F2z9Hrg1i/Ss/GX+TDPVLjj/QN3f
l/Tuf19q4rBWF1Q27DxhSsaVLsFBmpQuWMrSXt37f/+27nTMMOgCZY9cHXfS
047ULj2xfV3wskl5dzLpbcms8B0J5uT+JOKHlkmPfxFRY+G06YKiEK4g38OA
C6PHp0Idu+DHL2kuVkfSzyvxjd8Od4H1j7zmQtL7Fr4o64R7F2j39o3H7Acs
OLQYP3SiC/QH/l4JNyD9b/Ys2PpUF4g+/jyRSHo3q+SAU11gF5SeP76vWQlw
iPyavn5IF/xu/bostguw4eMssezQLohcZNO5L0h6nMuFVepaF7RvDjgmz016
fLakiSe2C/hMKoZLlgjs98Byp8+9Llj0L6L+GyewthHtYu3DLjhqtp7/VCeB
m55sULz0ogsYEkwjjdkETjB9eqM3vQuO0Q0Ki54S2PWn6ojauy7gfPN74PNt
8r5aOccxCrvgwd1vnPdJ3xavzk8blXfBcEqEgu4BAl/PuIKeV3fB679KNVw6
BBZcl/7V4VMXpO2uKCM4CUwU/GdbQ+sCy4MsLAspVMzhcStTjNEFn7yTW7dF
UHHn5h1sFxe6YE5309kz3uT75mOcr/q7CxqHFy60KVJxtGiC4DOeboh5zmrP
n0XBDk27T//h6wYhlY3jy7coWOxcSaO9UDeMqB/l3eRFwTntExe4d3XDyR4X
5Z9iFNx/TXX4vG43LHhls+ZE6ONUlVrNz0Q3+A1fMA531ce+w06xKkbdMNP8
ff99TX3MpH0Fpg90wyPVOa7IcT0sPfspxc6DbHd98hKr6OFgK19P5bhuWC25
8ycuSwcTq//KbyV0w8ZnW5a2X9DB7Bn3ttEfdcN6h6ev14x1cBJrSUNyWjdZ
dZezfBrUxpX5nPIbirvh28nFL6X/tDCP6OvFyUlyvak8fEpymhg5XBumMbpB
/XzjiX9LGjgw7kjzxEI3MAWGt9gUaOAeZsHXY7+64SqTnsaNPRr4KT3SdYj7
M3DunpQEW3WslO3T2qXxGViT/D8bH1HFFoZKb6uuf4aFmmu2qk5yONo7z/P5
rh4IoQib/EnehGdRViSXXA+wtnjzubNtxPsEX2acVe6B4o8s8Su+GzBLfcKC
uV4P8G+V5ePTY8PndwWf/W3ZAz9lk5jvPf5R4TmqFmFzsQcOtf6nziS7DAb2
2S/XdfbADN8rF58KIfRUIb3ev7cHfm37V62+fjtaYX3OGBjqgdz2b3+p5iKo
MCdO8cN0DwSIMA0tfd6BlDb757ms9kDexpEKn0UJJNKsWJsv0wulfoqXfUel
0X/o7aRXWC8MFcUH9e9QQaVpc4/PXe+FN/bxLx+6qaBwDgXbiKheOBaQNv7t
hQriac+sfHGPHN9VKhC4WxVJH3n3dOR1L7xX++XoL0t6NPSDk117LzSG/Fzk
FtRAIuNfNx373Av8vZZlVbYaaMJIrf70QC+oRU7v+Rurgfy4P2rGTfaCJ3yp
XWDVRBGPc3mbfvVCSFTe1cJpTZRXVNACEn1wajjm7+v72uiC6K9rB6T7wFZO
WGyqQRuhqzr6LvJ94LPz1du4v9qoxaTozQXNPrByo0jKHNFBk73FEXn7+6Dl
TiUYi+miDP2/1JoDfTAbtduixYKsz57p/+i07YMO07eeBRd10Ypn6bEllz5I
fdRun/dZF239rwzJB/ZBHiEtrhauhwac137qnuuDj2tf/Uve6qHnZcR7k0t9
0D8ideR5tx5SuFEh6hnRB46Sj5TP79JHRlsr/zxP6gN2iWxW81J9tCGEOef9
sz7YtV3t6YMxfdQ+aOBdntYHT1SivbTXUdDhF1W9g+/6YOJnrmTAfgoKVqvJ
FajuAwpDV+V9MwV5aog/v9PQB/NLCwObv1CQk9al29yf+kDvYL16ykYq0tfT
cGfp74Ohz7DP1JyKFCjxFqEjfRCWFEBx86GiHcS8zi9aH7z575vdi5tUxLIn
bdPCQh9UiPC+fllBRcuGTH+9lvtgv5ubmccAFU0ZH6bTfveBw+vAGdNlKmrY
v7Wsf10/0JCxVIwUWe9bX/epFe4HiZNNmZ2hBLpiO2aPxPthY0D6YtkdAgXa
UwxKpPqhczp0pTmNQA7Oy9s+qPQDoVhnc6CBQCaHrFgVtPrh7KDh48o+Aum6
ZC680u8HBeaet/YzBBJx86hN3tsPvA+eeI2sA8RzDGdvM+8HJyXHvZ1bADEd
F0m+a90PwW7qllOigL55htzc6NgP6aad8ttkAdG8ugMjD/dDZZDq7RPqgLp9
VFxZ3fvBWvydZA8FUJ1v9P7LJ/qh2Zv9nTvp1UK/GY3fvv3goXh0kZv0akaA
kXhwYD9UNaP33baAkgOfcy2e6wfX4oelRaRXY4JX/vMO7Yc79Ir5EtKrl886
TUyG94PR7Lntg6RXA0JyW49E9oMy7xe5baQn3S9sLhqI6YcCzQLW/3vV7pJv
mv29frA4OpAwRfpz7+WGuPaH5PrM67v+71XtK7sumj3th5vvD5VKk7FM+BXP
uhf98J/ThNU3crzw9SFrgzf9YCvOlzRAzs8doUMtfdcPv17xvh49BmjtZoKM
dm4/6MyejmEmvboUtcSXU9QPx18reiPSq+O3zf8pVPQD5U7W4WR7QJ0x6bOv
a/rhu0N1PD/p1Zq4dT2STf3QfumNRuY+QPl3jlY+aeuH0+tZLh8FQOn3SjMF
P/dDxrfudDUtQEn3BR/eG+gHwajYn5IKgG4/CL7GM9YPYedXc1QlAF161O4X
NdUPcy1Wckf4Afk9Vji4bq4fstL5P77lAGTzbFLlz49+cD655PdinkBGKUjk
zF8yv1fGfC2HCaT5Ipl9iWkA2sqXtoi0Ekjwtd3IFNcAiPzIUhDKINCGN9mN
R7cMQPznvGemDwi0ksGdNygwAMcjonOfXiPQ6Lua2x0SA/DykhnrB2cCtX9Z
N6+2ewCEOLyFBwxJnyoYmycoDMCucDkBFUUCPc+o5XbUHoBx5mzd46tU5P6q
LmbIfACmfe/S1idQkc3U+gWqzQDU79PIeHOOigx37TvwzHEA7gXgqcsHqWhX
aj2Pu/sAuBT9t1AtSkX0Jw1x0+cGoFr/8UxbEgX1DHEsmYQOQM2JhVbREAqq
377fKiN8AEZ4s3a8tKOQPmvcfCpmADbqXJk6xkVBPveb7nxLHQA98fU+5f76
6Et0y73V1gG4a3wtdXCrHhpp5l527RqAY/vFWoGuiz5tsLDDfQPw4tt3y8V8
XfQusnXrNdoAnBjaf1vTgfz+Xf90n+P3AORvOLHzerQOWr7Y/oBv1yBcsv6X
f6xfC00Wb/4VLDsIHznvR0g+10Kff1s59SgNQrTD2euGnloo/1yH4CPdQZAB
DtecJU0UEtT5aIflIFgQPYUBaxror0/3Y9kLgxDo+2+OvqaG7LRc7iiFDULa
xMkb6yvVUCYzPUL9+iCw/LxinBuuhlwf/jxNjR2EoMoUKbxODVXWCptYpw7C
6OSkbzWrKrop7rYc0jQIp/OPS6QMKyK+ni/mDcJDMCPFUXeVQwrJG7CveZYM
QcTXDGVG9RJkZ7zd3YeHQEheMuwQ1zRobLWy3l83BDeyrZyviJD3fvphmnzH
EMiOq7QH9LdXHIiRM1uiD8GWJ7a5WOl3RWC/xcPzvMOwaGvOIlG2GRedTlCL
9h6GF/zf19iTJDExqHN41W8Ydg1i4216O3GV0fANv+BhSOSTdHrSvxM3bZPu
twobhkeb+IRXBKTwUFlBGP/9YfDkocVF3tqNmTYMtjzFwyCVvtSxyVoB70uV
OPFh2wiwcBq+I56pYY2HPNJ1IiPwjiFYJjaihsVj/04OSIyAJt+GU7dF1PGf
85/d1ymMwFTifMrKA3WcZR3l6ohGwHjJ5JlIlAbmY/5qv+o1AoxzH0d4bLUw
08/hrbx+I5DwVyp2NkoLz883dUkHjcCYQziHHtbCdX1p1lah5HyTzMLK8tr4
fLaTxYs7I+BTXZho8Ucbjx7BRvuLR8DlvtLE3ku6uMU+i9W1YgRyuQ4+b3ij
iwvNkqoCa0ZgdnNWUUaPLr6rHYySP43Az9CRtNtKeth4kwxlcYKMfRWbU3v0
sBob/1/WmREIfeOYx/lPD+/4y1ws+GUEJDrb3jdI6+Nf9EHtPT9HgO1M7Ypp
sD5+Wx6nfp9rFNzaXy7uZafgh7mXvr3ZPAp/jHN17OQoZP3s/aGcfxQCUwzM
c8wp2DXRUHlGbBSWD/0X5hJHwVv8fsrpa4yChAxR50x6de3YJMNSdxSG7nB/
65Gl4lnnjnQPYhSOXqDlPN1LxTXGb6VjTUbBNXRZnusyFZ8TPSI5fphst/e4
bDxJxe5WKg5DbqNw3FxJPO4vFR+4xnyr13MUsr+hMCleAkszXnxtDRiFq55G
LlpUAvOKnJFqPDMKpx4XDbwn/bp6YK9zzYVR6LOO4A0+TuDu3BlcfH0UBEIy
hwZuERhPFy3nRY1CHrdX3KVkAr8Vvi3zIXYUjF8aUU9kETj8imL864ejEEwR
/MPfSnrl41p16pNRUMxINesfJLAzve3nk9RRCPU8LzrJILCKeeCRhMxRiOiP
+u8TK2CRMMN7cR9GgXtzm/u7TYDZc7bW38ofBX31i0LdwoC/TU79uVEyCl2B
M70gRXp3W4HSVTwKWqMNR76SvmoyjXS/VDsKv4Z3n5vRBpwX6px4ronc3/WT
M7sQ4OfZck2BbaPA22cf/mof6UXa39VT3aPwc5lN8NQB0mcCrare/aMgIvz7
Sogd4GP7nx73GBmFxMdcjxqcAR+45P/oCI3MZ/F55OIKWO89aj04Mwotx8YO
aZG+lZ7YwuzwZRR2d1K7bUnfbuGnaVh/G4VDQt8S80iPruzL9TL/OQrNCRX3
D5FenblwI3nfyijkU5rrjEnPzjrIe6UwjYHmePKuYDI+usTHIsY6BqOmYu/o
ZP+eqJXHyWxjYGLw3PMJ6WWznVOawhxjYHqu3f6hJ2Bc2tr2YMMY/DlcfbP3
GGAth3xv/o1jcKl3gfsQ6d3Mxaes9zaNQcqI3B9J0ruSUTefbOYdA22mD17K
pHcfSgZox24l52/cfvaKNenRUqcOrm1jsI3f00iA9P91e4OTUUJjsGww+3vJ
EPDvBVk2dpEx+GrmVrmZAtgvkvfZ9R1j4Ns63nhGHfCkxF8dFokxeDA1sldc
DnC7XYvvqtQYTDyduLqXH/Dehdz1F2XGIK36bmkVJ+DSm0+e/5IbA5Ynm47f
WCXw62K/7u/KZHvfeZnRCQKL2Dn6nVYbg/ptpRNnuwl89wtwLGqMQTz36f0O
tQS+LL6FMqs7BpcVjG99SSPwctHvzycoY5DFJiv96h6BfWwn/KeIMdjks+7b
66sEto/4+GLMcAz2tKq1RB4isMK8PVevxRhIKB462LKewIV25hW3rMaAqTov
duwLFRuW7QkibMfgHXFaTrKbig/GKg++dBqDD/YegSpPqThKhfNt8LExOPLj
0eVYGSre+uifq4znGNzUyPwnyUnFz5n/4x3yGoMCg1eqczMUXNg5ccHQbwx6
txfoCL+iYHpwqSnv+TEI6q5Z5d5GwYHDOWu1F8egSGUjp/NXfbxq/Cbn/OUx
UG36eWasSR9v3ZYoPH5tDHo+j+W+vKiPDYv8Z9/HjoFfSsJHmW49/HxV8pZF
2hhw1nlYCrnrYgVPIYL59RhYrsRMvFTRxQWfNn3LfTMG/ezLmlfXdPCnZyvO
Iu/HIOb3s5eyD3XwqkGP7FzRGPAo7PTzrtbGByOiGiPbyPs2HCT57Y8m5tu0
xFHzZwzEL/9wuPhbFXeW3bq5f3UMnraOnLhUpIrv+kqtb/s3Bqc45IY2n1fF
vE0HWQfWjUOX4jmRP/+pYN4btauLPONwtOtF/PdBZbz5b9K37TvH4eugv4xM
gjzmnjYeCjIbB305jofZ0ZJ4XcXj9zuTx6Hg/MhKaEIXDFCMTEafjoNCZomx
oO0kvC+eH0tKGYdTMhSDI4MLcDCfysv7ehzyHrPFXlv+DR+yRoOZcsZh16Ut
PqKX2JFr8k694fpxENnPbVygKIAKz7+tSfw+Dn1M7+YDDKRQ7E9bF5v/xiHK
3PpL7agUOnZm5cfG3+PwonH0QmioNOI5bbH7xto4NO+yvs5SsBsd91qMCuKc
gO5lVzOGhBzidVS3tBKbgNrT5yXdu5TQSY2Sfk6zCdhhmzjyp1od4fbPmYUW
E3BA55U3+zoNxH9qKeyE1QQsUo8IRhlqoIqXUtK19hPQ4GjCMoU1EN+2+MAr
RyfgEotxU1uuJir57cH188wE5Flec1l3RRttTgwbeRkyARwlksZP8rXRcbWk
D3YXJ2CdsfebO/PaaNPJNsecKxPgLirLd9NBBx0b0k07dXsCKA9UH16S1EVc
FTzUyecTEPD6n8CxR3ro6CHZzfdeTIB6115/nlo9lPfTkGbwagKK+5c3MS3p
oSMq56OevZ0AtnPjNz8Y6qOPKbTPB/MngIj7vKI4oY84iLV0zqIJODy9U3ye
nYJcBgQvFZaQ6xtcap5WoCB2vgOSApUTkDLHju8FU9Ch64V+Hc0TEDJt7fzi
DwVli3cZXPk0Af+xsw6qCVMRW9mXrcodEzCH3c/+0qGi9z8kS6J7JmDyYvkb
yWAqWneXGqvfPwFJ94xe34inImclJ7fZwQkYjn0YtT2TilhPxLCbjE9AIq10
3fAYFTmxpg/8R5uAR0sxyux/qCjrWVXWS/oEnFPXOebGSyDHvp+2rPMTMFDw
394XiEBv97s/L/+PbH9eMWt2j0AaChIE/J4Am7yEs29JT5bzjA1W/J2AumHm
zTZ5ZD3f5bKtkokGm+6wjwR2E8g5XyTPgJUG9EvYYX6CQBMPB22q2Gggm+lw
/O0SgZZdnGOrN9AgZi1t5RcnoFAkqGC0kQZ781/OR5A+Wb+zt7FmEw38ggUN
nMUBxbMlnjDmpUHYQmahvxwgoRk7trqtNGj8cEWgifRlahPfi73baMBzT1zS
i/SlQlYnqheigTjrrdf7jQDlxd0Z2SdCg1IThXN+ZoCIQKtLDTtoUPmMcbzH
GlC93Sbh/RI0OEAVtLjqCMhK+1NB404a7NK9tsH/MKB+oRh7U2kaSBw+eeUZ
6Tn3FbPvTTLk+K6b93k9AM2NbLhjJk+D4qb1mg2kB4MrG5VaFGnwhh5zAJNe
XHsR2WKuQgOcodfzh/TmzYh9Pq1q5H4qUmv+783N3us5DmjS4IpYt4A2GSeZ
1b78pE0DDVn7Tzpk/51K1w0t9WiQeX/X10snAGVuNhxvo9AgxK4oivU4IM3v
zGFWQIPT5iyvW9wAlX/GIh0GNHjK7Hm4zwXQvsKwYmsjGuwQr6qUJv3cnkQ4
de6lgdC8z/cC0tfOoas/bPbToDZRjjea9PfEkdJ7XWY0uB6CDF/sBXRyz0VV
uwM04FY5mr1KAFrepdfWbUWD9lfZNx+T/gxl/+1rb0sDwz9Nfy8pkuc3W7Ch
x54Gr0yLDFN3kuf1XnNv70EafI8+YVC0kTyvO8s0RxcanHrkcfEtM3lewR+v
9h2hQXNR5p2JZQIRuqpl/R40UDmiEC3eT5A+Wzp48AQNBlXnt8k0Echq7d2v
AW8aFGDWtjPFBHKvVtAY8qOB7qtbxNRDAs29nOs4fJoGxhaxlew3CRQcmeE/
HETm/9ZGtsBgAt20kHk7EkIDFvWrd8UsCLRZZdrkyEUaPI9sbDymQ6Ak3lf0
0VAajH1QTv4qSaDM3p2S4+E0kKS5isz/oCLN4okKtxs0qJ4f73ceoaLy5BSX
iZs0UD2+ZM1XR0XtbmKPaNE0WC/8t+LkPSr6MSe8mZ5IA3bmA2nVUlSU8GS6
PvkRDTTNZ6Ql11ORumVumG0yeV4Bja9ypijodI7FIk6hgc6Vn5RTqRT0JeTK
p8eZ5HqOyDsc46WgaDmLCJv3NAjf9J+i77w+kh8SIjhzaCDj/6jzXa0+8oaP
WWcLaAACtV1TZ/TRFBs92rqKBod6I8T0WvXQ9YIcI45aGkyG6KWopOihnd5h
K+X1NKgL6t/hE6yH3FoEfRVaabD6wHLDW0E9NHzXzIy9jwYGd+cyIp100Wex
D5xlX2igOMG6SCO/v8EdoZVBSzT4JBxhmhGmjfiumZ6X+06DtdeSg437tJE1
nTbz4BcNRg5ldwr3aKHWTIGGQNZJeFTvkaQyp4lqdS9FyAhNQtK5X1+f/FJH
ebb7WBOMJuEdaD7odlZGkWaFN0T2TYK3QoY3R6cSOmwoy/Fy/yTsVdN4HLpf
CbGoc23MPzAJj38p2ehqKaIDvG0CfU6TcOuhyU1bdnk00+4gJ3JqEkx93CK4
b0sj4QOe1mn3J8Giuum2nrswCjO58SyXPgn9/y57+H3hwJ2uXodVGJMw9NL+
+sABLrzrjJlQ5twkuFwTs017vxE3pWy592JpEg4ffqUfrb0Fb/37JOLun0nQ
EefkW/nKj9Oz8k8F8EwBNXt9Ybq5GG7nndFX0JqCK6VBH87kymBJ2eZfr3Wm
wG7+bfY6A1l8Bt7l7dSfgsi3hxNWW2SxsG+w8nY0Bct3G7jFaXLYo5Zp5wbT
KRg91vCqlV0R/zontGHGZQrEP596x/pQBUsMm/a9uDEFt04umx8K0sC3qvTf
20dOAdaoj5HL0cDfXitEsN+eAr4j1f95LWngqkAejZPxU2CzrfyswklN7MHR
Gaf2eAqECuwinzlr4XR1532V2VPwXcr22idBHbxZyHRH0McpaK6qkm210MHn
1/R+7MqfAo8TKoUS4TrYtFHkRWTJFLQU4r66GR085zq2Zlk3BTeN4g0HsnSx
0q0T+SODU6D4aN3lNX59nOjvFBM/MgVgfzu0GPTxP7v9HnvGp+DD6ycNBV76
uF1MnnwDp6DRQ7b5dKE+Pp23cOrU1ymY9r93qvYABQ8kjRqJLU+Bs9po/KlA
Ct5zpX17x39TUHqH+uTAfQrmNctp1FiZglkN4lVBHwXnjp2RWllPhyc/LMS5
HahYpM5zJYuTDjdCKBvdg6j4xlvHriPcdIjcxRhixFGxw1ndq9Vb6HD7aSBX
dB0Vlx+SczqzlQ5bQ7/PpY1RsbTBduXd2+jQKnQjZ/43Ff/kWh26JUKHnRNj
6uvlCHz065ePFDFyvlucT3sQgRt6Rm4tSNAhaQenRZcDgR+mYB2b3XQY5Ond
ZnmFwEw3P2xaJ0cHiLXe0krW796+qfQ8BTokKLNynXlFYD3t6wlCanQY0Er7
gxoJ3OMupPVEgw7f9S+tc+gjcFDsu15xbTroPT0t+Z5O4M3FhufTdOnAs1t4
1WyZwJlTfcIyFDocTIowUGAGbLLFr/QtQc733ijFciPgKQqrq7IBHYS+Hu3M
EwS8I0ExRWsvHS688XmwXxFwcUXVnmITOggk/ck6qwXYcc5xkmpGh/0vVR5P
EYCXBb7cqLSgg8W7t/KJewHH7wnfbWxFB02XuyqRFoAV/LY1NtjQ4QglIazE
FnDjo0wfc3s6yBXPflMmvelZa8Dd7kiHHZsOek+5AGb52pNle5AOwRxqdYNu
gJ+K+Fr2HqZDZ/6Br7ykN/VNmL8ePEKHo8xCvbdIb/YFJd4dcaODtOhNL0PS
j8HP5DXcPeiQOiPymEL6cnMz/jzlSYc8+Xmvs2Sc9Z/9OW9vOhSVJLQvkf1N
JecEv5ykw5drRp/fkt6kW1wpDvCjw4bAgsuvSW+Gn+c/vBxA7mefdj+N9KbY
y4zVc0F04LJ4/OMo6c3Sdnj29wwdxBb3MXaQ3nRa6UZhIeR56yh9EiW9+WO3
zwTLRTrs1mquciG9edf237WIUDoYUHbPjpgCVgpLkNpwhQ7FWz6fTCG92Zwh
Wx8TTofstaWgl/qAvXrKvbbcoENJhZj6nBrgdSx2G+7fpEO6S8xIoCzgFEXG
W8FbdDjOmHtPEQNMOF+2SI6mw3uRwCmTrYAHrvMtisXRYWmkv/IBB+Bz2enx
L+7QIfGda7TsCoGz2bu6MhLp0CYiL7ZtnMDm6l5nlB7R4fC4W3RQJ4EZrqsC
OY/p4Mcbr7q1msCS+bsPFj2ng/Cmmac7Uwmc4HFprD6DDpxVhw5HOBJYJX5L
uFkWHV4P1eFNhgRuLXm1s+09HdRFK+vGFAm8nq/DsyeXvL85/yoOMRM4pFLq
y2Q5HWKUDR/WPCM9+aU41quSDtpdy8JJN6j4g6CVynw1HWruXqgs8aHiWf8L
Qd8b6FBWt3EjXY2KD+9o+83cRQfPpkd3GMUUzCMUmFfymYzD59OvPKTgSj7+
02f66DAzmcNqdoaCpTkPzcwMk89XenM+VIGCF7/Te9pm6NAvLn3k7B19nLoQ
dTdqjg68Vz661ZDfIzuGwgHDBTrkJx6SPkB+rwpHAmvzv9Phq8rgU6FZPRze
uPbxyRodone4Cudo6WGNmhR/R+ZpcI8e7P7Hroeny43kt6ybhn/Sssr3+nSx
ee6t1Ouc07BhLVYg/pwu5n8mcOfk1mlwQO+2cWbp4PRgJT9duWng8K6M1f+p
hQ/6d8h+V5iG1LRPF2LKtPBGn+CpTOVpeP3ZLpFyTQsHHik+LK45DX3ECXoh
txbWN91rxo6mIUyu5J2ToCb+JOYq89l+Gja/VZIq4lPHP5piJgKuTkOGlzOm
WSriIa7PXivXpmE7lTGcWaOAq8xFFm9GTMOYiv+xKh0FHP8p4+/T29NwPOu6
1dgOeSzXWb+19f40CB9rMzahyWDXfuZ9shnTsD4xc+eA5S5cN33m7XjnNDz+
k2wVlcqPH65zDbbZNQMvclbbEwK3oLVj2zQ7pGfg/fTCqtYLXuRR3f7DUnYG
djy4be/dxYdUwg3PWSjNwMFSWxZ3NQHU8E/mgonODEgdD/QcYgijn3++hxHm
M/DDSCLfQ0QSOXyNui0XPAOuxkOVHHzyqNTK0PzNWbK9/GFv0hN5JJm9wi1z
nnzeUJbOzd0KaMHPP1bq8gxYqAV+c9NVRDfm7e6IR87Aio1pWa2dMsqdFnsg
kDwDel3eRM1HVcQ3kpfKUjMDXQ9b/JmCNVEsd2hoQd0M5MHSjffZmmiDvpGT
b+MMKL+NuFA7r4lYHnZu7Pk0A9IF4e5ix7TQN+vFkDf95PpuRPW6mGij9loZ
S6vFGZg4JbbnzXcdZL68KMv2bQaSNXl4OKV1UYNkwbri5RlQr1ywKHDURRVh
xsU7/8zA7TeXPv4u1EXvdN2lfq5jgGL8t69LgXooOuvx3yfCDFjWu9waX016
dMi9x0aUAYcFeS8Rs/ro+ga5D+ziDIj+my2wezMFXTxR6HlaigHWJ/7R05wp
yEfic4eRCgMKq3+wa9MoiG6ZnPlbjQGGMcJsz1mpyP3ysZvvNBmAZqrkKTtJ
bw5+pQjqM+D769TLG45Skcl9nvQ5Y7J/cqHOTBsV1VR/Dn9uwoDp8iynLgYV
oW/JLvZmDGh89t1kjoVA2pbyfBVWDEixeT34VI1AOaHfvgTZMkDQwUpRdz+B
lDKLGmQcGBBb05i16kogaU6Ty3cPMeB3r9sASySBUrU3Oe9zZUDeL7rHnscE
2uHZo75ylAHhIVsG32QRSKDag3HckwEa7vcjF9oIdPerfI2wNwNiHJg+NY0S
iEf8+9O2kwwY8dHb3rpAILbQq3a6pxlAQybyezYAyv06/7siiAFbxnWv00mP
eng6Pdt7lgHwYz6nmfTo1sFqo9YQBhSzugV/JT1aY6k8a3uRAU/rlW45apD+
q0mKGwgl15MdVbxKenSX7npNtytkvowN2mmkR7uzTg9MhzMgyq8qidMc0HXJ
4TC/GwxITxJc8LMBpPHAROrHTQZUdS6k8jkBmuTKbbp4iwHUN/GJP0mPJlwR
C2CJYcDEprkMYdJ7Rj9u8UfFMaB1c0zdJdKjy97/FW+6+//9pXeLkl5MG3E7
mpjAgA9beGtX////T9tWNtEHDOC6syda5P+/h23QefviEQPKbB12/v/3sbmU
NCu5ZAas+7QxUoCMPT5s+i/7KQOcbreWfiXHb5W++Fg7hQHlYk8buMj5a5Lo
qPwFA66tyBd4kM8P3mRDN3rFAE+Z+ocrpJd3XS+73ZzOALdB9/Aucv3dv2RU
bd4yoGA1IYZBevvaqYSeviwG5N6630eQ+1eb+HfxSDYDGnqoEV2k1yccTkrQ
c8jzLGIvf03m725zT51vHgOOPOLOLCHzuwft8f1eQJ7vkXVXN5H5/5abteVC
MQNs9xsFviDPJ1VWqICpjAGRKWVF58jzY+FbYuapYoDYfSnTCU5AOTcPvU6o
Ide3/EP0/CrpyZU68+31DCj6XuFivUSgqqknD2RaGBBS5Otd30WgwIOc1Pef
GKAV3j55vIZAkm3BE5odDHAulJffl0ug8EIzRcMeBujs6n/TdYdAaooFnY19
DFCQ4cgPCyPQRIpkiNUgA9jFaBoBvgTac/t3lcsYAy6Y/TombkQgZtfXTiGz
DNCTkwlunqWi7E7etbV5Blz1fzKR3klFR/ddfnFjkQHjnWmzn4qoCKvYL9xd
Ju/fWVHlnzeo6Aor6/WsNQZkbc6xa+KnIpUQP1kN5llg7KjQX/tJQWPz/Z+K
WWeByrRtNayfglBPtlADxyw8LGViDkiiIKY3ru8neGdBe6zr8batFFQ33+v3
jH8WDhQlW3d/0UfRKtZKhwVn4Wn8Wfv6On20rdAw67PoLBzu4M2zO6uPlOpl
3jbIzALv7AqPYoseOjz17dU7YhZ+PhiVnLHVRZKyvp4nDWYhx6d0U5KELprx
nZKSMZoFr+9cYYkLOihouTctZf8sfI0tfBscoYNusZalJtjNApPpobrFLG1U
JHHz6QUfcj1psa7UYU10+TiTq/apWVCWj/p24LkmMnpzXnTZfxZEn31zqnHX
RO0qvsmnzswCZ77svfEpDTQD1klHr8wCe9Oa17YpdSTguj1xb+Is7H2Ueper
URUFJr2P4a2aBSXv5wsnveVQwUrSzaqaWTDaGOT0qlMWrbhGXA2snwVK21kW
RX1ZdHOny5nOllkoSfe8r7xBBiVnbnC52zsL4r5OKpefS6Ha8uMKvF9mQdH6
r/j3D+JIkLa9eYvgHPyuYlMVEd6AyuQjObb4zcHa1fLeHnERrNW9rfVuwBz4
BvWcXrAQxdmXXt/ZGjQHn2hKt+0u7MCprXXCgiFzsON778w5L3Ec6c+mKBY+
BzGd8scOFEtim4/h1oqJc2DeFtfft283ntYLTdpfPgc05yahqG/K+CiN+0gz
noPj2lNs6foqeOB28k6L6jnQ3qQn/yZUBbcMlWRaNczBNhVO4jKTKs65/Kfc
sXMOarnyj5owq+FLVedox+lzQIhCBdcCWU/4sKdPz5Dj9z1hSZDVwH58D3y9
5+ZgXxFFKtVDA7t55P/wXZqDRGb7YNN+Dbx3/Q/24D9zkGnK0p1Wqom3mAYq
hPPMA19TbqCjjzZ+XrmJS2/LPARoELEzKdpYRTeL8ZVvHvQJR5eOPm18QGbm
lZvQPBSoNK+9MNLBt9a7Shjsmgcd7pd5O7fqYqHLf//9kp6HqXyBXJO9ujj9
x8ORbNl5cLE+lltE1lv1k12PxZXnQfGiJlwg67F11fsFmPTmYXPWbz2rO3r4
nt70cgFlHuzqsifel+lhyZzrXf4wD/LlXcLWDD2MUiriR43mYe+zQU9bQh+H
hmlyVVjOg0VGa7XWqD7m/tnJOGszD3K7RsXC2Sg42S+gQcl+Hso5G76wyVNw
scvbG08PzoNYIk9hThAF/6cvwXT5+Dy8Wl6vfOMvBd/4WD6i6TUPjxLKtods
J+th+cNlX3zmIW6gufyxHhWrCz+44BIwD/UJH/JPn6XiqjsazvxB88DG7+Mm
eY+KbTg7tVvPzMN+JRM/pvdUHPCL+wfl4jy4/byaZDBJxf/8M7qWQ+dB6E8y
8WKVimOn9+VkXpmHkAbPA8oCpBd7wv1FIubBq7X0b7URgfUPiB/ojpwH6+Nx
Fs0HCdxUW6YQfZvMb+2roD/+pA9yfzH+xs9D1hvt6dYHZD2vkNjw8d48xFB5
hU5nEJgjTf31ycR5OPXs77RuKYGl7/l5DD4m86dz1ktvmMB5G7gN7z2dh5n/
tXDn0VhtbQDAiXtJMqSUi0xvhreMmXnPs5MkSaVEyFxkaTIVURRd1E31CSG3
klyuZMoU2SGSTElFqBSKc96dq0kZ7rlrfX+etc/az9nPfvY667f2XttfUPcI
TWHrU/kqm6/TcOnN5dq2HxT2OfJ+qOYWm89IhYxx1jOTH2LrgvNpSJUR0ytS
BhzjpZTFLaShQmZ2Rcpq1nsvayOHi2jIV94tkmUE+M+trrszSmgwKisqe8h6
Vaflm4ljOQ1XZeoGpDYCvk9dlhWrpMGKG7ox2gHwlgqDLw+qaTDhfL0v5gR4
QLurJ6KWBmYifWm1K9vfhHS0UD0NswdPbOF5AvbJ36H+xwMaXPRPt839tz/q
f7lTtomGTDnno7OsVz9yXhy71kxDgpMvZcb6snB4hSq3lYbQ9sdLSll/Hr7m
2lbWRsPGyMAJf9anaz2yQnkdbPzsvkbX/84Dyw8ptnTRoPlmf1YS+35Nn1LL
th4aSjZpRH5j/Rud5n24v5eGhxov911n4yGnHDm/lzSIdcwcTmC/R1hmpIHp
p6HHsvPvQg/ALV3qQUcHaejKt9KVYMeTdD5gmeAbGpwnFqy4vROwg33B/aRh
GiKbQ35PZPMhLUb7Lx2hoVWpOCeHzdezFm3p7DEaaiQS034C4PT4QzUa4zSM
9cRdumgC2G19iW8JTYNu6eCjvTqAVwpOiVsQGtwKYkKOcQAP3zesaJqkYVxO
vKtVDnBuVLinw2caYi07lF0lAK/5Pl3iPc3Op+LletMvFCZ3LdwmfrLr63pq
/u9jFC4NiRYOm2Pr8UpTvWwfhc2IgHOCEAPKui9efa2m8EyhlcCSXxmIDGdu
2OZTGAfG5WeKMmD2/PyKAbY+bUZFZooWM5AsVtDUGkzhhTc35ZpKMdARBW85
nhR+4n3WoWEJA55FF4812lF4x6DE9d7lDKxrnl/WrkRhr2fLbGZUGLCtzRFQ
ecDDnEvOJJ7DwNTTWy238nh4bOuVdEkNBnZecY8K/YOHD7YpTKiuYaBwso43
vouHjzeoXdhkzIChb4qA41tLTMXsNesxZeDEuUVftRos8QIqb9jdgoErRwr2
b71hiROquUaHEQN1dcmj8V6WOLVYvz/VjgFeReJI5TMLXJwNnPceDMSHq9tN
ZZnjqcgpEW9vBhr3fb42GGKOjZ3zJgZ9GShftpfLtTPH9yQly14EMBD2bvQe
89kMN8cMrWsLZsDodveU+Xoz/Mon2rP0DAOZDlWG/Y0meCXor9dNZKA76DPH
76IJ9pIfUS88y8C095pobw8TPNpjz8+9wIBCnBD33ldj/MlaIfpKBgPhVZ0J
4irG+FeNexkxRWx+G4rNrfYY4k1Ch07MFjNgUVRllK5qiM+9VvWJLGNA5+Vq
mfCxtVg6PUkrtIoB7yzlnx2H1mKFha5V/g0MLHCbxQrHDbDBxPdeh+cMpJVH
PA1k/1d77hhLK84xIFP6pPRxuCaucP0u0SXAhzjf6A1ygxpY4tca8dNCfNj3
VMoGW2lg7M4T/SjKB5/EwjhNcXWsKmY9Xy7Dh12cgtS+NDU86redsdfig95z
/lopbUV88Leg1qidfLhq4CqxAQni5ofaLbrOfHjk9qnRcutsvdIR0jS8mw/1
x/Znqih+r+9qCca2nnxoL4j7U+PgRL1BWETl0kD22SnxWZb3AHzrPJNbeJIP
FUYNncGOoigm/nrsQAEfFskVzhc7KKPFR0XsvG/zQbT9onjie2WUEXBgyegd
PhQ5crumI1RQ2WazHFLOh4XL1UzSclTRqHR304J6PtTsLzDzmOSgzdkColo9
fFBzOGUjHqqFZCs9z4f95IPz3Y2vxOb1UM5fD3f9mOXDyJOYqtVIH+llrFY6
KUCg6ChH4V2MPtoU/e1Owi8EvKXD7CQFDVDU+uTuTEkC/v1MtsGMARruvL+0
QY3AbMqhMZcBQ3ToAWfQRp2AT8f2RB1ZIzRTmpTbpkkgdq0b7/RWI7QsdZdx
rzbb/v6V301shGzd+c4fTAj0K4UqX8syRrc/KGZK2BOwe8r1dzM3RQlX472G
HAjohJV8NDhiivwcmVVF2wl0a3/Q35ZnihRqa4u3OBNYtbw5z0naDCUluzWf
8yGQdzItxGvADO2zbjzrvpfApErYRvPF5shqmrt9TQAB6kzl1S08czTt8+NV
2wECgY/1V8pnmqMA4yuTYhEEeH1fX3C3WCDrCYHK/uMEsstez+UftUBK1wKi
Ck4QsEq7N+R83QI9X2gqYhdHYFHkzj7zfyzQhsHnConJBDp/UT07k2iJlC9R
wy6XCLiYuSl13bZEMza38jQvE5CXOabf2mWJyovDDB5lEBjNXlSosZSHVOOW
2orcIuDOmw6OvMBDc6ZRi1/8RUDY0GWdx20e6mPePb31NxtPKeYfz1YeuuBc
tsemhMBiTe+i6jkeChKXV5MtJ9BxOFtVagWFbB+c+jBSQeC8QrV9rB6F5rmO
IfG1BOo/hb8pZj3d/7ra1KmegPW44fiBUApVpKjMcRoIOPpIjVslUujg3KeE
phYC4glaLgbFFLIrc3FIeUxAxgxf3dxAoVUBWMavnUD4et2ESNZDA93J2UI9
BK6eem+zfIpCVWe++fb0EkCrt3LjBFmvWnhq5bwksAENdwlLAjr8qZkf/IrA
nFpdT7o8oM25OuVWQwSiDcV6QAOQumtqxJK3BAZyBcOn9VmvSc5Rw+8IZKnT
gQ8tAA017hUuHSVg4rDKP4f1YM2x9tbYj2w99Spq/I/1dKq2UfJ2moBe5p6D
KTsAHRnO2qlCCAgdiBfJ2w3IPk34t8lJAgtubGt67AFI0z7oNf5MQC0iNXre
h/Ww4LObF76x82W9WWbDPkBv7loEev0gEOkWG5TJ+rc2MEdXb5ZA+sD+owtY
H6cpLfoyP8+O7//3S/0LzcP6mA==
        "]]},
      Annotation[#, "Charting`Private`Tag$134434#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8288433779882803`*^9, 3.828843447240091*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"ead99646-4d55-41e7-a986-eeda263e87bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"j", "=", "1"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"j", "++"}], ",", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"j_", ",", "y_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"vsin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], "/;", "  ", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"j", ",", "1"}], "]"}], "\[Equal]", "0"}]}]}]}], "]"}], "\n", 
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"j", "=", "1"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"j", "++"}], ",", 
   RowBox[{
    RowBox[{"dv", "[", 
     RowBox[{"j_", ",", "y_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"dvsin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], "/;", "  ", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"j", ",", "1"}], "]"}], "\[Equal]", "0"}]}]}]}], "]"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"v", " ", "[", 
      RowBox[{"1", ",", "y"}], "]"}], ",", 
     RowBox[{"dv", "[", 
      RowBox[{"1", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\n", 
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"grafico", "[", "i", "]"}], "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"v", "[", 
       RowBox[{"i", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"grafico", "[", "1", "]"}], ",", 
   RowBox[{"grafico", "[", "2", "]"}], ",", 
   RowBox[{"grafico", "[", "n", "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[155]:=",ExpressionUUID->"1bddd8d7-ac1d-436b-94cd-1f68177a34ec"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
1w==
       "]]},
     Annotation[#, "Charting`Private`Tag$134483#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt13k0ltv3AHCZ3vPIEEmZkiEi5Haj+e6ngfKSrkgpmYUGU9NFyFQRqZsr
GaIMhSsyhuIYG8xFyhhJhvd9n1xFVHzPb63fH2ed9VnrrL323mf/s5UdPQ+4
8PPx8XHJ+b+b7TLajscO/kHp7Lb8oUzRgrvkvAZkN0CNf+iNOeLfU+KTCmV3
w/xLM8PvxMMKasEX1M3g3NZMn6/EJs1dBcmyllC8OHIFQ6wWpZixoGQNK67P
GYwS/2Q73XZQt4VGne/NA8TjYR11DnEO0Hw6tK+T+JDzzLO/ZZ2BO5rk8oq4
bpdcaW3ScWg0Nzz+jFhPdXv+VyV36PIJGHhEnMRvn7U67SRY6Bq13yVGQyH3
rdQ94EBg6tZo4vIPr5trLb2g9Gz0Sj9irz+d2TZx3rBhq7ifC3Hfuiu7omXP
wjGrtoSNxLEpK/Dqo+cg5Jy0/UpitkT2tsqk81A8O5ksQFzCa9JnlHxBsyko
9OUqij5la1twxcEPXNN+X5tNrNLC6K5K84esySsmEcTXc6XWmKsHgtpiuemd
xIaK6eljrkHQpWhzSZE4sCFhSbXlJQg12BM6rUTRGwy0o63jgiFdXGUqjTh1
2f7LkbJhcPzeen/OSor2b75dZ1UeBjFhgo3lxFbhH/hVj4aDB/8/t64Qi37z
DqpIugw/bOavKxD/1RH7F0cpAuSy9q/boEjRFlF9JU9wBEh0+RhOK1C07m71
b2EOkTCl4dVRQjxcWOqtmHYN3pajY78Tm9/qPmGmfh1e3FKVlZOnaG0T1Sy5
59fhqHLEdKsc6bfAqc8jrjGgsW/cNIzYrmz+cZXlDZBdVOA8KkvRyzRv6B6O
uwnnE/rouysoOhgVakTIxkJ1smY+XkbRWntuXi3wioW2H261B4lfh3uO9TyP
hW3rLy4ekybzI6Cdo3v+H8AO27eIEDf8StfteB0H36NEl26UIvVOxekrRd0B
xTeHyraIU3Txb+fi9n68A8onqxULxSja1stixntLArDuRZZqEudxJcrqRhNg
taXTNUlRij4wenXbCcMkcBYwLm6kKDq+z29X8fxdCDijJT8uSNE7FKzT+w+m
wMQ9r25D4vEjG4VQbgqsWqhpTRGg6JUcX6dcnVR4MVxhY8ZP0Z7uBqv5elOh
pv/AorgFREs55z3M2HQfvi6oXWqdRfRh63t5XybTwTAjsnCCg2imx1LkvlwG
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

       "]]},
     Annotation[#, "Charting`Private`Tag$134483#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-3.1415926535897865`, 3.1415926535897865`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.828843378082023*^9, 3.828843447318199*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"06b9e062-9169-4b6c-87ad-fd93169bf0be"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwd2HlYTN8fB/AWRBKlvilZQkRRkZKlN4pQqRQJFVm+CWkjS2QplJRChTay
tqeFaFdR2vdlZu6daU8zN7RIqt/5/v6a5/U8Z+bec85ne0bJ/uye4yJCQkKi
wkJC/33uOt5dndezV08oV7yiba2L3iR9BWdKXgs35xb1zHtgijVRYeGp8gZY
yDFTbAq2g1F547sIeUv4fxxrSgk+C6tjw9nB8scQYjNhEBTsBbb6bf178u7g
RfzQNAoORLSs6S0/eW9MsVIQMw+KwvWpqct85R8iGLvCPO4lYb/1s6T+Hy8w
lB5aEP9vHqZPXD9kOD8Jw4HNoXm7vkLZXND9+W4aBgqqfuQLKuFRoYuwgUz8
8Fsy0CJeB7k0KY6wcC5oZe1NxwsbkcHTL6vcWID8kCQXo9RWFDhGzLXuK4Qp
e49FkTOFwaWbZiac+YKYtIvHNvzLhchI3Ky5yqW4MsvIef+yNmhPHM6wSCxD
86/QK5IZ7Sjz1qooXlGJzpZzOkLLO7Hg/veRt4Iq9KtJDPvHdOH7MMWp16iB
0KyFpm193XjR+6lUMqAWA4LNp/Zr90Jy3mumvb0Okz9cPXD70Hf4n0w/Eb2k
Aa2sZ2teWPRhaHNcu4NXI4be6kbWbeYj68X3px7ejYi1vCcjYcDHjalqFrd8
G9F+cGH2FkM+JKvi82MeNGK9xPoXr034WGqXGMl53YjRyZmFNgf42HclZb9l
VSOWXVNd7ObGR3rm+zIoNSG8r39s8ws+3FcXpv3zuQkoyCmxFRLghNbC6KCv
TRjjzt51SFSA/dqedyUqmuB3ziHSaooAG9Zr2Ys0NyFNbU2BoYQAIltfzBQI
mvBYYXf/jDkCBJp7OxYpNKNbZ857TXUBYp0NFrq7NuO1rO7l+oMCUImFd6uV
WqAnklV4I1GAKv6kvtXLWiAXOdWsO1mAPLVtxg/VWnAnaud7o1QBomOLJKx0
WnDTfnyOxAcB7F8V32MZt+CnZvASt3wBOiO+BnZ5tMCT26LTUisA37/swVh5
Cyai7q2ePiwA55vEgG1tC3btju9THRGgQtzEMq+pBadG0q7sGhUg8U65zM22
FiSK8xdfnxDA2bvi0dSRFij1sj3rxBgMXK4Knb2kFVldZzfPnsNg1LHu6fJL
rVB9mzi7X5uBpbZN0CqvVix/kxcUt45BvHDnrTXerdj3IXzF8fUMbMOGXTYF
tMJUYBhfs4lBfpHCDvPnrbAwv9kXYsDg9sIjAxdKWxH/MXVnoTmD2Q18468K
LLx30ylOcWRw+tn5reULWKi82XBK4zSDwtMTOjVLWDg+Nn95whkG50WlFrNW
sXCuwbQ32plBs4bWCLOVhbd6Kd4u5xlE3b30Uu4UCyG69ZPfX2egukVs/MQn
Fk6MfXteE8IgOTZuWVMeC9qqgzPUwxhoyZiZ7yxmYboao+P7mMHGrrAXqtUs
WAn9+qIdzmD3vRVG/Z0stJy8X3/+GQPXZpOwi9JshOrYBPvFMRja+jO/V44N
xtGaKohncDk+5PvBeWyI30rs+Z3AwNuL0tNTYaNPcbq2bTKDEGWXDhE9NtQu
qMXNSGeQ6fJwtf9JNti1/gMT2Qz0WtcdGnNiI6pbeoZMLoMCA7aPkzsbRQYx
XOU8BqVyS5vNvNjIrnmYs7WAASv7vZfsIzYkzZ5vO1LMQEi8tSwyjw3OtGUX
NCsYGD5X+jdFjoNjq6wH57HIfsMklxYrEqutnWglXhgw2t6ixMGqyJczwtgM
/lyst5+kxsEBTdl14hSDBHNfW6vNHCQYMfkNXHJfwj/2jjmQ9eG/o2Z1kecN
s2WknTjgy3bwE4n7+kprl7px0BCTCaNuBsVNL8zNrnAwU3tAcKWHwcXk/SYx
QRx0p7669O07A8ouz2DnRw78a5dArJ9B2d4EUdtcDoYrdnzxIf5g9KTAtZCD
TQpf94j8YBCs4745vIKDIwWZboPE22aqbGR4HDivCWN9/sVg9WTZUdFuDh7H
Fl5dPcBg/qjwxzl8Drz7pJZEEf/ubNXZOszBha5fHq6DDOJyAtc8mk7hzfaF
BsLDDMLSPH++nUVh7ufwcTti79iTKTmyFNTPimVlEduG6Kt3L6BgaH8fzr8Z
SDkNr9igRUF/qMEhd4TB+NH2HlNdCjKWK9ZL/mHQa1395pgehUWaWyQPEhdu
i1sasIPCU8dXOQJij3l2i7iHKLyuq8L4KAN7M419rCMUrpadZTb8JfF3U9iv
8QSFZRlX0z2Il/bE/CgndTxOg+PdQyyteE655ByF+7+WBSwYYzC2e7t14SUK
hyTqEiyI69K68z56U8jq2K6RQZzXlTmQ7kvhboHYg3biOIW7KikBFNJWLpCQ
Gmdw49rK+6/DKDxYbrjlGLFT6vjn5xEUPuTtGfMjtu6sHI54TuGfX7GVScQa
xq52D+MpnLmw7v0vYkUv/QeBKRRmZp0sk55gIPZO5otfBgU9T2pYnfhne8cf
n08UbvwJ1TUi5si9X3U9j+znUVDQMeLSXXfsPYsoVJeUTlwmTr9iHeJRSsFS
Y6t3EHF08opS10oKrV5D818S+7eNjp2po7Dfv7Myg/jCP+WaJ5spiBhKhRYT
H90ZefwYh5xHzjn3OuLdnmcf27VRWDV/tgNNvD5pc/mBbgp+Sd0uvcRLeVLC
+/gUvjUNBv0klpJt0zL/Sc5j3vqvv4n/GqY5GA9TqJyfLjNG3H3JJ9zwL4XU
Jyc8Joh796k6PBOi8fH07v7/fLh/tsgCURrx9057jRM3+P59Gj6ZRsjs/CWj
xEaLO9YqTKVRoWlMDxLnZZVXhorT+LVO8p2AWHtfxknZGTSYELEnHcTxTKTo
g5k0fjSsC2shXuR7O2KWNA2XZ8/jy4nDFjnrBMjQWJO1rTGHWDJrf/V0ORoQ
Xzwnkdh775ZTvvI0uu9uOPuUeESwfLKYIo0S2/usW8ROd6SjvOfTKMpedNiZ
uF1pdJ2IEo0pwgMjVsRVlmWnx5RpnF1m7axEvF2QNuWyCo29Jv3GosRZtyOi
f6+gMcYqQxuJh9cfnep+qdNYLmzrEPFffFhaObmspvG24J9ID+JgPqYyWjTa
DOf1mhJfXSi1sVeXRrDuvKI/JD4HMkfq/91IY1P2XMtyYkcL3tkOPRqSa1xH
Ioj33kqNofVpPD2++rYusVrf3umNJjR+H96XZE3y44Olca6fGY0AZ+dUOWL9
7K1uehbkPIeOeNSSfDsQoN76cj8N9SKOngGxr8a0OPejND5VV5aJk/yUeTxh
q3KCRmeHVlUGye9o4SFplgMNmZ3hDw4Tf6jhXdJ3opHh6HcggdSDTvesXdIX
aWz+G9qjSuqFK/vdeNFlGoMmBfyiIZKf296+u3iVxrfuxe9siGXkQhS4N2kU
X4i9fIvUI/3Ms71JAeT3rcKls0k9ix5b5GfygsbNiD1WOQzZ3wl5PeHXNJQ3
fbTXIn5fMfNn2lsaPZe5q94IGFRE/bVWTCLrz4VM8+WT521pWP49k8ao74cS
dVJvD9zyLblTSUPMx+KqVCd5X4HXlY01NP64Jzw52sHAxeq8Zn8dDZU6jwup
7QzuqBx9bNVC4uNp4AXjNgYZpRtPLu0g97VDw/8oTfrBzP6phX9oJF/kSSxt
YVCT7Xd75xiNr+71B+2byf2eVp5SOUG+X6nyPryJ1KvSA6Itk7iYoq30YHoj
sU/RGCPJRY9DKre6lsGs0Sc/5y7movhvSLtQOQOJrm0sNyMulgmd4XaT/lj2
iD4wYsLF0eo1DZ1ZJP8NLjdfNePiT7V8M+8Tg+nPkxt893KRoHtzWn0mA3Gb
udVRdlxcWR/0z3PSb6fW9hd9c+Pid/GKfg7p15NynyYtDudC/668Yjvp/y0b
DXZQkVyobVER9yXzQdLHPvrJMy6czk+kqIaS88vYJC39mgub+afVHR8ySEmg
3IXecZFeMrX9WwDpD+GL17O/cDFpoZrRopskPi7GFYb84kJ+0YOquWS+CRi2
sNkzRPb/+6HqBQdSn879HZwxwoWuaL1+zQmSry4my3zGuaAP+cZ7HWVw3IHx
dZvGw8mUBfa5h8h5Wa0xNVvAQ5iE88Wa3QxOaX1qnmbEw+rSgI07NEn9qKqP
/2DCw+CnV57H1RnInun3+teMB7UiXvC1lQxyXyovLdrLg3G9ydbk5eT+5O67
XjvMg+W+18mDSgw+jRybPnyOB805z3rmSJPzzJXc1B7Ng+zqvcX5/QLE7bSP
zhni4bbd5nMvXwugpaakhxEeyqY9VDn6UoAcSbo1d5SHsx3HRBbEkHm31kYu
X6gNrYfEVwRFCjBgYx3wWbwNf3JhYvdIAD1XM8+v89tQFHJPJOYGWf9Eb3/N
9jaksPeplJD5efC7wqzOkDasYAo/hk0VIN3CUPShQTs0ilYW2Wzgw2uHT1Ra
Zzvy1c1OVNv0QYm9qynGpwND4xlzj578jvU63g/lV3fCmjm/JW1rLw7NrxwR
ru1EdvoVd13ZHgyW3uM5X+9Cp5BwTN27LoRNsnXfs6Qb5wxPbbQz7cRsTvpz
kcJu7Nxu2qPHbsfkK9ctdV16sMRuIU9tbRuE3tom8aR74fH0d/eXR1y4Pkm6
J13QixLTzgzTaxSyVe9MlXL6jq61l8rzC1ohtctV7YZkH76cbvMMWt4E1sqq
2otZfRCZ21F6RKUOyZFY0m7LR0iWTZj7virYJGlLzRvnw6huQc/wzBJc83l2
nRUrwLUUN8U37/KQ0D3vqaQxqcvDXX84r1JwJ8LnMIfEheLd83ftDqfg2B6+
ciKZs/2k5Eo48ilQzMpKNrEifT5H/EizfzL8Ag8W+9uTOez3Pi2vjkQ4aD/+
IX6RwYnSVaVvPWOxyFtmh9grMhcrrBQKevsM4+s8ZzS+YWClN6C7R/EZmvlt
Na/IHBz67q+ydGA07lul2mxPYbB/XpaXYk8kJlbscfMhedqdfdXsx9UnYFUH
RoqSPN9maHYGsUH4cGv4aG09eV9/883PA+/j4Qa75TGkToxcC4sW6w2A0ctV
aVs5DHhbov/c8vLDxwvlJdfJHPm+R7zcKfY6QlauDTTvYxDZI/NjZ+9VuPDC
LZVIXdRlSfNTvS5Bxfg0lUfmvnqLcLUbsS6YJFz34j6py+GnuesqvBxBp29w
PEzqvLBe3OyQ2CPIcoxR1yB9ZMbfHNXMWHOELpg++F8fX6V57///D/wPMSOZ
1w==
        "]]},
      Annotation[#, "Charting`Private`Tag$134531#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
/UUWBbS3Dgj9Ifynzia3ZoYCqYbVl/4jnJn619OAmwqTN+OK/xGmYd3Q9GVU
iOK3l54jvGFfeIowPxXS+qT8GYTNb/WW+whSYcG0gUUl/BQp9PWKUWFa/+b5
DMJlPJ6zWlJUyNi1s+0h4VkDJJQsS4X+6QlTM8LKoXw7V28lLNDTKkLYoc1C
z30HFd66TVtRyP3jJBIvdu6mwteXlqz7hNusWbcPqlHhcKCQvyLhVe/UohMP
UqGnQmtDLYmvFsM/c5kWFcpOLym9QPimUlOdsx4V4ltcnNgkP5keEsNUYyqE
Hk2WdCdMK7D/t+8EFeQMmpvZJL8bFjMkXp+igtGcQJgNYQvtv3u5zlPBeDrQ
oo7oIzhQ9/glWyp8t3fctJ3wnFCvv/I1Knh+F2ptniX6Pa0QF+lO7h9wMH8d
YYc4j/w5bypo3nn21pzosW0rH6vcnwq+5wKjvkyR9zmoZnH6JRV2JroM8/4h
7+Pn7/o9jsR3xlaQh/hjQ3Xjk01vqWCTfVtvjvgp2My+mPWZClhFv7WG+O2K
w/OtfuVUaDJa775AJ/pP6zkyUkMFmRV4JptG/De21cqoiQpKhx4G2RA/69wu
DhPtosIS8+udb4jfN4aNzqVwqGASabk+rxdD8UXflOwJKjCvuStr9hD97RU+
822WCnERd26X/ST1rUO9oGFJM2Q9bynKIPVHXDroBhZrhrMXlfGOZgz5HOkt
s+ubYa3l2UYfCukfJVntXLLNsDU6fKSoEUOUXZeK0PZmYD/pq99Zh0EoVWFC
BZph9LqaS3YZhqzbRUmHdJrBK1Vodwmph6bHTE/oGjRDY3zEnqpiDKFj3lmn
TjbDz8kbE4WknvKrVbveutwMvOPFt/SyMfBWXGKh0GbIn78kyk7A8C5q7nVN
ZDNQ76Vz+ZL6rnM5xKj5VTM08B3Yu/I1Bn++3NSBt81Q6nDXbRnpD4umPI68
Bc1QN8Z//t1TotfepGHDX80QP132zMULw+hMf1/7rhaoDOTXOKKNIe9yaJmh
agvkrfeSjyT97X7n4Q9IowXij+4S79Mg/suPu5ai20LmyUHJU6Q/at04t3DH
qgV6HmZ96d2MIWayQ2JzYAukPJlROkz6rf54o7l7fwvcix7MNi/igPDFu/tp
Qy1wKDOAEZTPgT7qDikrZguUnnpoUpDNAc/Mp4NHp1pgGZ9cxmwyBxJcDdwl
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
        "]]},
      Annotation[#, "Charting`Private`Tag$134578#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
QQwmLlX+OEu5fOBsfrVbZEbFv1egdNU=
        "]]},
      Annotation[#, "Charting`Private`Tag$134954#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.828843378082023*^9, 3.8288434475837665`*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"e8adb59a-fe44-4531-a1d0-88cd820345e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"grafico", "[", "i", "]"}], "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"dv", "[", 
       RowBox[{"i", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"grafico", "[", "1", "]"}], ",", 
   RowBox[{"grafico", "[", "2", "]"}], ",", 
   RowBox[{"grafico", "[", "n", "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[160]:=",ExpressionUUID->"8f7e0a93-6cce-47eb-b23f-11deaee54440"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt13k0ltv3AHCZ3vPIEEmZkiEi5Haj+e6ngfKSrkgpmYUGU9NFyFQRqZsr
GaIMhSsyhuIYG8xFyhhJhvd9n1xFVHzPb63fH2ed9VnrrL323mf/s5UdPQ+4
8PPx8XHJ+b+b7TLajscO/kHp7Lb8oUzRgrvkvAZkN0CNf+iNOeLfU+KTCmV3
w/xLM8PvxMMKasEX1M3g3NZMn6/EJs1dBcmyllC8OHIFQ6wWpZixoGQNK67P
GYwS/2Q73XZQt4VGne/NA8TjYR11DnEO0Hw6tK+T+JDzzLO/ZZ2BO5rk8oq4
bpdcaW3ScWg0Nzz+jFhPdXv+VyV36PIJGHhEnMRvn7U67SRY6Bq13yVGQyH3
rdQ94EBg6tZo4vIPr5trLb2g9Gz0Sj9irz+d2TZx3rBhq7ifC3Hfuiu7omXP
wjGrtoSNxLEpK/Dqo+cg5Jy0/UpitkT2tsqk81A8O5ksQFzCa9JnlHxBsyko
9OUqij5la1twxcEPXNN+X5tNrNLC6K5K84esySsmEcTXc6XWmKsHgtpiuemd
xIaK6eljrkHQpWhzSZE4sCFhSbXlJQg12BM6rUTRGwy0o63jgiFdXGUqjTh1
2f7LkbJhcPzeen/OSor2b75dZ1UeBjFhgo3lxFbhH/hVj4aDB/8/t64Qi37z
DqpIugw/bOavKxD/1RH7F0cpAuSy9q/boEjRFlF9JU9wBEh0+RhOK1C07m71
b2EOkTCl4dVRQjxcWOqtmHYN3pajY78Tm9/qPmGmfh1e3FKVlZOnaG0T1Sy5
59fhqHLEdKsc6bfAqc8jrjGgsW/cNIzYrmz+cZXlDZBdVOA8KkvRyzRv6B6O
uwnnE/rouysoOhgVakTIxkJ1smY+XkbRWntuXi3wioW2H261B4lfh3uO9TyP
hW3rLy4ekybzI6Cdo3v+H8AO27eIEDf8StfteB0H36NEl26UIvVOxekrRd0B
xTeHyraIU3Txb+fi9n68A8onqxULxSja1stixntLArDuRZZqEudxJcrqRhNg
taXTNUlRij4wenXbCcMkcBYwLm6kKDq+z29X8fxdCDijJT8uSNE7FKzT+w+m
wMQ9r25D4vEjG4VQbgqsWqhpTRGg6JUcX6dcnVR4MVxhY8ZP0Z7uBqv5elOh
pv/AorgFREs55z3M2HQfvi6oXWqdRfRh63t5XybTwTAjsnCCg2imx1LkvlwG
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

        "]]},
      Annotation[#, "Charting`Private`Tag$135002#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
hRKbW9ME8lp754doINUet3XmsfMEMh3jq+g9z4Pitvpzv/lIpJLuFZx7kQcG
62PE9wqQ6NOi9Qstw3hQ1frLQXQBicwGPilGX+fBGn1Vd0lREqneMmbvucWD
jcYjCZvFSDRjnpWtncCDMXescUScRGVFAQbvUnhQDkb7UiRIpB4mZ7Ewiwf7
FJaq58mQaG598OKuxzywyFPcmCpLoh7O0IesPGo87O8UhMuR6IZT6QHzYh6c
yOHP2iJPIm/xJUvly3hgv9BDR45OIou3oSNfynmQzzRexKQ8r7P7VPgran6F
nDsPkCTqZT5f71DJA6MszSppBRKVx6vNaVTxYNDngsgbyj5z36Nq6nkwXDOX
Pr+ERJale3bGN1D92VU3Ea9IIk0vLHukmQeqf+3T1JVI1N9+/Z7gRx7Y2SnN
aCmT6FnElNvHTh54Zy8sSvvf+fOmg8sfdfOg1lPhlfj/zqu/13H9+6j7r9ao
nqZslalXtpXBg2p1w/6PlLX2JgbKDPIg7sQcT1eVRAKSc8bsIR5M1ZzdF0yZ
Ue0uVDLMg5SsSOXa/52Hn2t+f/kbD2K/0DcIq5EoceV/123HeeCSK5cHlP3Y
qfZqPB4sP+V92o/yjiQhhR8/eHBLVirhLmXtHd5MPMmDd2UT4m/+93+AvyPj
xhQPbnQu6u+mzHq66dihvzwwt7QWoL7v0atjj1bpz/Kgz6giZIpykorYr/l5
Hvz//4X/AzZfjUU=
        "]]},
      Annotation[#, "Charting`Private`Tag$135049#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
H6cpLfoyP8+O7//3S/0LzcP6mA==
        "]]},
      Annotation[#, "Charting`Private`Tag$135425#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8288433786947527`*^9, 3.8288434478806047`*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"e95b509e-c661-40fd-8811-7fe456bec7f1"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Do", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"i", ",", "j"}], "]"}], " ", "=", " ", 
    RowBox[{"N", "[", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], " ", 
      RowBox[{
       RowBox[{"k", "[", "x", "]"}], "*", 
       RowBox[{"dv", "[", 
        RowBox[{"j", ",", "x"}], "]"}], "  ", 
       RowBox[{"dv", "[", 
        RowBox[{"i", ",", "x"}], "]"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], " ", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "n"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "n"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"AA", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"i", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Det", "[", "AA", "]"}], ";"}], "\n", 
 RowBox[{"Do", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"b", "[", "j", "]"}], " ", "=", 
    RowBox[{"N", "[", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{"fun", "[", "x", "]"}], " ", 
       RowBox[{"v", "[", 
        RowBox[{"j", ",", "x"}], "]"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "n"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"ff", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"b", ",", "n"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "%", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8282421605308156`*^9, 3.828242232540513*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"a8cb9dee-415c-4841-982f-2b77c7159ad5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{"N", "[", 
    RowBox[{"LinearSolve", "[", 
     RowBox[{"AA", ",", " ", "ff"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Solution", " ", "[", "y_", "]"}], " ", ":=", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "n"], 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"[", "k", "]"}], "]"}], " ", 
     RowBox[{"v", "[", 
      RowBox[{"k", ",", "y"}], "]"}]}]}]}], ";"}]}], "Input",
 CellLabel->
  "In[169]:=",ExpressionUUID->"80b5c93d-4039-4ce9-8338-33dbce593fd1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"plot", " ", "the", " ", "solution", " ", "using", " ", "the", " ", 
    StyleBox["Galerkin",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], 
    RowBox[{
     StyleBox["method",
      FontWeight->"Bold"], ":"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"pGAL", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Solution", "[", "y", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", " ", 
      "\"\<Approximated solution using Galerkin\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Galerkin solution\>\"", "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8282422387105293`*^9, 3.828242238840588*^9}, {
  3.828242443030612*^9, 3.8282424645907884`*^9}, {3.8282427372414694`*^9, 
  3.8282427386205544`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"0950c026-1137-431e-8227-14eeadd87de8"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$170897#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Approximated solution using Galerkin\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {0., 0.43746706381631095`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Galerkin solution\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.828843406325426*^9, 3.8288434765919094`*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"41228657-2661-4d6b-9431-a6c650bc81cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tgal1", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\n", 
 RowBox[{"tgal", "=", 
  RowBox[{"tgal1", "-", "tgal0"}]}]}], "Input",
 CellChangeTimes->{3.828604736552182*^9},
 CellLabel->
  "In[172]:=",ExpressionUUID->"92f7bb5c-e8e1-48cd-a4ba-3a7ccb7572ee"],

Cell[BoxData["28.49999999999997`"], "Output",
 CellChangeTimes->{3.8288434064092283`*^9, 3.828843476661126*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"65d14ca9-fad4-4887-936e-d88c4a38235b"]
}, Open  ]],

Cell[TextData[StyleBox["We calculate the exact solution and we compare both \
solutions",
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.8282427727302074`*^9, 
  3.8282428020201635`*^9}},ExpressionUUID->"83906b34-2ee5-4f03-95aa-\
9881a480d96c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          RowBox[{"u1", "''"}], "[", "x", "]"}]}], "\[Equal]", 
        RowBox[{"fun", "[", "x", "]"}]}], ",", 
       RowBox[{
        RowBox[{"u1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"u1", "[", "1", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"u1", "[", "x", "]"}], ",", "x"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Uexact", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", "x"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "x"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"u1", "[", "x", "]"}], "/.", "sol"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Exact solution\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p0", ",", "pGAL"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Uexact", "[", "y", "]"}], "-", 
        RowBox[{"Solution", "[", "y", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", "1", ",", 
         RowBox[{"1", "/", "n"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"PointSize", "[", "Large", "]"}]}], ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", " ", 
      "\"\<Discrete error of the approximated solution\>\""}]}], "]"}],
   FontColor->GrayLevel[0]], 
  StyleBox[" ",
   FontColor->GrayLevel[0]], 
  StyleBox[
   RowBox[{"(*", "Error", "*)"}],
   FontColor->GrayLevel[0]], "\n", 
  RowBox[{"(*", 
   RowBox[{"max", " ", "value", " ", "discrete", " ", "error"}], 
   "*)"}]}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{"Max", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"Uexact", "[", "y", "]"}], "-", 
        RowBox[{"Solution", "[", "y", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1", ",", 
        RowBox[{"1", "/", "n"}]}], "}"}]}], "]"}], "]"}],
   FontColor->GrayLevel[0]], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"approximated", " ", "solution", " ", "using", " ", "the", " ", 
    StyleBox["FD",
     FontWeight->"Bold"], 
    StyleBox[" ",
     FontWeight->"Bold"], 
    RowBox[{
     StyleBox["method",
      FontWeight->"Bold"], ":"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tfd0", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.8282418178848815`*^9, {3.828242487800746*^9, 3.828242503465209*^9}, {
   3.8282425725004916`*^9, 3.8282426070455785`*^9}, {3.828242760230502*^9, 
   3.8282427678496723`*^9}, 3.8287057769429493`*^9},
 CellLabel->
  "In[174]:=",ExpressionUUID->"60dd5f18-d353-4a61-9411-d0dff79e901e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwt1nlYTdsbB/ColCKVsUFJcjVQSG4XfVE0U0QqJYkioUkikasilZCkQSjS
QFGmRiUyNM+dXTnn7H1O0XBCo6Tfus/z++t9Ps/ea+31ruFdW8Xl+I6DU4WE
hCSnCAn9F80Odte9+brLwOT/UcRQ/sQXOV0sC1zv/F9cnRyXmCtnBLdaZcf/
onlVy7MkORuU/9ORl0iiretI0XU5V4y9M3gXRWKHdphhpJwvHOvF7c+SeHfu
9tBwuYugRqdmmpEYLJ7712W5GAyE/ZxxaUEM9tjdyx74ngpdN9ftNn2pkJwM
3muslI2A7N1XBqWyoWbd3/32Sh6KOG5qTEAe/Kv1ETf4GnUrH1pK1r7G/DyZ
zilTSuA20KnCKS3GC65hZc36MjxI8Q/LFC9D2ZEkBbveclw5/k33bGI5hpZu
mPXYswLSLzpny/x+j6ljmdIKap/wSCU0s//iR+hNOr/Y+aQSp9XO9Am3fkbl
Rd3q9xo1iHVX1VCcUw3l6J6x9P5aHIuJe2SnX4uekS+dTTr10OfPkxq3qEPq
t4JPUlENWBymrsE6Vg+phWkChmnEOt/9ueeCGxBx+Pmhu0ua0WaWJtzr34jh
jZmM+7kWiPw7uCbZvwm+q8rz5r1txU3VGQaB9s348qT8Sp0KC8cDOgr2bG7B
+JHGBPXTFDhqvOJn81qhuUnsz6GCdog/DYiQrm6F8X0Vt6fzO8E89Nh+/d82
+C/ct5iz9wsOuunLJSqwoNW7S7LFko21/bm3tZJZeGVjURJuxYaonEci7rFg
WLTZx2AnG43CiobWKSzYR2lTD/aw0WHdd/pEGguXdaZn+h5go76s7fKdbBb4
voVmsgFsXI0TrntVwsLdicXhlqlsFF8KcaE7WZg9a0C8/Bcbexpnmo8voFBf
FB5mOsHGcLFHV6w8hetH1abVTLJxpeACVipSkP1kL8wS4eC6fJyKizJxyLsJ
gRQHTn0XUvPUKEiPx/9QUOXAymOzk+IqCjO6trT7mHPwj9eMQ4OmFCpvsu3H
LDm4taeEOmROIcLoTFuQFQdtioNTWy0oSN7Pab68i4NtvXGuL7ZTkHBUqEve
x4FhfLnHgV0UxBsG3n324WBh7qJNQc4UREoSslUTOUifo1ia50eBtd7I5Msd
Dg7LR+su8KeQnd/Ljr/HgV1Uo+zpUxTsX2yQlU3jYNoHFSn9MxSePv7iK/SM
g99PpAZTzlNwSlT9p6OCgzC9SaXlVyi8Csgsj/3JgXRGy/j0ZApRIzsddwxz
ELFad1T/LoUDfr+HZo5x0K7WbO1+j4KUl+VfIX84kJ2mq/AmhcJBd8Fln+lc
SDK2vxwekfmyXb3dSpkLmaki4UZPKXjoFrRNN+eigtb52lRK4U1tU9YrSy58
CkyWVZZRmOs5cM7Niot0p1Pv37ylUPJAbem7XVzYePorPXhHYfb8aO/zzlw8
u+Gw0v4jhYIxV8kRPy6uybwO8asl6xF7rvPBKS6Smi9etK4j41kV/9TmDBdx
P0spzXoKszxqbJ+d5yJVnblGNZB82vVTPa9wwTKXlvmrhaxHidQG5i4XfhyJ
Cc8OCs4O6tI3UriQLUmy0u6k8HzEkN70kHwv/etQP/E+nYDLyZlcqCn9Xn2Y
TSH3Ht1k/4KLO/Rqb1OagsPFV8fqPnNxJXb41qtuCjmLGjadr+ZCMHdLo9NX
CqJFfXO067iosb3gIPyNrN/Q4oKIZi6y5s0xNe6hIOwWKWbCIc91kmLy+yhk
mrrcLR7mwvv29shtPyjoaqkYYIyL8LieiRriYik2VTJO2r+x693+k0Jtg+P8
UiEaHuu3bjIfpDDoaBf1VoLG4czoUu1hCmc3LtAymklj/0LBvAfE01RbPpbP
orEqx7prwQgFuW4b0fdzaCzWKhgZJzbwtgr8oETjk4JRVfYYhQqbWfKmKjT2
xnQPLPhFwWpt9cuPqjQmMkoizhO7/Db/+WkZjZauBE3zcQphocZHqlbRqJ+m
9rvqNxlfvMGe+q00wuVm3b48ScHu7MTQDlMaQa/s57KIufsKbzSY0yjz0hRR
F2rH4JJ/ahqtaJzj968tI5bLXrO1xZ6GScZEH2dKO+5fG6RtHWnkbvceVJva
Di3f3ODWfTT0xKKPuBMb6K8sanOl8SfBNrWb2OWtlm77MRrraiWMmoXb0fOg
p26vF43R9oKimSLt8L2UcbzDh3zviF6qIXGY5bLMzlM0ylfOf5FBLK3TZbLv
DI1v7eVsijhe9iH/y1kaD3s+nZQUbUdWi+pizgUaf58+Rh8kXpPPLdkfQiNl
bMfraOLixHuO3DAa1dTCsdfEtfuVb9MRNPI1BvPEprXDzqhTz/UqDVG1rTpa
xNylSY3MNRrySZJzthMP9chL82NpxF48OzuaOCapqyLxNulPNvZhDvHq7Xnn
dibSWKnzYE8Ncb1Q8FqJZBpnFuuq9xJ7PbMUvLlHI16hcr6YGMnHVT7NP5VG
uv6w6iLi7LldTivSaAyErrNcS7ytInceL51G59iSGxbEfafOVydk0RD3Wze0
jzhCwzJ0RzaNpRViPl7Emu1yBtOf0ZDJlJ0RTPwpkj9UkkfjTQVTEkV8GLmP
T76ksTlnWlQ8sfj3cweX59MopYVOphKn3bdYyBSS8VY5+GcRb7WRa4ovoVFU
nnztGTFPlB9hXUajZ8au8hfEF18+MxJ/R8OzSXjWa2LVw+d+F1eQ9/V1vf5z
mbxFnt8nGrabjn17Sby/csFRrSoahV/0T+cRCwXxVOkaGt6DSouyiZO1n1G3
68l+MHtApREbcIJuWDWR+Y23ybpD3HHd3FyslcbRsLxrN4gDjRYIF7No4K7F
lVBihWEm37eDxiPn1Dh/4vy0p96abBrj2oavDxHb2QVpcLk0/Pbn9O4kHpUw
58bxaBjp+qwC8a3C+fHbu2mcbZANX0bcpPx0elEfjb5iEc8hsn6+dWdLfQbI
fP52HWklnv2vWYDGTxpq34qu5RNb8+nuW6M0trX5DvoTD9zKubttnPSnyS7Y
SXzV9Owe0T80ZlU7XVtOXJU174O3MAOdimxXiuzHo070OfVpDO5WRu3PJpaU
zlnLFmegdz7+SDCxqY9pmqUUg9leVsnKxO/0A0OXyTGQCu0IMSLnwbXHxOCL
AoOs2I/N4sTCSXOHbyox+GEko/OZnLdNQtkHhZcwCDnxccyUuOg9x6hzBYNG
M+92bXI+95568jtmJYP+hXUuDDnf4+pn8sx1GQQeft4XS6wfOWfJa30Gww0q
s4ZJPXi+01g4xojBEteZPomkflwyfxWiaMxgjo+MrjHxXkN18QempL3j5bUD
fyhMXS0588U2Bk1im0U2EG+TrZnXuofBmHJteimpTyoSG287OzDoYI76OBEP
Tnmq8NWRgdzJ3YFjpJ4lfL++6JcLA1fLM2YaxN21uzUUPRnEXBupPEnqY8GH
iqzU4wy6uvkhosRRb/7WXu5N2s8dPX19lNTvHHldA38GYVu/zk8j9TX4aucG
52AGcfN4MgVDFOS3HbJOvcnASnYyK/I7hb4tLQ1acQxWlRiOTg6Q+3ODye7n
8QweXzIJOEF8aLmGw/tkBnzWiLyFgNxHM/pdu9MZyHZn1/X1UrD47HdKq5jB
y0HXZ6wuCudMQpLz+Ay2tdw+attO/oec3PfqfGXw7kF4wg2KwhI/c7msHgZJ
Qxmi1SwKn+7J3EgZYHDyo+DyhjYKc8aTQq//YmBYV2ws1kzh0eMXniekeMBU
/qYtNaS+y3av09LjYVcz75T7GwqL1T+Ppv3NQ4btE0uPEgp+ePJcdR0PpS5r
rY8Wk3yP+morbOTBwXSM615IwfWdkKqEGQ85J9YvtXhFYdRfTqLbkYdR46sN
+dlkfTrMWlNCeOjzeiuil0QhvGxd9q5LPATeemZCJ1D4kaYVKnaFhykSX+yi
4imUeUvpekTzcPgFw+m4RfoXr7+6KoGH4kdWp12uk/GvtjMuzeFhA1NrNyWM
wopwtxedFA8rw/H39WMUYo/viYzu5OH5K86S0aMUJm1MXTdzeCjxQ7WDB8lX
WZPcADyUlc3fpehOwet5v6fndx5aJpOWXNhPIY/tp/Z7Gh8+CZW72Dsp/LP2
YozcKj76qbgdtB6FZhc5vSRdPhI9NE0WraHgE/WkZdFaPgSlrXoOqylk8Vrl
l63nI2H3x4lP2hSUYpbf09vKR2YoT+36MrKfvzc/3mnPx699/WeL5Sh8zlCv
iLxA+q8Z3BjxiwX35mJ3mRA+VhTbXggbZUFkqo3EzTA+rBZxn5wfZsHALsgy
MYKPsqMZFUd/sJAj1tCQEcvHlvSnPZrfWIhxDWRXZPBRKpUWv6WNhb1KNWNT
GvhoWCMbQD9nQUrO+3lBEx/rVINmHclloXT2XC+/Vj6KYscW9+ewsHS6Q3d3
Bx87KpuK+zNZEPzkN9d08zHnwML8OvK/f+Hjn9ykP3yM3DhioBTJwiPfFcf0
NbpwQ2mRX9V+FoY+RXJPBHfhRK20qKswC+2STe6//+1CUJGj2WkhFsosFAVh
oV1wmHHNIGqiDdHVGeN3rnRhyf38ldkjbdCor5hTdbMLxnsurmnqaYNT2xRj
9YwufH85fevThja87/LL5NR3wbCvWPnhvTbEiTj57ljSDdfAz0puem2Y3fn8
/tTybuwT2e9xzbgVomeDbfS9vqJ4Y4I1Nb8FQulO2VzZb6SeLzxgWtsE7/js
SNmybxCo9ux69E8jijQvicsc60HMjqDNASfrIWPmrXVBqhd+q1XCxpNq0b68
tiGgsBcxwhpslYpK5NzBEsapD6Kn7PSiND/AMVtPZuGfPqwf/HEoSe8tzofc
C27P6Ef2l33UjZR8PO5emCBlIcDnnjaRETzGpaQQ585tAjjoKO+eW5sF1x19
ak+sBXgSfyxfwjkLioWFOZa2Amxs9U04fS4T4Vcd3ke4CPC1qqnNszAd7nq3
v0sECCCR4iaXsOIhFl+cYyL2UIC41b0tj7uS8OfvwJktjwR4F/nH/upEItr6
6PqHmQLwfnz4qTg7EdG2uY5bnwpg4VKpun5DPCY1dviEFAog/NfX9EuRsWiv
u3pHuEEAU9YZ61vro/AqdORAQ5MA7dd3Olc5RiBm3T71lFYBbCVOXLALCof5
gxV5mzsFWB6ZF+BTFIr8U1Ufg7+SfKQZsV1uQYhdvuaqda8AoV5rxuSTT8OL
m2ijIhCAs//nYHjTSSyzOPrlzaCA1IuCsZrAYxCZ0pgaPSIArSwunM45BPbz
dUecfwnw1kxz2qMwJxQeSdHWmRDgAp3yYVPkNtxSlhyanBTgBjuuw+uDp8H/
ACd2iys=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$171334#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$170897#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {0., 0.43797145896033013`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact solution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Galerkin solution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.828843406612306*^9, 3.8288434768329935`*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"f90f07aa-d461-41db-be14-967bcdc34b8d"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
     AbsoluteThickness[1.6], 
     PointBox[{{1., 0.}, {2., -0.000053141120467045666`}, {3., 
      0.00010943745960806384`}, {4., -0.00017129568102736137`}, {5., 
      0.00024278533133076374`}, {6., -0.00033034220150640614`}, {7., 
      0.0004450900525682089}, {8., -0.0006081068062157025}, {9., 
      0.0008617431588789359}, {10., -0.0012650375620517906`}, {11., 0.}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
      AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
      AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Discrete error of the approximated solution\"", TraditionalForm],
  PlotRange->{{0., 11.}, {-0.0012650375620517906`, 0.0008617431588789359}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.828843406612306*^9, 3.82884347689544*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"46a5d972-e8b2-4c67-8161-9c66e36cc717"],

Cell[BoxData["0.0012650375620517906`"], "Output",
 CellChangeTimes->{3.828843406612306*^9, 3.82884347689544*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"b67ce3aa-e483-4d60-a009-435908a99944"]
}, Open  ]],

Cell[TextData[StyleBox["We calculate the approximated solution usinf the FD \
method",
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.828242664670598*^9, 
  3.8282426791607056`*^9}},ExpressionUUID->"d3aad010-b22f-4d41-a991-\
54323491c3d3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]x", "=", " ", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"M", "+", "1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xx", "[", "j_", "]"}], ":=", " ", 
   RowBox[{"j", " ", "\[CapitalDelta]x"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BB", ":=", " ", 
   RowBox[{"BB", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"fun", "[", 
       RowBox[{"xx", "[", "i", "]"}], "]"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "M"}], "}"}]}], "]"}]}]}], ";", " ", 
  RowBox[{"A", ":=", " ", 
   RowBox[{"A", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
          RowBox[{"i", "==", 
           RowBox[{"j", "+", "1"}]}]}], "\[Rule]", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"M", ",", "M"}], "}"}]}], "]"}], " ", "+", " ", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
          RowBox[{"i", "==", 
           RowBox[{"j", "-", "1"}]}]}], "\[Rule]", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"M", ",", "M"}], "}"}]}], "]"}], " ", "+", " ", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
          RowBox[{"i", "==", "j"}]}], "\[Rule]", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"M", ",", "M"}], "}"}]}], "]"}]}], "//", 
     "Normal"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Anew", " ", "=", " ", 
   RowBox[{"A", " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"\[CapitalDelta]x", "^", "2"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XX", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"X", "[", "j", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "M"}], "}"}]}], "]"}]}], " ", ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sol1", " ", "=", " ", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Anew", ".", " ", "XX"}], " ", "\[Equal]", " ", "BB"}], ",", 
     " ", "XX"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XX1", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"XX", " ", "/.", " ", "Sol1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XX1", " ", "=", " ", 
    RowBox[{"Prepend", "[", 
     RowBox[{"XX1", ",", "0"}], "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XX1", " ", "=", " ", 
   RowBox[{"Append", "[", 
    RowBox[{"XX1", ",", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pFD", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[CapitalDelta]x", " ", "j"}], ",", " ", 
          RowBox[{"XX1", "[", 
           RowBox[{"[", 
            RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{"M", "+", "1"}]}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"Joined", "\[Rule]", " ", "True"}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\< \>\""}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<FD approximation\>\"", "}"}]}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tfd1", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tfd", "=", 
   RowBox[{"tfd1", "-", "tfd0"}]}], ";"}]}], "Input",
 CellLabel->
  "In[181]:=",ExpressionUUID->"8f86f244-f44e-4d41-95d8-1ec8ddd709af"],

Cell[TextData[StyleBox["We compare both solutions",
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.82824270773582*^9, 
  3.8282427121106954`*^9}},ExpressionUUID->"263aecf7-a1c9-48f6-acec-\
e68bc5e8c525"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{"pFD", ",", "pGAL"}], "]"}], "\n", "tgal", "\n", "tfd"}], "Input",
 CellLabel->
  "In[194]:=",ExpressionUUID->"3a95e319-2dbc-4016-b98a-6044c2bfff91"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQjQ4k2hKBaIW98JbynVqBK+wh/B32fP8Op/RY7bCf
pOIJRIfsNxvaSWjxHYLKn7CPmHxSfNKN4/bznlcC0Tn70jjG6xE5Z6HqL9m3
uqY92R590T4UDK7at3uc/Hnz0mWo/hv2/1Vvb44XuGZ/e1suCNlHFatNvc1+
A2rePXvOIstVXatv2hvyHDbgOfzAvr9260TzN7eg5j+yn3dmdoT0ztv2X2zO
f7Y5/9g+TtaPZc//21D7ntqvKDdceGL1bfvtYOOf2TOc0F/1adktqP0v7Mv0
K2YduXHDvgps4Uv7S1cvlZeqwdzz2n4y40KFnUWX7G1Bxn9+Y38+J8VLyvo0
1H3v7FvP7D/ILrDPHhKKH+xh4QkABPKiCw==
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]]}, {}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$170897#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\" \"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 0.43748379154609107`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"FD approximation\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Galerkin solution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.828843407018463*^9, 3.828843477143633*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"1bb83de7-ecea-435d-b8b8-18cf28dcb6b4"],

Cell[BoxData["28.49999999999997`"], "Output",
 CellChangeTimes->{3.828843407018463*^9, 3.828843477159253*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"38e7c804-e213-4d2c-991d-8ab5fade0860"],

Cell[BoxData["0.11000000000001364`"], "Output",
 CellChangeTimes->{3.828843407018463*^9, 3.8288434771748753`*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"ea14394f-785f-4e79-acd2-f72ebb8e785a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["f(x) = sin(x)exp(x)",
 FontWeight->"Bold",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Subsubsection",
 CellChangeTimes->{{3.828230901148696*^9, 3.8282309155269623`*^9}, {
  3.8282438774500847`*^9, 
  3.828243877704733*^9}},ExpressionUUID->"e5d965d1-3149-4aa5-bb52-\
b6e8e5547fdd"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"tgal0", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "10"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fun", "[", "y_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Sin", "[", "y", "]"}], "*", 
    RowBox[{"Exp", "[", "y", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k", "[", "y_", "]"}], " ", ":=", " ", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u0", "=", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"vsin", "[", " ", 
   RowBox[{"k_", ",", "y_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"k", "  ", "Pi", " ", "y"}], "]"}], " "}]}], "Input",ExpressionUUID\
->"d236cf6b-9147-4b3f-a969-0e82284bcadd"],

Cell[BoxData[{
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "n"}], ",", " ", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"grafico", "[", "i", "]"}], "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"vsin", "[", 
       RowBox[{"i", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"grafico", "[", "2", "]"}], ",", 
   RowBox[{"grafico", "[", "1", "]"}], ",", 
   RowBox[{"grafico", "[", 
    RowBox[{"n", "-", "2"}], "]"}], ",", 
   RowBox[{"grafico", "[", "n", "]"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dvsin", "[", 
    RowBox[{"j_", ",", "y_"}], "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"vsin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], ",", "y"}], "]"}]}], ";"}], "\n", 
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "n"}], ",", " ", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"grafico", "[", "i", "]"}], "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"dvsin", "[", 
       RowBox[{"i", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"grafico", "[", "1", "]"}], ",", 
   RowBox[{"grafico", "[", "2", "]"}], ",", 
   RowBox[{"grafico", "[", 
    RowBox[{"n", "-", "2"}], "]"}], ",", 
   RowBox[{"grafico", "[", "n", "]"}]}], "]"}]}], "Input",ExpressionUUID->\
"6d010c00-24e2-45ae-b4d0-999987200371"],

Cell[BoxData[{
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"j", "=", "1"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"j", "++"}], ",", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"j_", ",", "y_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"vsin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], "/;", "  ", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"j", ",", "1"}], "]"}], "\[Equal]", "0"}]}]}]}], "]"}], "\n", 
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"j", "=", "1"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"j", "++"}], ",", 
   RowBox[{
    RowBox[{"dv", "[", 
     RowBox[{"j_", ",", "y_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"dvsin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], "/;", "  ", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"j", ",", "1"}], "]"}], "\[Equal]", "0"}]}]}]}], "]"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"v", " ", "[", 
      RowBox[{"1", ",", "y"}], "]"}], ",", 
     RowBox[{"dv", "[", 
      RowBox[{"1", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\n", 
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"grafico", "[", "i", "]"}], "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"v", "[", 
       RowBox[{"i", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"grafico", "[", "1", "]"}], ",", 
   RowBox[{"grafico", "[", "2", "]"}], ",", 
   RowBox[{"grafico", "[", "n", "]"}]}], "]"}]}], "Input",ExpressionUUID->\
"ed8f3b10-2502-4b58-9f69-762c1588745a"],

Cell[BoxData[{
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"grafico", "[", "i", "]"}], "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"dv", "[", 
       RowBox[{"i", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"grafico", "[", "1", "]"}], ",", 
   RowBox[{"grafico", "[", "2", "]"}], ",", 
   RowBox[{"grafico", "[", "n", "]"}]}], "]"}]}], "Input",ExpressionUUID->\
"41fb267b-e54d-44dd-ae10-954f6a03d13a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Do", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"i", ",", "j"}], "]"}], " ", "=", " ", 
    RowBox[{"N", "[", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], " ", 
      RowBox[{
       RowBox[{"k", "[", "x", "]"}], "*", 
       RowBox[{"dv", "[", 
        RowBox[{"j", ",", "x"}], "]"}], "  ", 
       RowBox[{"dv", "[", 
        RowBox[{"i", ",", "x"}], "]"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], " ", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "n"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "n"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"AA", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"i", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Det", "[", "AA", "]"}], ";"}], "\n", 
 RowBox[{"Do", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"b", "[", "j", "]"}], " ", "=", 
    RowBox[{"N", "[", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{"fun", "[", "x", "]"}], " ", 
       RowBox[{"v", "[", 
        RowBox[{"j", ",", "x"}], "]"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "n"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"ff", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"b", ",", "n"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", " ", "=", " ", 
   RowBox[{"N", "[", 
    RowBox[{"LinearSolve", "[", 
     RowBox[{"AA", ",", " ", "ff"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Solution", " ", "[", "y_", "]"}], " ", ":=", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "n"], 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"[", "k", "]"}], "]"}], " ", 
     RowBox[{"v", "[", 
      RowBox[{"k", ",", "y"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pGAL", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Solution", "[", "y", "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
    RowBox[{
    "PlotLabel", "\[Rule]", " ", 
     "\"\<Approximated solution using Galerkin\>\""}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<Galerkin\>\"", "}"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"tgal1", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tgal", "=", 
   RowBox[{"tgal1", "-", "tgal0"}]}], ";"}]}], "Input",
 CellLabel->
  "In[216]:=",ExpressionUUID->"dc447390-6d56-41a5-9d8b-b8991b107e09"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
9xILpC2dSFzFwZ9aRlovSP3fyZd/WECBg3A18/ibrqQfVbMMutU48CimnfRJ
/yjebyhw1YADvlMhzZoONC6alkbIGnIw7flJPMmexiF9JZE7xmR+nan8cdKf
5myev7DEggOqSlbikR1N6kjDsvYDHHgPWVtI2JD+995WWfYEB2l6XcoRe0n/
eV2Tm+XDgWuZoW6tBem3z7dtVPXl4HPluUwJYs1H0pp6gRw4jtwPumZGI+xK
958uYRwwc5fKXzGmIW3hsS8rkYO5qi5dqvrkfHe3Naskc7Dh0qEVDrtIf/zT
yLY4hYPr13+mh++k4aGqfLA6nQMZS6X/fQDpNwu+uA/c58C+w2/EmbwPmL0L
CFKp4CDx/V8t8ltohBpFpBdxOVCHBsdBkUaT05FD6oPk+Y72nLVWoKEQYCqV
O8SB3/xSBzN5Gm8zJBIyRzk4E1rA1lpDY8l0WuT/fnJgtH/DwklZGvfySk6c
FOuDgP6ipfJLSH5LDuiqaPVB+YWatAI/DTmldz/ubuvDmbjsCs5vCgF4WCyv
2weRbeFxmbMUpI/7b5TZ0YeEu9PZMjMU3Kv45EVN+uCzKPHR+ASFH4FSogOO
fXiRff6g5TCFNV0m7ZkRfXA8/nv0eguFmErdfJuLfSjeVvTmVzOFb3dVIoVj
+5D6LviAcxOFSl8xzWPxfVho+zxBpoHML9J0ZdONPgT/FHYLek3h3mZ7wxeP
+qBRMeJeWU5BLcazpPtTH0au5trGp1FI8jkQF99N5n8o1HDvBoXf1sbuu1h9
iNtzpaPiOoX3qzeQitAH9vyZbCaRwqniLydOfO1D+Pi6H4suUyjqDVCcEeLi
/pw1Sd9CKOhsDb8qtYkLsUTtuvaDFFrdpLTSNLkQkkt9XWNPwe/yw7Y/tnJh
zr/nUpEdhdy+dun127mIjY3witpPYdVV1QytPVz87L3kKWlKYc7X1rz9DlzM
8Tvygdam8O6BUk3cBS7CWmNeOy2lcGhVwxR/MxemwWn2JVXlEJPyLaZauOAJ
pV75WFmOF4uXngpo56LSZvr31DPyf2TewYGBLi7G8mfiNpWXg/ed29owwMV2
a2+rCw/LceHNbGHaLBeu+S9XpyaV456/mre2cj+cnawOlbiXY/xtHPtkWD8S
IiMig3+UoXN+y5GZf/qxdXFJmuJ4GSrNZHlRkf349O9bNHwtQ3z9g+mbsf14
N/tNQWaoDMpNNUvqEvux3J8dkNhVBqeP/IZKD/rhoGtmtqSyDNX9ATmspn6Y
aQgO6kaXIXmuk7+VwgDWOsgr7BAvw+Lu4ttzXg1A4fzeba7CpRAMCbPWPjUI
g4n2seXPS8B33ymfLfkZR27mDY57FcM3JT9OsvIznmrWGHLrCvF0w0URCe8h
PGp5WL1wfgEkTHxVLogN46F3t2C11iN0qr5vDqaHEWJwOeuf2Rw8ugkFjtMI
nqu6eS1wuQvHfC2JlbMjqCjKSl3lfhvnIzLCOh98gbAHO1Fc9DryBlbeEDPj
4Z3OXKtD72NwMS3CpduCh1x7vlYbjxi4W40oPtzHA1tILXvHTDRkafqRuR0P
/x6fv2BoXTRirhysvuTGw+CryJXXz0XhiNb1r6LBPJR9kLC/pBQOufAlRsLZ
PEi3xFvVfTmN2W1nF7bd46GTv/Tzt+Wn8XGEacrO4aHIwKFo3s5gxNsVOu55
zMPogb8rFiQE4reylV8EzUPYnrH+AC1/dDZeuSnQzMPuZNmCkImjKI2c/Ku5
hYem/V+euRh64aqus1JmOw9cfcp9S7InTO+oFe3q5uH4tLTRE213lAfVvQkb
5KFHfjL95A8HJKluubJvmIe3Oz52Rly3wyl2qvUaHg/b5Kcz4nSssd7seM/z
MR4+Oawb/vHDBHP5P2TFT/JwMrWWqtcxQG+x7lGXnzyIrb86qzGlA/po5kb1
X8RL78F7ShnXVs8f//2bjP/QzVloaKL3f5OYweY=
          "]]}, Annotation[#, "Charting`Private`Tag$203063#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Approximated solution using Galerkin\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {0., 0.11122889412160505`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Galerkin\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.828843445767681*^9, 3.828845255100849*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"88b4970d-d03d-4138-99d8-fe5db72b2b38"]
}, Open  ]],

Cell[TextData[StyleBox["We calculate the exact solution and compare it with \
Galerkin",
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.8282433331203947`*^9, 
  3.828243345510391*^9}},ExpressionUUID->"7d6d1f80-30e6-446c-b214-\
72545f53b397"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{"sol", "=", 
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           RowBox[{"u1", "''"}], "[", "x", "]"}]}], "\[Equal]", 
         RowBox[{"fun", "[", "x", "]"}]}], ",", 
        RowBox[{
         RowBox[{"u1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"u1", "[", "1", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
      RowBox[{"u1", "[", "x", "]"}], ",", "x"}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Uexact", "[", "x_", "]"}], ":=", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x", "-", 
        RowBox[{"\[ExponentialE]", " ", "x", " ", 
         RowBox[{"Cos", "[", "1", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "x"], " ", 
         RowBox[{"Cos", "[", "x", "]"}]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p0", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"u1", "[", "x", "]"}], "/.", "sol"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Exact solution\>\"", "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"p0", ",", "pGAL"}], "]"}]}]}]], "Input",
 CellChangeTimes->{3.8282433723798895`*^9},
 CellLabel->
  "In[228]:=",ExpressionUUID->"a6934e86-3108-4846-875b-00311e716fb8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"u1", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x", "-", 
       RowBox[{"\[ExponentialE]", " ", "x", " ", 
        RowBox[{"Cos", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "x"], " ", 
        RowBox[{"Cos", "[", "x", "]"}]}]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8288434458926167`*^9, 3.8288452552726793`*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"5d7093bf-78a8-4a8c-bf10-cbbe1f4b955c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
/wdpDJ5N
           "]]}, 
         Annotation[#, "Charting`Private`Tag$203181#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
9xILpC2dSFzFwZ9aRlovSP3fyZd/WECBg3A18/ibrqQfVbMMutU48CimnfRJ
/yjebyhw1YADvlMhzZoONC6alkbIGnIw7flJPMmexiF9JZE7xmR+nan8cdKf
5myev7DEggOqSlbikR1N6kjDsvYDHHgPWVtI2JD+995WWfYEB2l6XcoRe0n/
eV2Tm+XDgWuZoW6tBem3z7dtVPXl4HPluUwJYs1H0pp6gRw4jtwPumZGI+xK
958uYRwwc5fKXzGmIW3hsS8rkYO5qi5dqvrkfHe3Naskc7Dh0qEVDrtIf/zT
yLY4hYPr13+mh++k4aGqfLA6nQMZS6X/fQDpNwu+uA/c58C+w2/EmbwPmL0L
CFKp4CDx/V8t8ltohBpFpBdxOVCHBsdBkUaT05FD6oPk+Y72nLVWoKEQYCqV
O8SB3/xSBzN5Gm8zJBIyRzk4E1rA1lpDY8l0WuT/fnJgtH/DwklZGvfySk6c
FOuDgP6ipfJLSH5LDuiqaPVB+YWatAI/DTmldz/ubuvDmbjsCs5vCgF4WCyv
2weRbeFxmbMUpI/7b5TZ0YeEu9PZMjMU3Kv45EVN+uCzKPHR+ASFH4FSogOO
fXiRff6g5TCFNV0m7ZkRfXA8/nv0eguFmErdfJuLfSjeVvTmVzOFb3dVIoVj
+5D6LviAcxOFSl8xzWPxfVho+zxBpoHML9J0ZdONPgT/FHYLek3h3mZ7wxeP
+qBRMeJeWU5BLcazpPtTH0au5trGp1FI8jkQF99N5n8o1HDvBoXf1sbuu1h9
iNtzpaPiOoX3qzeQitAH9vyZbCaRwqniLydOfO1D+Pi6H4suUyjqDVCcEeLi
/pw1Sd9CKOhsDb8qtYkLsUTtuvaDFFrdpLTSNLkQkkt9XWNPwe/yw7Y/tnJh
zr/nUpEdhdy+dun127mIjY3witpPYdVV1QytPVz87L3kKWlKYc7X1rz9DlzM
8Tvygdam8O6BUk3cBS7CWmNeOy2lcGhVwxR/MxemwWn2JVXlEJPyLaZauOAJ
pV75WFmOF4uXngpo56LSZvr31DPyf2TewYGBLi7G8mfiNpWXg/ed29owwMV2
a2+rCw/LceHNbGHaLBeu+S9XpyaV456/mre2cj+cnawOlbiXY/xtHPtkWD8S
IiMig3+UoXN+y5GZf/qxdXFJmuJ4GSrNZHlRkf349O9bNHwtQ3z9g+mbsf14
N/tNQWaoDMpNNUvqEvux3J8dkNhVBqeP/IZKD/rhoGtmtqSyDNX9ATmspn6Y
aQgO6kaXIXmuk7+VwgDWOsgr7BAvw+Lu4ttzXg1A4fzeba7CpRAMCbPWPjUI
g4n2seXPS8B33ymfLfkZR27mDY57FcM3JT9OsvIznmrWGHLrCvF0w0URCe8h
PGp5WL1wfgEkTHxVLogN46F3t2C11iN0qr5vDqaHEWJwOeuf2Rw8ugkFjtMI
nqu6eS1wuQvHfC2JlbMjqCjKSl3lfhvnIzLCOh98gbAHO1Fc9DryBlbeEDPj
4Z3OXKtD72NwMS3CpduCh1x7vlYbjxi4W40oPtzHA1tILXvHTDRkafqRuR0P
/x6fv2BoXTRirhysvuTGw+CryJXXz0XhiNb1r6LBPJR9kLC/pBQOufAlRsLZ
PEi3xFvVfTmN2W1nF7bd46GTv/Tzt+Wn8XGEacrO4aHIwKFo3s5gxNsVOu55
zMPogb8rFiQE4reylV8EzUPYnrH+AC1/dDZeuSnQzMPuZNmCkImjKI2c/Ku5
hYem/V+euRh64aqus1JmOw9cfcp9S7InTO+oFe3q5uH4tLTRE213lAfVvQkb
5KFHfjL95A8HJKluubJvmIe3Oz52Rly3wyl2qvUaHg/b5Kcz4nSssd7seM/z
MR4+Oawb/vHDBHP5P2TFT/JwMrWWqtcxQG+x7lGXnzyIrb86qzGlA/po5kb1
X8RL78F7ShnXVs8f//2bjP/QzVloaKL3f5OYweY=
           "]]}, Annotation[#, "Charting`Private`Tag$203063#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {0., 0.11132642735580428`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact solution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Galerkin\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8288434458926167`*^9, 3.8288452553976517`*^9},
 CellLabel->
  "Out[231]=",ExpressionUUID->"bc6c9d44-db73-4121-b89d-ce8f84e47a6c"]
}, Open  ]],

Cell[TextData[StyleBox["We attend to the error",
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.828243075050455*^9, 
  3.8282430789502716`*^9}},ExpressionUUID->"5fb0e8db-c0a6-4d62-9480-\
22ca25c038fe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Uexact", "[", "y", "]"}], "-", 
        RowBox[{"Solution", "[", "y", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", "1", ",", 
         RowBox[{"1", "/", "n"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"PointSize", "[", "Large", "]"}]}], ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", " ", 
      "\"\<Discrete error of the approximated solution\>\""}]}], "]"}],
   FontColor->GrayLevel[0]], 
  StyleBox[" ",
   FontColor->GrayLevel[0]], 
  StyleBox[
   RowBox[{"(*", "Error", "*)"}],
   FontColor->GrayLevel[0]], "\n", 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"max", " ", "value", " ", "discrete", " ", 
     RowBox[{"error", ":"}]}], "*)"}],
   FontColor->GrayLevel[0]]}], "\n", 
 StyleBox[
  RowBox[{"Max", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"Uexact", "[", "y", "]"}], "-", 
       RowBox[{"Solution", "[", "y", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1", ",", 
       RowBox[{"1", "/", "n"}]}], "}"}]}], "]"}], "]"}],
  FontColor->GrayLevel[0]]}], "Input",
 CellChangeTimes->{{3.8287070903109694`*^9, 3.8287070934687476`*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"ee418e8e-5431-4fdf-9ad5-f137533460f1"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
     AbsoluteThickness[1.6], 
     PointBox[{{1., 0.}, {2., -0.000011186260773232704`}, {3., 
      0.000023062781466770543`}, {4., -0.000036113701209636306`}, {5., 
      0.00005119440659191732}, {6., -0.00006966124604115831}, {7., 
      0.00009385801015258932}, {8., -0.00012822331850380342`}, {9., 
      0.00018166668212332704`}, {10., -0.00026656017742610755`}, {11., 
      0.}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
      AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
      AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Discrete error of the approximated solution\"", TraditionalForm],
  PlotRange->{{0., 11.}, {-0.00026656017742610755`, 0.00018166668212332704`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8288434461113663`*^9, 3.828845255475758*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"31766b0f-e77b-478b-abc9-685a8f8c871f"],

Cell[BoxData["0.00026656017742610755`"], "Output",
 CellChangeTimes->{3.8288434461113663`*^9, 3.8288452554913807`*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"c1a19cf3-e8a7-4bc2-9a9b-b97c02e279e8"]
}, Open  ]],

Cell[TextData[StyleBox["We calculate the approximated solution using FD \
method",
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.828243009980568*^9, 
  3.828243024330369*^9}},ExpressionUUID->"1640098f-c6b8-40b3-8072-\
d5899bc4d406"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tfd0", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]x", "=", " ", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"M", "+", "1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xx", "[", "j_", "]"}], ":=", " ", 
   RowBox[{"j", " ", "\[CapitalDelta]x"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BB", ":=", " ", 
   RowBox[{"BB", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"fun", "[", 
       RowBox[{"xx", "[", "i", "]"}], "]"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "M"}], "}"}]}], "]"}]}]}], ";", " ", 
  RowBox[{"A", ":=", " ", 
   RowBox[{"A", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
          RowBox[{"i", "==", 
           RowBox[{"j", "+", "1"}]}]}], "\[Rule]", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"M", ",", "M"}], "}"}]}], "]"}], " ", "+", " ", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
          RowBox[{"i", "==", 
           RowBox[{"j", "-", "1"}]}]}], "\[Rule]", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"M", ",", "M"}], "}"}]}], "]"}], " ", "+", " ", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
          RowBox[{"i", "==", "j"}]}], "\[Rule]", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"M", ",", "M"}], "}"}]}], "]"}]}], "//", 
     "Normal"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Anew", " ", "=", " ", 
   RowBox[{"A", " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"\[CapitalDelta]x", "^", "2"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XX", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"X", "[", "j", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "M"}], "}"}]}], "]"}]}], " ", ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sol1", " ", "=", " ", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Anew", ".", " ", "XX"}], " ", "\[Equal]", " ", "BB"}], ",", 
     " ", "XX"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XX1", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"XX", " ", "/.", " ", "Sol1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XX1", " ", "=", " ", 
    RowBox[{"Prepend", "[", 
     RowBox[{"XX1", ",", "0"}], "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XX1", " ", "=", " ", 
    RowBox[{"Append", "[", 
     RowBox[{"XX1", ",", "0"}], "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pFD", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[CapitalDelta]x", " ", "j"}], ",", " ", 
          RowBox[{"XX1", "[", 
           RowBox[{"[", 
            RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{"M", "+", "1"}]}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"Joined", "\[Rule]", " ", "True"}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\< \>\""}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Green", "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<FD approximation\>\"", "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"tfd1", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tfd", "=", 
   RowBox[{"tfd1", "-", "tfd0"}]}], ";"}]}], "Input",
 CellLabel->
  "In[234]:=",ExpressionUUID->"4efe6cdb-4b65-40e2-8a22-184795006ab8"],

Cell[TextData[StyleBox["Comparisson between FD and Galerkin",
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.828243253980633*^9, 
  3.82824326354117*^9}},ExpressionUUID->"d0c79526-ebf1-44f6-a877-\
671c8ac6fee5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{"pFD", ",", "pGAL"}], "]"}], "\n", "tgal", "\n", "tfd"}], "Input",
 CellLabel->
  "In[248]:=",ExpressionUUID->"511ffa45-504f-44b6-a2dd-50a7add3df1b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQjQ4k2hKBaIV9rFrCzPM3Ou0h/B32S5amrVTaPdN+
koonEB2yN+avjrihuhgqf8J+wTZTfX/blfbznlcC0Tn7ZTVV0psE1kPVX7Iv
7mLZN9F1k30oGFy1P17SIM93egtU/w37DSvXpq3j2W5/e1suCNln3Wtxy/+7
A2rePfsABVPe5P5d9oY8hw14Dj+wV7IT1Vu9eTfU/Ef2aQxTvIui9th/sTn/
2eb8Y3vdAuOrz4r2QO17am/x67mf2evd9tvBxj+zP8PeEdG5YRfU/hf2N04G
9TKs32FfBbbwpX1w9peQTRe3Qt3z2l6v8+KBlUyb7G1Bxn9+Y292bIry2dBV
UPe9s++0thSoOjnHHhKKH+xh4QkAPHqcUQ==
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]]}, {}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
9xILpC2dSFzFwZ9aRlovSP3fyZd/WECBg3A18/ibrqQfVbMMutU48CimnfRJ
/yjebyhw1YADvlMhzZoONC6alkbIGnIw7flJPMmexiF9JZE7xmR+nan8cdKf
5myev7DEggOqSlbikR1N6kjDsvYDHHgPWVtI2JD+995WWfYEB2l6XcoRe0n/
eV2Tm+XDgWuZoW6tBem3z7dtVPXl4HPluUwJYs1H0pp6gRw4jtwPumZGI+xK
958uYRwwc5fKXzGmIW3hsS8rkYO5qi5dqvrkfHe3Naskc7Dh0qEVDrtIf/zT
yLY4hYPr13+mh++k4aGqfLA6nQMZS6X/fQDpNwu+uA/c58C+w2/EmbwPmL0L
CFKp4CDx/V8t8ltohBpFpBdxOVCHBsdBkUaT05FD6oPk+Y72nLVWoKEQYCqV
O8SB3/xSBzN5Gm8zJBIyRzk4E1rA1lpDY8l0WuT/fnJgtH/DwklZGvfySk6c
FOuDgP6ipfJLSH5LDuiqaPVB+YWatAI/DTmldz/ubuvDmbjsCs5vCgF4WCyv
2weRbeFxmbMUpI/7b5TZ0YeEu9PZMjMU3Kv45EVN+uCzKPHR+ASFH4FSogOO
fXiRff6g5TCFNV0m7ZkRfXA8/nv0eguFmErdfJuLfSjeVvTmVzOFb3dVIoVj
+5D6LviAcxOFSl8xzWPxfVho+zxBpoHML9J0ZdONPgT/FHYLek3h3mZ7wxeP
+qBRMeJeWU5BLcazpPtTH0au5trGp1FI8jkQF99N5n8o1HDvBoXf1sbuu1h9
iNtzpaPiOoX3qzeQitAH9vyZbCaRwqniLydOfO1D+Pi6H4suUyjqDVCcEeLi
/pw1Sd9CKOhsDb8qtYkLsUTtuvaDFFrdpLTSNLkQkkt9XWNPwe/yw7Y/tnJh
zr/nUpEdhdy+dun127mIjY3witpPYdVV1QytPVz87L3kKWlKYc7X1rz9DlzM
8Tvygdam8O6BUk3cBS7CWmNeOy2lcGhVwxR/MxemwWn2JVXlEJPyLaZauOAJ
pV75WFmOF4uXngpo56LSZvr31DPyf2TewYGBLi7G8mfiNpWXg/ed29owwMV2
a2+rCw/LceHNbGHaLBeu+S9XpyaV456/mre2cj+cnawOlbiXY/xtHPtkWD8S
IiMig3+UoXN+y5GZf/qxdXFJmuJ4GSrNZHlRkf349O9bNHwtQ3z9g+mbsf14
N/tNQWaoDMpNNUvqEvux3J8dkNhVBqeP/IZKD/rhoGtmtqSyDNX9ATmspn6Y
aQgO6kaXIXmuk7+VwgDWOsgr7BAvw+Lu4ttzXg1A4fzeba7CpRAMCbPWPjUI
g4n2seXPS8B33ymfLfkZR27mDY57FcM3JT9OsvIznmrWGHLrCvF0w0URCe8h
PGp5WL1wfgEkTHxVLogN46F3t2C11iN0qr5vDqaHEWJwOeuf2Rw8ugkFjtMI
nqu6eS1wuQvHfC2JlbMjqCjKSl3lfhvnIzLCOh98gbAHO1Fc9DryBlbeEDPj
4Z3OXKtD72NwMS3CpduCh1x7vlYbjxi4W40oPtzHA1tILXvHTDRkafqRuR0P
/x6fv2BoXTRirhysvuTGw+CryJXXz0XhiNb1r6LBPJR9kLC/pBQOufAlRsLZ
PEi3xFvVfTmN2W1nF7bd46GTv/Tzt+Wn8XGEacrO4aHIwKFo3s5gxNsVOu55
zMPogb8rFiQE4reylV8EzUPYnrH+AC1/dDZeuSnQzMPuZNmCkImjKI2c/Ku5
hYem/V+euRh64aqus1JmOw9cfcp9S7InTO+oFe3q5uH4tLTRE213lAfVvQkb
5KFHfjL95A8HJKluubJvmIe3Oz52Rly3wyl2qvUaHg/b5Kcz4nSssd7seM/z
MR4+Oawb/vHDBHP5P2TFT/JwMrWWqtcxQG+x7lGXnzyIrb86qzGlA/po5kb1
X8RL78F7ShnXVs8f//2bjP/QzVloaKL3f5OYweY=
           "]]}, Annotation[#, "Charting`Private`Tag$203063#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\" \"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 0.1111282606611332}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"FD approximation\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Galerkin\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.828843446440138*^9, 3.828845255819425*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"e6cdfd21-0493-47e5-96f2-93d3c9c28685"],

Cell[BoxData["37.35899999999998`"], "Output",
 CellChangeTimes->{3.828843446440138*^9, 3.8288452558350506`*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"9c83127d-d93a-45dd-aa71-2cb6bb61fa77"],

Cell[BoxData["0.23399999999998045`"], "Output",
 CellChangeTimes->{3.828843446440138*^9, 3.8288452558350506`*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"a17d27c3-bf5b-4ef3-983f-cb4357dd74bb"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["8.2. Piecewise polynomials and FEM",
 FontWeight->"Bold"]], "Section",
 CellChangeTimes->{{3.828231586997819*^9, 3.828231591563306*^9}, {
  3.8282316278224745`*^9, 3.828231634687545*^9}, {3.8282437038484964`*^9, 
  3.828243718010178*^9}},ExpressionUUID->"e07821ae-d6c8-4871-a964-\
8ac09a4bf042"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["a) Write a program that solves (5.2), when k(x) = 1 \
and l = 1 using FEM method with piecewise polynomials of first order and with \
two different f(x). Compare the approximated solutions with the ones obtained \
using FD method for elliptic problems.",
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0.5, 0]]], "Subsection",
 CellChangeTimes->{{3.828231659407898*^9, 3.828231683045965*^9}, {
  3.8288453729479723`*^9, 3.8288454329117537`*^9}, {3.8288464321334815`*^9, 
  3.828846476210621*^9}},ExpressionUUID->"7ebe133b-c745-44c6-8f37-\
6f0ec85bbe28"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["f(x) = (3x+x^2)exp(x)",
 FontWeight->"Bold",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Subsubsection",
 CellChangeTimes->{{3.828231691122712*^9, 3.828231702942788*^9}, {
  3.8282438685400133`*^9, 
  3.828243868830491*^9}},ExpressionUUID->"b75521d4-c864-4d3d-a45b-\
cef62623b87e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "FEM", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t0", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ax", "[", "y_", "]"}], ":=", "1"}], "\n", 
 RowBox[{
  RowBox[{"fun", "[", "y_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", "y"}], "+", 
     RowBox[{"y", "^", "2"}]}], ")"}], 
   RowBox[{"Exp", "[", "y", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"u0", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Deltax", "=", 
   RowBox[{"N", "[", 
    RowBox[{"1", "/", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "0", "]"}], " ", "=", " ", "0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8288472077656684`*^9, 3.8288472081564116`*^9}},
 CellLabel->
  "In[575]:=",ExpressionUUID->"8650f16d-afe9-40ab-9bbb-7ee93d4dbbf3"],

Cell[BoxData[{
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"i", "++"}], ",", " ", 
   RowBox[{
    RowBox[{"x", "[", "i", "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"i", "-", "1"}], "]"}], "+", "Deltax"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vlin", "[", " ", 
   RowBox[{"k_", ",", "y_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"y", "-", 
           RowBox[{"x", "[", 
            RowBox[{"k", "-", "1"}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", "k", "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"k", "-", "1"}], "]"}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"k", "-", "1"}], "]"}], "\[LessEqual]", " ", "y", " ", 
         "\[LessEqual]", " ", 
         RowBox[{"x", "[", "k", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"k", "+", "1"}], "]"}], "-", "y"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"k", "+", "1"}], "]"}], "-", 
           RowBox[{"x", "[", "k", "]"}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", "k", "]"}], "\[LessEqual]", " ", "y", " ", 
         "\[LessEqual]", " ", 
         RowBox[{"x", "[", 
          RowBox[{"k", "+", "1"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "  ", 
        RowBox[{"y", " ", "<", " ", 
         RowBox[{"x", "[", 
          RowBox[{"k", "-", "1"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "  ", 
        RowBox[{"y", " ", ">", " ", 
         RowBox[{"x", "[", 
          RowBox[{"k", "+", "1"}], "]"}]}]}], "}"}]}], "}"}], "]"}], 
   "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"vlin", "[", 
   RowBox[{"n", ",", "y_"}], "]"}], ":=", "  ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"y", "-", 
           RowBox[{"x", "[", 
            RowBox[{"n", "-", "1"}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", "n", "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"n", "-", "1"}], "]"}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"n", "-", "1"}], "]"}], "\[LessEqual]", " ", "y", " ", 
         "\[LessEqual]", " ", 
         RowBox[{"x", "[", "n", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "  ", 
        RowBox[{"y", " ", "<", " ", 
         RowBox[{"x", "[", 
          RowBox[{"n", "-", "1"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "  ", 
        RowBox[{"y", " ", ">", " ", 
         RowBox[{"x", "[", "n", "]"}]}]}], "}"}]}], "}"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dvlin", "[", 
    RowBox[{"j_", ",", "y_"}], "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"vlin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], ",", "y"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dvlin", "[", 
    RowBox[{"n", ",", "y_"}], "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"vlin", "[", 
      RowBox[{"n", ",", "y"}], "]"}], ",", "y"}], "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[583]:=",ExpressionUUID->"56ebbeb9-1bf6-439d-af85-4669f710ba6f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"j", "=", "1"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"j", "++"}], ",", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"j_", ",", "y_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"vlin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], "/;", "  ", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"j", ",", "1"}], "]"}], "\[Equal]", "0"}]}]}]}], "]"}], "\n", 
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"j", "=", "1"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"j", "++"}], ",", 
   RowBox[{
    RowBox[{"dv", "[", 
     RowBox[{"j_", ",", "y_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"dvlin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], "/;", "  ", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"j", ",", "1"}], "]"}], "\[Equal]", "0"}]}]}]}], "]"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"v", " ", "[", 
      RowBox[{"1", ",", "y"}], "]"}], ",", 
     RowBox[{"dv", "[", 
      RowBox[{"1", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellLabel->
  "In[588]:=",ExpressionUUID->"4d931d0f-e3b9-48db-bf7e-38150c70856e"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAASmXo0cDpVT6cfmIGMWSLPgRDGnDf
GTQ/xdMgTFcgaT8zn5icsxlEPwDHvoMgIHk/S83Xsp0ZVD+ewI0fBSCJP1dk
972SGWQ/bT11bfcfmT/dL4dDjRl0P9T7aJTwH6k/oBVPhooZhD8I2+In7R+5
P4EIsyeJGZQ/ocqfcesfyT9YWaGv8PGkP66vidtsLto/C/+BXEcerz9nP9GZ
7HLjPyVR7ujDi7Q/buUp47Su6T8af0c6Z6G0P+Be2QjByek/EK2giwq3tD9U
2IguzeTpP/oIUy5R4rQ/OMvneeUa6j/QwLdz3ji1PwSxpRAWh+o/ejCB/vjl
tT+YfCE+d1/rP29e2k+c+7U/C/bQY4N66z9kjDOhPxG2P31vgImPles/T+jl
Q4Y8tj9jYt/Up8vrPySgSokTk7Y/LUida9g37D/ODxQULkC3P8ITGZk5EO0/
wz1tZdFVtz80jci+RSvtP7hrxrZ0a7c/pgZ45FFG7T+jx3hZu5a3P4z51i9q
fO0/eH/dnkjttz9W35TGmujtP22tNvDrArg/yFhE7KYD7j9i249Bjxi4PzrS
8xGzHu4/TTdC5NVDuD8gxVJdy1TuPyLvpiljmrg/6qoQ9PvA7j8XHQB7BrC4
P10kwBkI3O4/DEtZzKnFuD/PnW8/FPfuP/emC2/w8Lg/tZDOiiwt7z/s1GTA
kwa5PycKfrA4SO8/4gK+ETccuT+agy3WRGPvP8xecLR9R7k/f3aMIV2Z7z/C
jMkFIV25P/LvO0dptO8/t7oiV8RyuT9laetsdc/vP5Vq8rizhLk/OgUvp+Dl
7z/6yy1s
        "]], LineBox[CompressedData["
1:eJwViX1QiwEAh1dEpytiPgupM4Uyx5lF/RYzI4d1K6W7jmhNSV30oZNFms5N
+ehYXYRLhLJDss2YbHvft6yW05ekdOVzenPNx01M/njuueeeBfGpEQnODAaD
PcZ/V5C8HFmtGsEuy270DdK4yA8Kr72vBn/xBF9JLw1F+slyEaXGS1XUaIyB
RlYzF0qbGlbdT1VYEQ2PoLpBylWDNHnPlXEZNCpPsxW/vTWwbX1+xhhLo3XL
oq64DRqM9halbQqgsaSJeXDhBQ3cnFlskWEIvQRddY+jxWKB+O4u+1dsfHbd
w5zzGNJmVY1MYsXMB55vnZyeYuDtvlu60E942L/+RcvaBgRvijr2K7EfDUmX
vGKsBqz+bM1YF9+B+5+Sk+N+GJCfOvB+EbsDldJg7R6GEc227h3uf9tRIOnY
eYBpxD5HI7eztB3CeM+y/LVGlDGr/6S0tqElpmBWrcKIn6EJBaW8V3gjTJk+
LtCEh+d7SobntcJMrElw5ZjgNLvNpd1qwRPBpDr3MBO2XH6RqdVYUMG/IZ4V
acKHm9poeZQF8bx35wNzTWAfWcFd7d2Cj5zIqdFmE2yW28JiexO+s0Im16QQ
SM8pTwypNyK0fx1xKpuAMmAPp2SzEfJLQpk0nwDZGTDxS48BM5hi2q+UgD+n
vko53oBVTsktZQYCH0daB0dEDcjuVhYXepG4+dqDFHfpoL9weaOERcKVW57o
zNDBNaLSsX45CenFgIkq1mOUkndTHQISTDFf4HZIA02daVtmOok882HDM496
jBbbJu+lSETrB/RBfBX44XYi7BWJtJAB/aO2WigmMPLm95Jg2/86pvnVYG6u
2/BrG4nCgyuPNuqqEZrkaxH5UNglqcjhjFyDfKF/4bIlFHz8NOpzvKto7gvk
ua+ioH9a/a3bqwJxO7gqMnys7zGHhCIlqqZCWhVFgbd0837HlxIMmfk+J3aP
/euyz3Xys5Dxt59BFoU+dpt5Q3YBSEekcO5xCnmCvJKE2FxM0cYyfisoMGLu
zJEpUjHTWVDNKh77hN0SPT8J/wCh/HzC
        "]], LineBox[CompressedData["
1:eJxFzm0wEwAcBvB56axWC3V1YtzEndcsJ4UPK9flvWN0PuTt5iXkKnKVTmll
jqL5MKJJXpZoZ+OyclnlaqfI+4hpbczS2EZd4abLqrvu/3/unnvu9+2hMs8z
0s0JBEL43/5bykFD2XZ+P53wP1p9jhu3HU1rzZvN7Ub3Ol6P9h5GE2duEUly
dHRVWa92Hj1HqqLxjWhzo8Da3nUAbD8U/IPug/ZrlE+mBaDTw6x4wij0+1qm
a/AlNCfQLjDrHdqhsCT1edYHsL8p5VmscBA8WOw33OcxAnaq1BnblkfBunWV
cpI2DuYv9QyQ78rAZMrjFY1mAlyeJc5ocPkIXjsq0GQWTYHzfaVde95Og1VC
6Z0x6gz4V/YEz/3qJ7DnMavNjB4FOKSJeqZzrxJ8mZLsPJegAnvpT5GmombB
u3Z+I0o30JaveaL9dXPgs3498q0RarAgjNnwag29qttnvVA9DxbHhlhwj2vA
RaHsh10LaOrn8Olm9hdw4OFirp3vAjjBccRoJkOvDlSoL7C+gmssk/IZLlr8
rxQ3mUvRW66x4gJyF8GEtiSR2nYJnHdfVGH7Bv3Ss5Roc04HtgnP87pJ1oMV
3qOyAgm6o57uokkygBNF/jaUTfQNdiNL8WQZ3K6l8MiRK+DSB+wU5Ul0GsPg
KoxBO0gkHVHx6Nuc033lTHSmf+33bQVo5+LdoVYt6M0jhTumWtFyw/x4iwBd
Gf808UQn2uTBuMiWoBVjnHoLGbq7ZD1VNonmBiW7N0+jIx4d6ApWol9cGepn
LaKrvQ9xYvToXHVdHHUF7RaZo+r9ibY0m+BXrqNnxUHZKRtoSXazD+03+p4T
adVkQv8B19k1/Q==
        "]]},
      Annotation[#, "Charting`Private`Tag$82017#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[{{2.040816326530612*^-8, 10.}, {0.009814340804846833, 10.}, {
        0.0196286612015304, 10.}, {0.040908357085458646`, 10.}, {
        0.06077788357015209, 10.}, {0.07051776619451407, 10.}, {
        0.08025764881887605, 10.}, {0.08554035390369732, 10.}, {
        0.09082305898851858, 10.}, {0.09346441153092921, 10.}, {
        0.09610576407333984, 10.}, {0.09742644034454516, 10.}, {
        0.09874711661575047, 10.}, {0.09907728568355181, 10.}, {
        0.09940745475135314, 10.}, {0.0996811224489796, 10.}}], 
       LineBox[{{0.10031887755102041`, -10.}, {0.10072813102255845`, -10.}, {
        0.10138846915816112`, -10.}, {0.11124879462818625`, -10.}, {
        0.12110912009821138`, -10.}, {0.1424808261288228, -10.}, {
        0.16346277092346467`, -10.}, {0.17324865862116823`, -10.}, {
        0.18303454631887175`, -10.}, {0.1883402539403638, -10.}, {
        0.19364596156185587`, -10.}, {0.1962988153726019, -10.}, {
        0.19895166918334792`, -10.}, {0.1992832759096912, -10.}, {
        0.19961488263603444`, -10.}, {0.1996811224489796, -10.}}], 
       LineBox[CompressedData["
1:eJxFzm0wEwAcBvB56axWC3V1YtzEndcsJ4UPK9flvWN0PuTt5iXkKnKVTmll
jqL5MKJJXpZoZ+OyclnlaqfI+4hpbczS2EZd4abLqrvu/3/unnvu9+2hMs8z
0s0JBEL43/5bykFD2XZ+P53wP1p9jhu3HU1rzZvN7Ub3Ol6P9h5GE2duEUly
dHRVWa92Hj1HqqLxjWhzo8Da3nUAbD8U/IPug/ZrlE+mBaDTw6x4wij0+1qm
a/AlNCfQLjDrHdqhsCT1edYHsL8p5VmscBA8WOw33OcxAnaq1BnblkfBunWV
cpI2DuYv9QyQ78rAZMrjFY1mAlyeJc5ocPkIXjsq0GQWTYHzfaVde95Og1VC
6Z0x6gz4V/YEz/3qJ7DnMavNjB4FOKSJeqZzrxJ8mZLsPJegAnvpT5GmombB
u3Z+I0o30JaveaL9dXPgs3498q0RarAgjNnwag29qttnvVA9DxbHhlhwj2vA
RaHsh10LaOrn8Olm9hdw4OFirp3vAjjBccRoJkOvDlSoL7C+gmssk/IZLlr8
rxQ3mUvRW66x4gJyF8GEtiSR2nYJnHdfVGH7Bv3Ss5Roc04HtgnP87pJ1oMV
3qOyAgm6o57uokkygBNF/jaUTfQNdiNL8WQZ3K6l8MiRK+DSB+wU5Ul0GsPg
KoxBO0gkHVHx6Nuc033lTHSmf+33bQVo5+LdoVYt6M0jhTumWtFyw/x4iwBd
Gf808UQn2uTBuMiWoBVjnHoLGbq7ZD1VNonmBiW7N0+jIx4d6ApWol9cGepn
LaKrvQ9xYvToXHVdHHUF7RaZo+r9ibY0m+BXrqNnxUHZKRtoSXazD+03+p4T
adVkQv8B19k1/Q==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$82017#2"]& ], {}}, {{}, {}, {}, {}, {}}, {{}, \
{}, {}, {}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-10., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8288475490633364`*^9, 3.828848732721081*^9, 
  3.8288487692216954`*^9, 3.829233549839429*^9, 3.829233643417279*^9, 
  3.8292342157806606`*^9, 3.8292367822164145`*^9},
 CellLabel->
  "Out[590]=",ExpressionUUID->"ee454f7b-61f4-4ae3-a31e-24b922aa5ef3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Do", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"i", ",", "j"}], "]"}], " ", "=", " ", 
    RowBox[{"N", "[", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{"ax", "[", "s", "]"}], " ", 
       RowBox[{"dv", "[", 
        RowBox[{"j", ",", "s"}], "]"}], "  ", 
       RowBox[{"dv", "[", 
        RowBox[{"i", ",", "s"}], "]"}], 
       RowBox[{"\[DifferentialD]", "s"}]}]}], " ", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"n", "-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", 
     RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"AA", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"i", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"n", "-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Det", "[", "AA", "]"}], ";"}], "\n", 
 RowBox[{"Do", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"b", "[", "j", "]"}], " ", "=", 
    RowBox[{"N", "[", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{"fun", "[", "s", "]"}], " ", 
       RowBox[{"v", "[", 
        RowBox[{"j", ",", "s"}], "]"}], 
       RowBox[{"\[DifferentialD]", "s"}]}]}], " ", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", 
     RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"ff", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"b", ",", 
     RowBox[{"n", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "%", "]"}], ";"}]}], "Input",
 CellLabel->
  "In[591]:=",ExpressionUUID->"061c6171-5d71-41d9-95fb-0e593a6cc8bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Solve", " ", "the", " ", "system", " ", "and", " ", "write", " ", "the", 
    " ", 
    RowBox[{"solution", "."}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"u", " ", "=", " ", 
     RowBox[{"N", "[", 
      RowBox[{"LinearSolve", "[", 
       RowBox[{"AA", ",", " ", "ff"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Solution", " ", "[", "y_", "]"}], " ", ":=", " ", 
     RowBox[{"u0", " ", "+", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"k", "=", "1"}], 
        RowBox[{"n", "-", "1"}]], 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"[", "k", "]"}], "]"}], " ", 
        RowBox[{"v", "[", 
         RowBox[{"k", ",", "y"}], "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t1", "=", 
     RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\<time FEM\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{"tFEM", "=", 
    RowBox[{"t1", "-", "t0"}]}]}]}]], "Input",
 CellChangeTimes->{{3.828848765631321*^9, 3.8288487657406716`*^9}},
 CellLabel->
  "In[598]:=",ExpressionUUID->"f06bd11e-165e-45d3-82b9-527600146889"],

Cell[BoxData["\<\"time FEM\"\>"], "Print",
 CellChangeTimes->{3.8288475520345163`*^9, 3.828848735861844*^9, 
  3.8288487718836436`*^9, 3.8292335524363947`*^9, 3.829233645680585*^9, 
  3.8292342178374834`*^9, 3.8292367845076246`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[598]:=",ExpressionUUID->"9dd798dd-1409-4227-aa1f-671e3672279e"],

Cell[BoxData["2.1569999999999965`"], "Output",
 CellChangeTimes->{3.8288475520345163`*^9, 3.828848735861844*^9, 
  3.828848771899293*^9, 3.8292335524413724`*^9, 3.829233645684575*^9, 
  3.8292342178374834`*^9, 3.8292367845076246`*^9},
 CellLabel->
  "Out[602]=",ExpressionUUID->"9273a432-6209-40b7-8b33-18e4d9a3d806"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "plot", " ", "the", " ", "exact", " ", "and", " ", "approximate", " ", 
    RowBox[{"solution", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Uexact", "[", "y_", "]"}], ":=", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Exp", "[", "y", "]"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "y"}], ")"}], "y"}]}], ";"}], " ", "\n", 
   RowBox[{"Plot1", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Uexact", "[", "y", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", " ", 
         RowBox[{"{", 
          RowBox[{"Red", ",", " ", "Dashed"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Exact Solution\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Exact solution\>\"", "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot2", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "i", "]"}], ",", 
          RowBox[{"Solution", "[", 
           RowBox[{"x", "[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"PointSize", "[", "Large", "]"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<Approximated solution using FEM\>\""}], 
      ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<FEM\>\"", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"Plot2", ",", "Plot1", ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Comparison between the exact and the approximated \
solution\>\""}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.828847587479086*^9, 3.828847656422287*^9}, {
  3.8288476894730253`*^9, 3.8288476964267406`*^9}, {3.828848726064575*^9, 
  3.828848752079315*^9}},
 CellLabel->
  "In[603]:=",ExpressionUUID->"9647885a-4a47-4631-aa7c-024becaf1cba"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwt1nlYTdsbB/AoShElQ4OSdK8GhORm6GsIjRQllUKiZGySUshVkcqUpEGo
pIHShEYlIqV5OrvhnLP3OUXDCY0qfus+z++v9/k85zlrr/Wuvb5rKzuc2XN0
qpCQkMQUIaH/qtHR7tq3Xy31DP5fRbbJne2U1cYy342H/qtr4iJjsmT14VSj
ZPdfNa5qzoyVtcD79e3ZMaRaOY4U3pF1xNh7vfdhpLavDNoWKusBuzoxGz9S
H83bHRgsexXU6NRUI1L9xbL+vi4bjoGgnzOvLQzHfuvH6QPfE6Dt5Ljboi8B
En/8D+xUTId3+r4bg5LpUDXv7353IxuFHCdVxjsbXl90ETn4BjWrnppK1LzB
gmypjilTiuE00KHMKSlCLndbZfXGUiTGewWlipWi1CVW3rq3DDfOfNP2iynD
0F+bZj8/VY45uR1zpSY+YOpY6hx51Qo8Uw5M7b/6CTp/DuXufVEJH9ULfcIt
n1F5VfvLB/VqRDirqCvIfIHSrZ6x5P4anA6PfGatW4Oekc6ORq066PLnS46b
1CLhW36FZFg9lgSpqbNO10FyUZKAYRqwweNw1iX/eoQczzn2aGkTWo2ShHu9
GjC8OZVxvtQMkX8H18Z5NcJjdVn2/HctuKcyU8/XpgmdL8pu1CqzcNa7PX//
1maMuzREq/lQYKvyijLnt0Bji+jvY/ltmPHSO2TOlxbsfKLs9HJBB5inJ3bf
+bcVXosOLuEc6ISjk65sjDwLmr2WEs2mbKzrz3qgGcfCawuT4mAzNqbJnojB
Yxa2FW5119vLRoOwwjbzeBZswlZSifvZaDfv8zmbxMJ1rRmpHkfYqCttvf4w
nQW+R4GRtDcbYZHCta+LWXg0uSTYNIGNomsBDnQHC3NnD4iV/WJjf8Ms4/GF
FOoKg4MMJ9kYKTrRFSFH4c5J1enVf9gIyb+CVQoUpCtshFkiHNyRi1R2UCIO
eD8pkOTAvu9KQrYqhTnjUT/kVTgwO7HVXmE1hZld29vcjTlY7zrz2KAhhcp7
bJsxUw4i9hdTx4wphOhfaL1oxkGrwuDUFhMKEk8ymq5bcrCrN9IxdzcFcTv5
2riDHOhHlZ04YklBrH7g/Wd3DhSzFm+5eIiCSHF0ukoMB8kyCiXZnhRYG/UN
Oh9y4CJ3S3uhF4X0vF521GMOrMMapH3OU7DJ3SQtncTB9I/KkroXKLx83ukh
lMnBxAvJwfjLFOxjVNa3l3MQpPNHcfkNCq+9U8sifnIwJ6V5fEYchbCRvXZ7
hjkIXaM9qvuIwhHPiaFZYxxQqk3mzo8pSLqa/h3wmwOp6dryb+MpHHUWXHef
wYUEY/XL9hnpl9Wa3WZKXEhNFQnWf0nhhHZ+6wxjLj7QWl8bSyi8rWlMe23K
hUe+wbLKUgrzTg1ccjLjItn+/Ie37ygUJ6r+9d6SC4tTXoqJ7ynMXXDL7fIh
LjLv2q6y+UQhf8xRYsSTi9tSbwI8a8h+RFzqSDzPRWzT1avmtWQ+q6NeWlzg
4v7PEkqjjsLsE9VWmZe5SFBjblP1ZD1tugmnbnDBMp4j9Xcz2Y9iyU3MIy48
OeKTp9opHLJVm3M3ngvp4lizlR0Ucka20Vuekuclfx3qJz6o5X09LpULVcWJ
NcfZFLIe0402uVw8pNe4GdIUbK++Pl37mYsbEcP3X3dTyFhcv+XyFy4E87Y3
2H+lMK2wT2ZlLRdfrK7YCn8j+ze0JD+kiYu0+TKGO3soCDuFihpwyO9aseF5
fRRSDR0eFQ1z4f5gd+iuHxS0NZX1MMZFcGTPZDVxkSSbKh7n4vlb697dPynU
1NstKBGi4bJxxxbjQQqDdtZh78RpHE+9VbJymILf5oWa+rNoOCwSzE8knq7S
/KlsNo3VGeZdC0coyHZbTPsgQ2OJZv7IOLGem5nvR0UaFfL6VeljFMotZssZ
KtM4EN49sPAXBbN1X159UqExmVIccpnYYcL4Z8UyGs1d0RrG4xSCAne6VK2m
UTtddaJqgswvSm9/3Q4a12VnP7j+h4K13+TQHkMaF1/bzGMRcw8W3K03plHq
qiGiJtSGwaXrqxvMaFzi968rJZZNX7uj2YaGQcpkH2dKG57cHqSt7Ghk73Yb
VJ3aBk2PLP+WgzR0RG+5OBPr6a4qbHWk8TvaKqGb2OGdpnbbaRobasT1m4Tb
0JPYU3vAlcZYW37hLJE2eFxLOdPuTp7nopOwjTjIdFlqx3kaZasW5KYQz9Hq
Mjh4gca3tjI2RRwl/ZTf6UcjsafinMS0NqQ1qyzhXKHxj89p+ijx2jxu8eEA
Gglje97cIi6KeWzHDaJRRS0ae0Ncc1jpAR1CI099MFt0ehus9Tt0HG/SEFHd
oaVJzP0rtoG5TUMuVkJmN/FQj9wcfgSN+1f95t4iDo/tKo95QKNaOuJpBvGa
3dmX9sbQWKWVuL+auE7If514HA3fJdpqvcSumaaCt49pPJCvXCAqStbjKJfk
lUDjme6wymLi9Hld9iuSaAwEbjBdR7yrPGs+L5lGx9jSuybEfecvf4lOoyHq
uWHoIHGIumngnnQaquWi7q7EGm2yejMyaUinSs/0J64I5Q8VZ9MoLmeKw4iP
I+v5uVc0tmZMD4siFvt+6ejyPBpvaaFzCcRJT0wWMQU0fKpsvdKId1jINkYV
0ygoi7udScybxg8xL6XRM9OyLJf46qtMfbH3NE43Cs9+Q6xy/NJEUTmNIl1t
1/9cKmeS7VlBw2rL6W+viA9XLjypWUXG69T1ySYWushToatpuA0qLk4njluZ
ST2oozFqlEglEetxLt41ayT9jbJIe0jcfsfYWLSFxsmg7Nt3iX31FwoXsWjo
PTK5EUgsP8zkebTTSDqUEOlFnJf00k2DTePXym1vjhFbW19U53JpeB7O6N1L
PCpuzI3k0diu7b4axPcLFkTt7qbhVy8dvIy4UenljMI+Gv1FIqeGyP551PqV
uA+Qfk04jrQQz/3XyFv9J+n/t8LbecTmfLr7/igN01aPQS/igfsZj3aNk/E0
2Pl7iW8a+u2f9pvG7C/2t5cTV6XN/+gmzECrPN2RIu/jSXv6ktp0Bo8qww6n
E0vMyVjHFmOw9nKUiz+xobthkqkkg7muZnFKxO91fQOXyTKQDGwP0CfnwbHH
QK9TnsHziE9NYsTCsfOG7yky+KEvpfWZnLctQulHhZcyCDz7acyQuPADR79j
BYMGI7e2leR8Hjj/YiJ8FQPBoloHhpzvcbUL2cbaDC4cz+mLINYNlVn6RpfB
cL3y7GGSBzl7dwqH6zNY6jjLPYbkxzXj1wEKOxnIuEtp7yQ+sE1NLNGQga/d
9XUDvylMXSMxK3cXg0bRrSKbiHdJV89v2c9gTKkmuYTkk7L45geHbBm0Myfd
7YkHp7yU/2rHQPbcPt8xkmfR3+8s/uXAwNH0gpE6cXfNPnWFUwzCb49UniP5
mP+xPC3hDIOubn7ANOKwt/+sXO5G/j9v1OfOKMnvDDltPS8GQTu+Lkgi+ep/
s2PTIX8GkfN5UvlDFOR2HTNPuMfATPpPWuh3Cn3bm+s1IxmsLt42+meA3J+b
DPblRJH+XjPwPkt8bLm67Yc4BjzWiJyJgNxHM/sdu5MZSHen1/b1UjD57Hle
s4jBq0HHTFYXhUsGAXHZfAa7mh+ctGoj30P2zge0vjIoSwyOvktRWOppLJvW
w+DhUMq0LywKFY+l7sYPMPD6JLi+qZWCzHhs4J1fDPRri3aKNlF49jz31FlJ
HvSm8rdsryb5Lt29QVOHB8sm3nnntxSWqH0eTfqHh1SrF6Yniil44kWOygYe
3jqsMz9ZRNZ70mOl/GYebAzHuM4FFBzfC6mIG/GQcXbjXyavKYx6yYp32/Ew
uvNmfV462Z92o5b4AB76XN+J6MRSCC7dkG55jQe/+5kGdDSFH0magaI3eJgi
3mkdFkWh1E1S+8QtHo7nMpz2+2R8sbqbq6N5KHpm5uNwh8x/jfXOkgweNjE1
1lOCKKwIdsrtoHjQCsY/d05TiDizP/RWBw85rzlLR09S+GNh6LiVw0OxJ77Y
niDrVdIgNwAPJaULLBWcKbjm9J869Z2H5j+xS68cppDN9lSdmM6He3SlJXsv
hfXrrobLruajj4rcQ+tQaHKQ1YnV5iPmhIbB4rUU3MNeNC9ex4egpEXHdg2F
NF6L3LKNfETt+zRZsZKCYvjyxzo7+EgN5KneWUbe5+9Nz/fa8DF2sN+vSJbC
5xS18tArZPzqwc0hv1hwbipylgrgY0WR1ZWgURZEplqI3wviw2wx98XlYRb0
rC+axoTw8e5kSvnJHyxkiNbXp0TwsT35ZY/GNxbCHX3Z5Sl8lEgmRW1vZeGA
YvXYlHo+GtZKe9M5LEjKuuXkN/KxQeXibJcsFkrmznP1bOGjMGJsSX8GC3/N
sO3ubudjb2VjUX8qC4Kf/Kbqbj5kjizKqyXf+1c+/c6K/c3H8F0XPcVQFp55
rDitq96FcMXFnlWHWRiqCOWe9e/CmZo50xyFWWiTaHSe+LcLfoV2Rj5CLJSa
KAiCArtgO/O2XthkK259SRl/eKMLS5/krUofaYV6XblM1b0uGOy/uraxpxX2
rVN2qqV04furGTte1rfiQ5dnKqeuC9v6ipSePm5FpIi9x56l3XD0/azopNOK
uR05T6aWdeOgyOETt3e2YJqfv4Wu61cUbY42pxY0QyjZPp0r/Y3k+aIjhjWN
cItKD5Uu/QaBSo/ls/UNKNS4JiZ1ugf39lzc6n2uDlJGbppXJHvhsUY5aDy2
Bm3La+q9C3oRLqzOVi6vRMZDLGXs+yBy3lonTOMj7NJ1pBb97sPGwR/HYnXe
4XLAY/+2lH6kdx6k7sbn4Xn3omhJEwEqelpFRvAc12IDDnXsEuCAltK+eTVp
cNzTp/rCXIAXUafzxA+lQaGgIMPUSoDNLR7RPpdSEXzT9kOIgwDdVY2tpwqS
4azz4Lu4twDi8U6y0SueYslVGQPRpwJErultft4Vi9//+M5qfibA+9DfNjcn
Y9DaR9c9TRWA+fHxp8LcGNyyyrLb8VIAU4dKlY2bovBHfY97QIEAwn9/Tb4W
GoG22psPhesFMGJdML+/MQyvA0eO1DcKyL2691CVXQjCNxxUi28RwEr87BXr
i8EwTlyRvbVDgOWh2d7uhYHIO1/1yf+rAM/nMKKWThcRsXztTfNeAQJd147J
xfnAlRtjoSwQgHv452Bw4zksMznZ+XZQQPIif6za9zREpjQk3BoRgFYSE07m
HAM7Z4PLoV8CvDPSmP4syB4FLvErtSYFuELHf9wSugv3lSSG/vwR4C47st31
4ym9/wH+n4sk
          "]]}, Annotation[#, "Charting`Private`Tag$89400#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Exact Solution\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {0., 0.4379714589603302}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Exact solution\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8288475522219687`*^9, {3.8288475921387186`*^9, 3.8288476187843757`*^9}, 
   3.8288476574383287`*^9, 3.828847697145318*^9, 3.828848736050006*^9, 
   3.8288487720126467`*^9, 3.829233552548628*^9, 3.8292336457834196`*^9, 
   3.8292342179463587`*^9, 3.829236784621288*^9},
 CellLabel->
  "Out[604]=",ExpressionUUID->"785c6114-8c99-4aff-ba8f-ba71c3624c33"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         PointSize[Large]], 
        PointBox[{{0., 0.}, {0.1, 0.09946538262680824}, {0.2, 
         0.19542444130562708`}, {0.30000000000000004`, 0.2834703495909605}, {
         0.4, 0.3580379274339047}, {0.5, 0.4121803176750319}, {0.6, 
         0.43730851209372196`}, {0.7, 0.4228880685687999}, {
         0.7999999999999999, 0.3560865485587947}, {0.8999999999999999, 
         0.22136428000412545`}, {0.9999999999999999, 0.}}]}}, {{
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         PointSize[Large]]}, {}}, {{
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         PointSize[Large]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Approximated solution using FEM\"", TraditionalForm], 
     PlotRange -> {{0, 0.9999999999999999}, {0, 0.43730851209372196`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"FEM\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8288475522219687`*^9, {3.8288475921387186`*^9, 3.8288476187843757`*^9}, 
   3.8288476574383287`*^9, 3.828847697145318*^9, 3.828848736050006*^9, 
   3.8288487720126467`*^9, 3.829233552548628*^9, 3.8292336457834196`*^9, 
   3.8292342179463587`*^9, 3.8292367847106113`*^9},
 CellLabel->
  "Out[605]=",ExpressionUUID->"459fbcc6-7e6d-4e4d-88c3-b36eb335bd82"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]], 
         PointBox[{{0., 0.}, {0.1, 0.09946538262680824}, {0.2, 
          0.19542444130562708`}, {0.30000000000000004`, 0.2834703495909605}, {
          0.4, 0.3580379274339047}, {0.5, 0.4121803176750319}, {0.6, 
          0.43730851209372196`}, {0.7, 0.4228880685687999}, {
          0.7999999999999999, 0.3560865485587947}, {0.8999999999999999, 
          0.22136428000412545`}, {0.9999999999999999, 0.}}]}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwt1nlYTdsbB/AoShElQ4OSdK8GhORm6GsIjRQllUKiZGySUshVkcqUpEGo
pIHShEYlIqV5OrvhnLP3OUXDCY0qfus+z++v9/k85zlrr/Wuvb5rKzuc2XN0
qpCQkMQUIaH/qtHR7tq3Xy31DP5fRbbJne2U1cYy342H/qtr4iJjsmT14VSj
ZPdfNa5qzoyVtcD79e3ZMaRaOY4U3pF1xNh7vfdhpLavDNoWKusBuzoxGz9S
H83bHRgsexXU6NRUI1L9xbL+vi4bjoGgnzOvLQzHfuvH6QPfE6Dt5Ljboi8B
En/8D+xUTId3+r4bg5LpUDXv7353IxuFHCdVxjsbXl90ETn4BjWrnppK1LzB
gmypjilTiuE00KHMKSlCLndbZfXGUiTGewWlipWi1CVW3rq3DDfOfNP2iynD
0F+bZj8/VY45uR1zpSY+YOpY6hx51Qo8Uw5M7b/6CTp/DuXufVEJH9ULfcIt
n1F5VfvLB/VqRDirqCvIfIHSrZ6x5P4anA6PfGatW4Oekc6ORq066PLnS46b
1CLhW36FZFg9lgSpqbNO10FyUZKAYRqwweNw1iX/eoQczzn2aGkTWo2ShHu9
GjC8OZVxvtQMkX8H18Z5NcJjdVn2/HctuKcyU8/XpgmdL8pu1CqzcNa7PX//
1maMuzREq/lQYKvyijLnt0Bji+jvY/ltmPHSO2TOlxbsfKLs9HJBB5inJ3bf
+bcVXosOLuEc6ISjk65sjDwLmr2WEs2mbKzrz3qgGcfCawuT4mAzNqbJnojB
Yxa2FW5119vLRoOwwjbzeBZswlZSifvZaDfv8zmbxMJ1rRmpHkfYqCttvf4w
nQW+R4GRtDcbYZHCta+LWXg0uSTYNIGNomsBDnQHC3NnD4iV/WJjf8Ms4/GF
FOoKg4MMJ9kYKTrRFSFH4c5J1enVf9gIyb+CVQoUpCtshFkiHNyRi1R2UCIO
eD8pkOTAvu9KQrYqhTnjUT/kVTgwO7HVXmE1hZld29vcjTlY7zrz2KAhhcp7
bJsxUw4i9hdTx4wphOhfaL1oxkGrwuDUFhMKEk8ymq5bcrCrN9IxdzcFcTv5
2riDHOhHlZ04YklBrH7g/Wd3DhSzFm+5eIiCSHF0ukoMB8kyCiXZnhRYG/UN
Oh9y4CJ3S3uhF4X0vF521GMOrMMapH3OU7DJ3SQtncTB9I/KkroXKLx83ukh
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
4ym9/wH+n4sk
           "]]}, Annotation[#, "Charting`Private`Tag$89400#1"]& ]}}, {}}}, {
    PlotLabel -> 
     FormBox["\"Comparison between the exact and the approximated solution\"",
        TraditionalForm], DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Approximated solution using FEM\"", TraditionalForm], 
     PlotRange -> {{0, 0.9999999999999999}, {0, 0.43730851209372196`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"FEM\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Exact solution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8288475522219687`*^9, {3.8288475921387186`*^9, 3.8288476187843757`*^9}, 
   3.8288476574383287`*^9, 3.828847697145318*^9, 3.828848736050006*^9, 
   3.8288487720126467`*^9, 3.829233552548628*^9, 3.8292336457834196`*^9, 
   3.8292342179463587`*^9, 3.8292367848004417`*^9},
 CellLabel->
  "Out[606]=",ExpressionUUID->"12624ea9-0cdf-41ce-a282-1cfb80298fd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Uexact", "[", "y", "]"}], "-", 
      RowBox[{"Solution", "[", "y", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Error\>\""}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DiscreteError", "[", "i_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Uexact", "[", 
    RowBox[{"x", "[", "i", "]"}], "]"}], "-", 
   RowBox[{"Solution", "[", 
    RowBox[{"x", "[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DiscreteError", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "Medium", "]"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Error of the FEM method compared with the exact sol\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Uexact", "[", "y", "]"}], "-", 
      RowBox[{"Solution", "[", "y", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1", ",", 
      RowBox[{"1", "/", "n"}]}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8288486366223183`*^9, 3.8288486512436314`*^9}, {
  3.8288488034286633`*^9, 3.828848848895397*^9}},
 CellLabel->
  "In[607]:=",ExpressionUUID->"28142c9b-5c93-46ca-b148-662857bb905a"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1:eJwV1Hk81dkbB/CvpowSLlmzJCaV0qasl+du328mKsu1pTEYIUaMhBpyVbZc
8ctNlEjqpkQSFbmWyL0pSZNKtkwYjEkLKsTv8cd5ndf7dc55Ps85f5yVPiGO
+xYQBMHHMT/nSRhHYksqgWDcM3ZY9NaaH5aY4/AITUhH19M/WUc+NYescbTX
wtm1u6RAfkPFwCOZKiCyxv0NNRbB5dRN/GkttFnB+bu9MtBmt7rDk0SfmHMv
30iDdY+VD67KRLsp9HsI1KBXPCYsM70PhInq94EverC9/op8y5FqIMYcDzqb
bYIe3ZUVs6fQVe1Dn3M3QTgvx2NTAbrFSWt84WbIh4zCjMdou7331Vo3w7SI
x9qjJQKiu6+p28MYblZ5RPwjQn+pXTfuYgJq5Yo9UlK1QNTfaRK1WsJe/jS3
XxX9jSsKWkOHS74Dj5vWo+Wyyu14dFivUlmZ4oZ27ZW+YmQFrAivMyqlaJWk
3pyj1mCS4yoUbKwDnmiXbEo0A9yTnvTFW9QBIVtzyfESA6LDmdqRJPqOUUSJ
mAH1dusE7h7o39JjVioywe77bJxOIrpH6cG/uUzw9hT+UtiD3ukY33SFBSd2
aGZnD6P3OI5da2SB0CT9xclxdLY9aL1jwaj8EdvgJfVADLqa39BhQ0TtTvMt
Jug0DcPQdDZkFz0I12eiVWju9UVsqD5rWqpshx52qs5tYoNU6MrVX7zR6ZkP
Z6bYwNedUK5ORWf3+NM9OVCyNNC+OAutJqgZOMSBtq89KbkF6AP7M9RTOaDa
JlkQV4kuk/bQqOJAflzOB3IAvVjnVYw8CY3BiutNP6DbfAT79UgYdE/wXzON
fqam0rWNhPVbQnuWKD4AoklvAdeDhDt/s5+00tFDk2PxF0l4aRP3MXU7+jlh
wC0lYbKkRtXOEe3yuet6LQmmf5p7S/zRumdiP3SR4NYXkZAQhhZoNvaMkBC1
vbyIE4MeM7PkfiXh3rKNk3Wn0bA+7C9FCl4f/l0z9gK6yuFklzYFX3uvMawK
0XrF8UFrKTC78VNKpQj9crhdAyhwU/IpjZSgS04fM/uZgqiovPZtf6GPEw86
HSmo5CzXLRtCD85eLfGl4M11VzL0M7rs6ZXu3ymYop0J3DCLnujrTwunYHnk
87RRmQYgLhXTHv5JgUW3QsX1ZeizZ15EH6NgD3vnmwAddNZo550kCo5cOzln
sBZtN94WdoqCcwqSnwaM0Yxu79IMCqoOLdpRYI3ubjIJycL8TlaI98/ogNrp
khzMZ/IEK7hoqUaPkIuYXyiq7PZEF9RJlRZQYCk/3XN+P1ojPStUSMHecLOF
e8LRC2eaSwspiH5zaK16LLq1mh16nYIcxu1dL5PRlYeLS4ooqBZ+OCgQoMWS
sqAbFHQt3ZDtmDfvDbNC9ExYUA3tOnrnCgsvtFZH4bun5eibM7SzeN4KBmVS
a9HS6ka2WN/ziv4G22b0iltm0Zh/VNbbaXE7OnWyey32l/tHbpS4F31mkdgJ
+6951XkhfgRtPHLhWx4FPVYaDeyJ+fvkLdXE+88WuAxJEY1A5MuJ7p6lQGeJ
QK5uCbpbzr31NAXWoW1bjqqgj/ud9E7F/JfybnRd9MSTqeBEzKfbxUwZos0G
nMZ5FNTKiMURDPRhX7/gMAreHlj431Zb9I3qsF8DKSDamUqfndFK1+SavSlg
5FfvDQlCR3sLftxNgdePU3FGEeiojOcdHAp4waZX/+WhBas4+hYU1JmXffTP
RJMR+5brY/28MVWD/Hkr+ItVsb60Eb2/CG0sgpHFFDCfX03wqkf72Wmkvyfh
QeAFTfdR9N1lPY63SLg9HBTkOYkuTQmS5JNwOcDi/m/EQyBqKvwa/kdCvN+r
PQeU0dnKyTahJNj4KJ47TkdzGm4mribBvK93OIlCD77v0lUmwdCrxPyUPdrK
g25FkLDU07Yjyxf9HA7OvuRAq3u8egkf7Wb/z7mjHKh77RRwOxPdMPmE9OdA
qavevXsX0akqwj92c+C0c61rQzn6kLuSrQ4HXBy+Zb7uQotc/pupYEOXTbDK
D0ZN2H+fk3YLC1rElvtkTNH785MrillQQy2pkGOie7eua05lQR7nKlfdGe2i
csrfjgU+jL4Moxj0x8PtgQ1MGDJ1VnJrQY9s4TplMaDjjr7PL6/Qnb5TaaEM
aN726ZZPH/oqPZJjw4Ai4zSH4Am0W9D51aMABzY+Sj+mLcb3C76VmGkNEwZW
CsXB6OjLeg53LcH6b5b4ZBSa569ns8sSEi7YxAYcR5/49cvndxagqswd089G
00JX+8tagIlUUOu5RjSDeijcYQZRnVlpSZoS/C9nCt4lb4W6zNztfgboIcOg
p7JbQcbx8hx7M/oTk+bDN4Zsyc2QOQpdrvGRl7wFqiqadkeEofkpY4kHN8FM
2riC7yO05MQ7vaVrgGM7JWa+QNs7vPLsNwC+NMFb0YtOCrZ9UbkKtGNkP7wZ
R3N1zu/bqw/WgXrPHHQfAVFHGr6f04KEVWuSNq5Dy5wTFB5fDk/fGjHkTNBJ
g8kiKXXwdDUvldiin/3QOjKqBEIlCBC6oGlaUzPuNHjfwtE94Y1mRLRUHZOF
WI59OkSidZsDvn0nQDLnbKN9bD7P/mY794s17b4HMc2f35/B5xkNW6stoK4Z
pM2vdzTu6u63/j8lyteD
        "]], LineBox[CompressedData["
1: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
Kg==
        "]], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1: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
Ty+vl6WrOCAGoNkewZtbnj+l0RyxAv4PXVY/dg==
        "]], LineBox[CompressedData["
1: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
4/KEXJzvF1AnC/8Hov0TDg==
        "]], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1: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
N/zc8b+JrfB/1GtZog==
        "]], LineBox[CompressedData["
1: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
KnogHK5dYfQUWbggwy7QhP8DqLo9zQ==
        "]], LineBox[CompressedData["
1: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
nqeKcA==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$89552#1"]& ], {}}, {{}, {}}, {{}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.0910558636565981`*^-10},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Error\"", TraditionalForm],
  PlotRange->{{0, 1}, {1.0910558636565981`*^-10, 0.012143439805057138`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.828847553003038*^9, 3.8288487362999163`*^9, 
  3.8288487726928015`*^9, 3.8288488505060186`*^9, 3.829233553246866*^9, 
  3.829233646571884*^9, 3.829234218646147*^9, 3.8292367853217616`*^9},
 CellLabel->
  "Out[607]=",ExpressionUUID->"e1c8d8be-b8d7-452a-b6fc-483c889563ab"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
     AbsoluteThickness[1.6], 
     PointBox[{{1., 0.}, {2., 6.938893903907228*^-17}, {3., 
      1.1102230246251565`*^-16}, {4., 1.6653345369377348`*^-16}, {5., 
      1.6653345369377348`*^-16}, {6., 1.6653345369377348`*^-16}, {7., 
      1.6653345369377348`*^-16}, {8., 2.220446049250313*^-16}, {9., 
      2.220446049250313*^-16}, {10., 1.6653345369377348`*^-16}, {11., 
      3.0178990733754015`*^-16}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
      AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
      AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Error of the FEM method compared with the exact sol\"", TraditionalForm],
  PlotRange->{{0., 11.}, {0, 3.0178990733754015`*^-16}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.828847553003038*^9, 3.8288487362999163`*^9, 
  3.8288487726928015`*^9, 3.8288488505060186`*^9, 3.829233553246866*^9, 
  3.829233646571884*^9, 3.829234218646147*^9, 3.8292367853661747`*^9},
 CellLabel->
  "Out[609]=",ExpressionUUID->"b7883e40-112b-407d-96bd-0e23fb646e82"],

Cell[BoxData["4.440892098500626`*^-16"], "Output",
 CellChangeTimes->{3.828847553003038*^9, 3.8288487362999163`*^9, 
  3.8288487726928015`*^9, 3.8288488505060186`*^9, 3.829233553246866*^9, 
  3.829233646571884*^9, 3.829234218646147*^9, 3.8292367853776255`*^9},
 CellLabel->
  "Out[610]=",ExpressionUUID->"1b72d288-d7ae-49e6-bb64-3182cd3ab143"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "approximate", " ", "solution", " ", "using", " ", "FD", " ", "method", 
    " ", "for", " ", "elliptic", " ", "problem"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"t2", "=", 
     RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]x", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xx", "[", "j_", "]"}], ":=", " ", 
     RowBox[{"j", " ", "\[CapitalDelta]x"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BB", ":=", " ", 
     RowBox[{"BB", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"fun", "[", 
         RowBox[{"xx", "[", "i", "]"}], "]"}], " ", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "M"}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"A", ":=", " ", 
     RowBox[{"A", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
            RowBox[{"i", "==", 
             RowBox[{"j", "+", "1"}]}]}], "\[Rule]", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"M", ",", "M"}], "}"}]}], "]"}], " ", "+", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
            RowBox[{"i", "==", 
             RowBox[{"j", "-", "1"}]}]}], "\[Rule]", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"M", ",", "M"}], "}"}]}], "]"}], " ", "+", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
            RowBox[{"i", "==", "j"}]}], "\[Rule]", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"M", ",", "M"}], "}"}]}], "]"}]}], "//", "Normal"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Anew", " ", "=", " ", 
     RowBox[{"A", " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]x", "^", "2"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"X", "[", "j", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "M"}], "}"}]}], "]"}]}], " ", ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sol1", " ", "=", " ", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Anew", ".", " ", "XX"}], " ", "\[Equal]", " ", "BB"}], ",", 
       " ", "XX"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX1", " ", "=", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"XX", " ", "/.", " ", "Sol1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX1", " ", "=", " ", 
     RowBox[{"Prepend", "[", 
      RowBox[{"XX1", ",", "0"}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX1", " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{"XX1", ",", "0"}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"Plot3", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[CapitalDelta]x", " ", "j"}], ",", " ", 
          RowBox[{"XX1", "[", 
           RowBox[{"[", 
            RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{"M", "+", "1"}]}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"Joined", "\[Rule]", " ", "True"}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\< \>\""}], "}"}]}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Dashed", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<FD approximation\>\"", "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t3", "=", 
     RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\<time\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{"tFD", "=", 
    RowBox[{"t3", "-", "t2"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.8288473147056723`*^9, {3.828847900550548*^9, 3.8288479008942113`*^9}},
 CellLabel->
  "In[611]:=",ExpressionUUID->"b734b7e4-7176-49ea-9283-d34e22792ddd"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]], 
        LineBox[{{0., 0.}, {0.09090909090909091, 0.0900415473438214}, {
         0.18181818181818182`, 0.17753984211229012`}, {0.2727272727272727, 
         0.25930371114874073`}, {0.36363636363636365`, 0.3313781784104884}, {
         0.45454545454545453`, 0.3889109101748317}, {0.5454545454545454, 
         0.42599853233981977`}, {0.6363636363636364, 0.43551004366598745`}, {
         0.7272727272727273, 0.40888418797866655`}, {0.8181818181818182, 
         0.33589724258794545`}, {0.9090909090909091, 0.20439722406659397`}, {
         1., 0.}}]}}, {{
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 1, 0], 
                 Dashing[{Small, Small}], 
                 PointSize[Large]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[6.272]], {{{0., 0.}}, {{0.09090909090909091, 
         0.0900415473438214}}, {{0.18181818181818182`, 
         0.17753984211229012`}}, {{0.2727272727272727, 
         0.25930371114874073`}}, {{0.36363636363636365`, 
         0.3313781784104884}}, {{0.45454545454545453`, 
         0.3889109101748317}}, {{0.5454545454545454, 
         0.42599853233981977`}}, {{0.6363636363636364, 
         0.43551004366598745`}}, {{0.7272727272727273, 
         0.40888418797866655`}}, {{0.8181818181818182, 
         0.33589724258794545`}}, {{0.9090909090909091, 
         0.20439722406659397`}}, {{1., 0.}}}]}}, {{
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]]}, {}}, {{
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\" \"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 0.43551004366598745`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"FD approximation\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    LineBox[{{0, 6.272}, {40, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                 RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{
                   GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                   RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.82884755345662*^9, 3.8288479016900816`*^9, 
  3.8288487365029974`*^9, 3.828848772958363*^9, 3.829233553450376*^9, 
  3.8292336469609356`*^9, 3.8292342188476243`*^9, 3.8292367854974546`*^9},
 CellLabel->
  "Out[622]=",ExpressionUUID->"01484adb-8a50-46c2-b4ea-ad13d9090f07"],

Cell[BoxData["\<\"time\"\>"], "Print",
 CellChangeTimes->{3.828847553487862*^9, 3.8288479017213244`*^9, 
  3.828848736518614*^9, 3.828848772973985*^9, 3.8292335534663014`*^9, 
  3.8292336469768934`*^9, 3.829234218866394*^9, 3.829236785505492*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[611]:=",ExpressionUUID->"d9c5b4f7-3e86-4b8e-a293-708f525a3079"],

Cell[BoxData["0.09399999999999409`"], "Output",
 CellChangeTimes->{3.82884755345662*^9, 3.8288479016900816`*^9, 
  3.8288487365029974`*^9, 3.828848772958363*^9, 3.829233553450376*^9, 
  3.8292336469609356`*^9, 3.8292342188476243`*^9, 3.8292367855065126`*^9},
 CellLabel->
  "Out[625]=",ExpressionUUID->"be375ca8-bce7-4ce3-8066-dede5ea3fa04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DiscreteError2", "[", "i_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Uexact", "[", 
    RowBox[{"x", "[", "i", "]"}], "]"}], "-", 
   RowBox[{"Sol1", "[", 
    RowBox[{"x", "[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DiscreteError2", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "Medium", "]"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Error of the FD method compared with the exact sol\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8288489086509104`*^9, 3.828848955398558*^9}},
 CellLabel->
  "In[626]:=",ExpressionUUID->"ab8be647-0980-4b30-838c-ac15cec1e703"],

Cell[BoxData[
 GraphicsBox[{{}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Error of the FD method compared with the exact sol\"", TraditionalForm],
  PlotRange->{{-1, 1}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8288489585198135`*^9, 3.8292335535947065`*^9, 
  3.8292336470840597`*^9, 3.8292342189761195`*^9, 3.8292367856074257`*^9},
 CellLabel->
  "Out[627]=",ExpressionUUID->"b674f2c9-bf70-47d3-942c-2c4e9acfb89a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{"Plot2", ",", "Plot3", ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Comparisson between FEM and FD\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"Plot1", ",", "Plot2", ",", "Plot3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.828231723414839*^9, 3.828231886861524*^9}, {
  3.8282320663165827`*^9, 3.828232083637076*^9}, {3.8286049267019076`*^9, 
  3.828604953270855*^9}, {3.828605020761801*^9, 3.82860505425817*^9}, {
  3.8288469529861317`*^9, 3.8288469685910997`*^9}, {3.8288471935842795`*^9, 
  3.8288473083863397`*^9}, {3.8288475409143333`*^9, 3.82884754252724*^9}, {
  3.828847986866252*^9, 3.828848001689669*^9}},
 CellLabel->
  "In[628]:=",ExpressionUUID->"c956c80c-bbcf-4c6b-8113-f0cc7c90fa97"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]], 
         PointBox[{{0., 0.}, {0.1, 0.09946538262680824}, {0.2, 
          0.19542444130562708`}, {0.30000000000000004`, 0.2834703495909605}, {
          0.4, 0.3580379274339047}, {0.5, 0.4121803176750319}, {0.6, 
          0.43730851209372196`}, {0.7, 0.4228880685687999}, {
          0.7999999999999999, 0.3560865485587947}, {0.8999999999999999, 
          0.22136428000412545`}, {0.9999999999999999, 0.}}]}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]], 
         LineBox[{{0., 0.}, {0.09090909090909091, 0.0900415473438214}, {
          0.18181818181818182`, 0.17753984211229012`}, {0.2727272727272727, 
          0.25930371114874073`}, {0.36363636363636365`, 0.3313781784104884}, {
          0.45454545454545453`, 0.3889109101748317}, {0.5454545454545454, 
          0.42599853233981977`}, {0.6363636363636364, 0.43551004366598745`}, {
          0.7272727272727273, 0.40888418797866655`}, {0.8181818181818182, 
          0.33589724258794545`}, {0.9090909090909091, 0.20439722406659397`}, {
          1., 0.}}]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 1, 0], 
                  Dashing[{Small, Small}], 
                  PointSize[Large]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[6.272]], {{{0., 0.}}, {{0.09090909090909091, 
          0.0900415473438214}}, {{0.18181818181818182`, 
          0.17753984211229012`}}, {{0.2727272727272727, 
          0.25930371114874073`}}, {{0.36363636363636365`, 
          0.3313781784104884}}, {{0.45454545454545453`, 
          0.3889109101748317}}, {{0.5454545454545454, 
          0.42599853233981977`}}, {{0.6363636363636364, 
          0.43551004366598745`}}, {{0.7272727272727273, 
          0.40888418797866655`}}, {{0.8181818181818182, 
          0.33589724258794545`}}, {{0.9090909090909091, 
          0.20439722406659397`}}, {{1., 0.}}}]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]]}, {}}}, {{}, {}}}}, {
    PlotLabel -> 
     FormBox["\"Comparisson between FEM and FD\"", TraditionalForm], 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Approximated solution using FEM\"", TraditionalForm], 
     PlotRange -> {{0, 0.9999999999999999}, {0, 0.43730851209372196`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"FEM\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"FD approximation\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    LineBox[{{0, 6.272}, {40, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8288462785506506`*^9, 3.828846589796199*^9, 
  3.828846972741257*^9, 3.828847553597246*^9, 3.8288479068789673`*^9, 
  3.8288480024705596`*^9, 3.828848736627962*^9, 3.828848773098956*^9, 
  3.8292335537030354`*^9, 3.829233647239768*^9, 3.829234219077635*^9, 
  3.829236785696637*^9},
 CellLabel->
  "Out[628]=",ExpressionUUID->"f5542c43-3315-4a79-acfe-9e5a62903e5c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwt1nlYTdsbB/AoShElQ4OSdK8GhORm6GsIjRQllUKiZGySUshVkcqUpEGo
pIHShEYlIqV5OrvhnLP3OUXDCY0qfus+z++v9/k85zlrr/Wuvb5rKzuc2XN0
qpCQkMQUIaH/qtHR7tq3Xy31DP5fRbbJne2U1cYy342H/qtr4iJjsmT14VSj
ZPdfNa5qzoyVtcD79e3ZMaRaOY4U3pF1xNh7vfdhpLavDNoWKusBuzoxGz9S
H83bHRgsexXU6NRUI1L9xbL+vi4bjoGgnzOvLQzHfuvH6QPfE6Dt5Ljboi8B
En/8D+xUTId3+r4bg5LpUDXv7353IxuFHCdVxjsbXl90ETn4BjWrnppK1LzB
gmypjilTiuE00KHMKSlCLndbZfXGUiTGewWlipWi1CVW3rq3DDfOfNP2iynD
0F+bZj8/VY45uR1zpSY+YOpY6hx51Qo8Uw5M7b/6CTp/DuXufVEJH9ULfcIt
n1F5VfvLB/VqRDirqCvIfIHSrZ6x5P4anA6PfGatW4Oekc6ORq066PLnS46b
1CLhW36FZFg9lgSpqbNO10FyUZKAYRqwweNw1iX/eoQczzn2aGkTWo2ShHu9
GjC8OZVxvtQMkX8H18Z5NcJjdVn2/HctuKcyU8/XpgmdL8pu1CqzcNa7PX//
1maMuzREq/lQYKvyijLnt0Bji+jvY/ltmPHSO2TOlxbsfKLs9HJBB5inJ3bf
+bcVXosOLuEc6ISjk65sjDwLmr2WEs2mbKzrz3qgGcfCawuT4mAzNqbJnojB
Yxa2FW5119vLRoOwwjbzeBZswlZSifvZaDfv8zmbxMJ1rRmpHkfYqCttvf4w
nQW+R4GRtDcbYZHCta+LWXg0uSTYNIGNomsBDnQHC3NnD4iV/WJjf8Ms4/GF
FOoKg4MMJ9kYKTrRFSFH4c5J1enVf9gIyb+CVQoUpCtshFkiHNyRi1R2UCIO
eD8pkOTAvu9KQrYqhTnjUT/kVTgwO7HVXmE1hZld29vcjTlY7zrz2KAhhcp7
bJsxUw4i9hdTx4wphOhfaL1oxkGrwuDUFhMKEk8ymq5bcrCrN9IxdzcFcTv5
2riDHOhHlZ04YklBrH7g/Wd3DhSzFm+5eIiCSHF0ukoMB8kyCiXZnhRYG/UN
Oh9y4CJ3S3uhF4X0vF521GMOrMMapH3OU7DJ3SQtncTB9I/KkroXKLx83ukh
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
4ym9/wH+n4sk
           "]]}, 
         Annotation[#, "Charting`Private`Tag$89400#1"]& ]}}, {}}, {{}, {{{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]], 
         PointBox[{{0., 0.}, {0.1, 0.09946538262680824}, {0.2, 
          0.19542444130562708`}, {0.30000000000000004`, 0.2834703495909605}, {
          0.4, 0.3580379274339047}, {0.5, 0.4121803176750319}, {0.6, 
          0.43730851209372196`}, {0.7, 0.4228880685687999}, {
          0.7999999999999999, 0.3560865485587947}, {0.8999999999999999, 
          0.22136428000412545`}, {0.9999999999999999, 0.}}]}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]], 
         LineBox[{{0., 0.}, {0.09090909090909091, 0.0900415473438214}, {
          0.18181818181818182`, 0.17753984211229012`}, {0.2727272727272727, 
          0.25930371114874073`}, {0.36363636363636365`, 0.3313781784104884}, {
          0.45454545454545453`, 0.3889109101748317}, {0.5454545454545454, 
          0.42599853233981977`}, {0.6363636363636364, 0.43551004366598745`}, {
          0.7272727272727273, 0.40888418797866655`}, {0.8181818181818182, 
          0.33589724258794545`}, {0.9090909090909091, 0.20439722406659397`}, {
          1., 0.}}]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 1, 0], 
                  Dashing[{Small, Small}], 
                  PointSize[Large]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[6.272]], {{{0., 0.}}, {{0.09090909090909091, 
          0.0900415473438214}}, {{0.18181818181818182`, 
          0.17753984211229012`}}, {{0.2727272727272727, 
          0.25930371114874073`}}, {{0.36363636363636365`, 
          0.3313781784104884}}, {{0.45454545454545453`, 
          0.3889109101748317}}, {{0.5454545454545454, 
          0.42599853233981977`}}, {{0.6363636363636364, 
          0.43551004366598745`}}, {{0.7272727272727273, 
          0.40888418797866655`}}, {{0.8181818181818182, 
          0.33589724258794545`}}, {{0.9090909090909091, 
          0.20439722406659397`}}, {{1., 0.}}}]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Exact Solution\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {0., 0.4379714589603302}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact solution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"FEM\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"FD approximation\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    LineBox[{{0, 6.272}, {40, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8288462785506506`*^9, 3.828846589796199*^9, 
  3.828846972741257*^9, 3.828847553597246*^9, 3.8288479068789673`*^9, 
  3.8288480024705596`*^9, 3.828848736627962*^9, 3.828848773098956*^9, 
  3.8292335537030354`*^9, 3.829233647239768*^9, 3.829234219077635*^9, 
  3.8292367857861443`*^9},
 CellLabel->
  "Out[629]=",ExpressionUUID->"588635a2-2924-49ff-bdf4-71934cf52129"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"We", " ", "do", " ", "FD", " ", "with", " ", "n"}], " ", "=", 
    " ", "20"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"t4", "=", 
     RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M2", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]x2", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"M2", "+", "1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xx2", "[", "j_", "]"}], ":=", " ", 
     RowBox[{"j", " ", "\[CapitalDelta]x2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fun2", "[", "y_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", "y"}], "+", 
       RowBox[{"y", "^", "2"}]}], ")"}], 
     RowBox[{"Exp", "[", "y", "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BB2", ":=", " ", 
     RowBox[{"BB2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"fun2", "[", 
         RowBox[{"xx2", "[", "i", "]"}], "]"}], " ", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "M2"}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"A2", ":=", " ", 
     RowBox[{"A2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
            RowBox[{"i", "==", 
             RowBox[{"j", "+", "1"}]}]}], "\[Rule]", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"M2", ",", "M2"}], "}"}]}], "]"}], " ", "+", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
            RowBox[{"i", "==", 
             RowBox[{"j", "-", "1"}]}]}], "\[Rule]", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"M2", ",", "M2"}], "}"}]}], "]"}], " ", "+", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
            RowBox[{"i", "==", "j"}]}], "\[Rule]", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"M2", ",", "M2"}], "}"}]}], "]"}]}], "//", 
       "Normal"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Anew2", " ", "=", " ", 
     RowBox[{"A2", " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]x2", "^", "2"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"X", "[", "j", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "M2"}], "}"}]}], "]"}]}], " ", ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sol12", " ", "=", " ", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Anew2", ".", " ", "XX2"}], " ", "\[Equal]", " ", "BB2"}], 
       ",", " ", "XX2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX12", " ", "=", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"XX2", " ", "/.", " ", "Sol12"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX12", " ", "=", " ", 
     RowBox[{"Prepend", "[", 
      RowBox[{"XX12", ",", "0"}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX12", " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{"XX12", ",", "0"}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"Plot4", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[CapitalDelta]x2", " ", "j"}], ",", " ", 
          RowBox[{"XX12", "[", 
           RowBox[{"[", 
            RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{"M2", "+", "1"}]}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"Joined", "\[Rule]", " ", "True"}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\< \>\""}], "}"}]}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Dashed", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<FD approximation\>\"", "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<FD approximation n = 20\>\""}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t5", "=", 
     RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"time", "=", 
    RowBox[{"t5", "-", "t4"}]}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.829233289187527*^9, 3.8292333246965303`*^9}, {
   3.829233355607313*^9, 3.82923337538793*^9}, {3.829233433126519*^9, 
   3.829233536997501*^9}, {3.829233581901306*^9, 3.8292336055277357`*^9}, 
   3.8292336994275928`*^9, {3.82923377682633*^9, 3.829233790227504*^9}, {
   3.8292339079964914`*^9, 3.829233912246436*^9}, 3.829234183556448*^9, {
   3.829236756627492*^9, 3.829236773036598*^9}},
 CellLabel->
  "In[630]:=",ExpressionUUID->"661ce187-5ff0-4ced-967d-f3b5b21f0a79"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQjQ4k2hKBaIW98JbynVqBK+wh/B32fP8Op/RY7bCf
pOIJRIfsNxvaSWjxHYLKn7CPmHxSfNKN4/bznlcC0Tn70jjG6xE5Z6HqL9m3
uqY92R590T4UDK7at3uc/Hnz0mWo/hv2/1Vvb44XuGZ/e1suCNlHFatNvc1+
A2rePXvOIstVXatv2hvyHDbgOfzAvr9260TzN7eg5j+yn3dmdoT0ztv2X2zO
f7Y5/9g+TtaPZc//21D7ntqvKDdceGL1bfvtYOOf2TOc0F/1adktqP0v7Mv0
K2YduXHDvgps4Uv7S1cvlZeqwdzz2n4y40KFnUWX7G1Bxn9+Y38+J8VLyvo0
1H3v7FvP7D/ILrDPHhKKH+xh4QkABPKiCw==
         "]]}}, {{
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 1, 0], 
                 Dashing[{Small, Small}], 
                 PointSize[Large]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[6.272]], CompressedData["
1:eJxTTMoPSmVmYGAQA2JGIGZiwAQSbYlAtMJeeEv5Tq3AFfYQ/g57vn+HU3qs
dthPUvEEokP2mw3tJLT4DkHlT9hHTD4pPunGcft5zyuB6Jx9aRzj9Yics1D1
l+xbXdOebI++aB8KBlft2z1O/rx56TJU/w37/6q3N8cLXLO/vS0XhOyjitWm
3ma/ATXvnj1nkeWqrtU37Q15DhvwHH5g31+7daL5m1tQ8x/ZzzszO0J65237
LzbnP9ucf2wfJ+vHsuf/bah9T+1XlBsuPLH6tv12sPHP7BlO6K/6tOwW1P4X
9mX6FbOO3LhhXwW28KX9pauXykvVYO55bT+ZcaHCzqJL9rYg4z+/sT+fk+Il
ZX0a6r539q1n9h9kF9hnDwnFD/aw8AQADtKiDQ==
         "]]}}, {{
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]]}, {}}, {{
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\" \"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"FD approximation n = 20\"", TraditionalForm], 
     PlotRange -> {{0, 1.}, {0, 0.43748379154609107`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"FD approximation\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    LineBox[{{0, 6.272}, {40, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                 RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{
                   GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                   RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.829233913046373*^9, 3.8292339365177155`*^9}, 
   3.829234184200879*^9, 3.82923421945679*^9, 3.829236786037294*^9},
 CellLabel->
  "Out[642]=",ExpressionUUID->"423a03de-0ef3-4830-9425-61766c1f331f"],

Cell[BoxData["0.1560000000000059`"], "Output",
 CellChangeTimes->{{3.829233913046373*^9, 3.8292339365177155`*^9}, 
   3.829234184200879*^9, 3.82923421945679*^9, 3.8292367860573125`*^9},
 CellLabel->
  "Out[644]=",ExpressionUUID->"2e6c9705-bb4d-4804-be0f-2953817ff263"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Plot2", ",", "Plot4", ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Comparison between FD and FEM using n=20\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82923419664259*^9, 3.829234245155397*^9}},
 CellLabel->
  "In[645]:=",ExpressionUUID->"580b00be-acb7-4354-98be-e249e3d62521"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]], 
         PointBox[{{0., 0.}, {0.1, 0.09946538262680824}, {0.2, 
          0.19542444130562708`}, {0.30000000000000004`, 0.2834703495909605}, {
          0.4, 0.3580379274339047}, {0.5, 0.4121803176750319}, {0.6, 
          0.43730851209372196`}, {0.7, 0.4228880685687999}, {
          0.7999999999999999, 0.3560865485587947}, {0.8999999999999999, 
          0.22136428000412545`}, {0.9999999999999999, 0.}}]}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQjQ4k2hKBaIW98JbynVqBK+wh/B32fP8Op/RY7bCf
pOIJRIfsNxvaSWjxHYLKn7CPmHxSfNKN4/bznlcC0Tn70jjG6xE5Z6HqL9m3
uqY92R590T4UDK7at3uc/Hnz0mWo/hv2/1Vvb44XuGZ/e1suCNlHFatNvc1+
A2rePXvOIstVXatv2hvyHDbgOfzAvr9260TzN7eg5j+yn3dmdoT0ztv2X2zO
f7Y5/9g+TtaPZc//21D7ntqvKDdceGL1bfvtYOOf2TOc0F/1adktqP0v7Mv0
K2YduXHDvgps4Uv7S1cvlZeqwdzz2n4y40KFnUWX7G1Bxn9+Y38+J8VLyvo0
1H3v7FvP7D/ILrDPHhKKH+xh4QkABPKiCw==
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 1, 0], 
                  Dashing[{Small, Small}], 
                  PointSize[Large]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[6.272]], CompressedData["
1:eJxTTMoPSmVmYGAQA2JGIGZiwAQSbYlAtMJeeEv5Tq3AFfYQ/g57vn+HU3qs
dthPUvEEokP2mw3tJLT4DkHlT9hHTD4pPunGcft5zyuB6Jx9aRzj9Yics1D1
l+xbXdOebI++aB8KBlft2z1O/rx56TJU/w37/6q3N8cLXLO/vS0XhOyjitWm
3ma/ATXvnj1nkeWqrtU37Q15DhvwHH5g31+7daL5m1tQ8x/ZzzszO0J65237
LzbnP9ucf2wfJ+vHsuf/bah9T+1XlBsuPLH6tv12sPHP7BlO6K/6tOwW1P4X
9mX6FbOO3LhhXwW28KX9pauXykvVYO55bT+ZcaHCzqJL9rYg4z+/sT+fk+Il
ZX0a6r539q1n9h9kF9hnDwnFD/aw8AQADtKiDQ==
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]]}, {}}}, {{}, {}}}}, {
    PlotLabel -> 
     FormBox["\"Comparison between FD and FEM using n=20\"", TraditionalForm],
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Approximated solution using FEM\"", TraditionalForm], 
     PlotRange -> {{0, 0.9999999999999999}, {0, 0.43730851209372196`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"FEM\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"FD approximation\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    LineBox[{{0, 6.272}, {40, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8292342110268373`*^9, 3.8292342462577305`*^9}, 
   3.8292367861575284`*^9},
 CellLabel->
  "Out[645]=",ExpressionUUID->"a1b43c1d-3fe9-47f6-be5f-e14cc4e341bf"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["f(x) = sin(x)exp(x)",
 FontWeight->"Bold",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Subsubsection",
 CellChangeTimes->{{3.8282321268095703`*^9, 3.8282321368382998`*^9}, {
  3.8282438709704084`*^9, 
  3.828243871220134*^9}},ExpressionUUID->"7d734945-57b0-47a6-9294-\
72a3fd38c0a8"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t0", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ax", "[", "y_", "]"}], ":=", "1"}], "\n", 
 RowBox[{
  RowBox[{"fun", "[", "y_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Sin", "[", "y", "]"}], 
   RowBox[{"Exp", "[", "y", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"u0", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Deltax", "=", 
   RowBox[{"N", "[", 
    RowBox[{"1", "/", "n"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "0", "]"}], " ", "=", " ", "0"}], ";"}]}], "Input",
 CellLabel->
  "In[493]:=",ExpressionUUID->"6d498f28-336d-4781-9435-9a6f7fc399cb"],

Cell[BoxData[{
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"i", "++"}], ",", " ", 
   RowBox[{
    RowBox[{"x", "[", "i", "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"i", "-", "1"}], "]"}], "+", "Deltax"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vlin", "[", " ", 
   RowBox[{"k_", ",", "y_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"y", "-", 
           RowBox[{"x", "[", 
            RowBox[{"k", "-", "1"}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", "k", "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"k", "-", "1"}], "]"}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"k", "-", "1"}], "]"}], "\[LessEqual]", " ", "y", " ", 
         "\[LessEqual]", " ", 
         RowBox[{"x", "[", "k", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"k", "+", "1"}], "]"}], "-", "y"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"k", "+", "1"}], "]"}], "-", 
           RowBox[{"x", "[", "k", "]"}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", "k", "]"}], "\[LessEqual]", " ", "y", " ", 
         "\[LessEqual]", " ", 
         RowBox[{"x", "[", 
          RowBox[{"k", "+", "1"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "  ", 
        RowBox[{"y", " ", "<", " ", 
         RowBox[{"x", "[", 
          RowBox[{"k", "-", "1"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "  ", 
        RowBox[{"y", " ", ">", " ", 
         RowBox[{"x", "[", 
          RowBox[{"k", "+", "1"}], "]"}]}]}], "}"}]}], "}"}], "]"}], 
   "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"vlin", "[", 
   RowBox[{"n", ",", "y_"}], "]"}], ":=", "  ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"y", "-", 
           RowBox[{"x", "[", 
            RowBox[{"n", "-", "1"}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", "n", "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"n", "-", "1"}], "]"}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"n", "-", "1"}], "]"}], "\[LessEqual]", " ", "y", " ", 
         "\[LessEqual]", " ", 
         RowBox[{"x", "[", "n", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "  ", 
        RowBox[{"y", " ", "<", " ", 
         RowBox[{"x", "[", 
          RowBox[{"n", "-", "1"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "  ", 
        RowBox[{"y", " ", ">", " ", 
         RowBox[{"x", "[", "n", "]"}]}]}], "}"}]}], "}"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dvlin", "[", 
    RowBox[{"j_", ",", "y_"}], "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"vlin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], ",", "y"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dvlin", "[", 
    RowBox[{"n", ",", "y_"}], "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"vlin", "[", 
      RowBox[{"n", ",", "y"}], "]"}], ",", "y"}], "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[501]:=",ExpressionUUID->"d4147650-af16-42e3-9d2f-e9e5b208b357"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"j", "=", "1"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"j", "++"}], ",", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"j_", ",", "y_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"vlin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], "/;", "  ", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"j", ",", "1"}], "]"}], "\[Equal]", "0"}]}]}]}], "]"}], "\n", 
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"j", "=", "1"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"j", "++"}], ",", 
   RowBox[{
    RowBox[{"dv", "[", 
     RowBox[{"j_", ",", "y_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"dvlin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], "/;", "  ", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"j", ",", "1"}], "]"}], "\[Equal]", "0"}]}]}]}], "]"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"v", " ", "[", 
      RowBox[{"1", ",", "y"}], "]"}], ",", 
     RowBox[{"dv", "[", 
      RowBox[{"1", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\n", 
 RowBox[{"Do", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"i", ",", "j"}], "]"}], " ", "=", " ", 
    RowBox[{"N", "[", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{"ax", "[", "s", "]"}], " ", 
       RowBox[{"dv", "[", 
        RowBox[{"j", ",", "s"}], "]"}], "  ", 
       RowBox[{"dv", "[", 
        RowBox[{"i", ",", "s"}], "]"}], 
       RowBox[{"\[DifferentialD]", "s"}]}]}], " ", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"n", "-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", 
     RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"AA", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"i", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"n", "-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Det", "[", "AA", "]"}], ";"}], "\n", 
 RowBox[{"Do", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"b", "[", "j", "]"}], " ", "=", 
    RowBox[{"N", "[", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{"fun", "[", "s", "]"}], " ", 
       RowBox[{"v", "[", 
        RowBox[{"j", ",", "s"}], "]"}], 
       RowBox[{"\[DifferentialD]", "s"}]}]}], " ", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", 
     RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"ff", "=", 
   RowBox[{"Array", "[", 
    RowBox[{"b", ",", 
     RowBox[{"n", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "%", "]"}], ";"}]}], "Input",
 CellLabel->
  "In[506]:=",ExpressionUUID->"0e62b4eb-48ff-40c3-89eb-c2235f22af1d"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAASmXo0cDpVT6cfmIGMWSLPgRDGnDf
GTQ/xdMgTFcgaT8zn5icsxlEPwDHvoMgIHk/S83Xsp0ZVD+ewI0fBSCJP1dk
972SGWQ/bT11bfcfmT/dL4dDjRl0P9T7aJTwH6k/oBVPhooZhD8I2+In7R+5
P4EIsyeJGZQ/ocqfcesfyT9YWaGv8PGkP66vidtsLto/C/+BXEcerz9nP9GZ
7HLjPyVR7ujDi7Q/buUp47Su6T8af0c6Z6G0P+Be2QjByek/EK2giwq3tD9U
2IguzeTpP/oIUy5R4rQ/OMvneeUa6j/QwLdz3ji1PwSxpRAWh+o/ejCB/vjl
tT+YfCE+d1/rP29e2k+c+7U/C/bQY4N66z9kjDOhPxG2P31vgImPles/T+jl
Q4Y8tj9jYt/Up8vrPySgSokTk7Y/LUida9g37D/ODxQULkC3P8ITGZk5EO0/
wz1tZdFVtz80jci+RSvtP7hrxrZ0a7c/pgZ45FFG7T+jx3hZu5a3P4z51i9q
fO0/eH/dnkjttz9W35TGmujtP22tNvDrArg/yFhE7KYD7j9i249Bjxi4PzrS
8xGzHu4/TTdC5NVDuD8gxVJdy1TuPyLvpiljmrg/6qoQ9PvA7j8XHQB7BrC4
P10kwBkI3O4/DEtZzKnFuD/PnW8/FPfuP/emC2/w8Lg/tZDOiiwt7z/s1GTA
kwa5PycKfrA4SO8/4gK+ETccuT+agy3WRGPvP8xecLR9R7k/f3aMIV2Z7z/C
jMkFIV25P/LvO0dptO8/t7oiV8RyuT9laetsdc/vP5Vq8rizhLk/OgUvp+Dl
7z/6yy1s
        "]], LineBox[CompressedData["
1:eJwViX1QiwEAh1dEpytiPgupM4Uyx5lF/RYzI4d1K6W7jmhNSV30oZNFms5N
+ehYXYRLhLJDss2YbHvft6yW05ekdOVzenPNx01M/njuueeeBfGpEQnODAaD
PcZ/V5C8HFmtGsEuy270DdK4yA8Kr72vBn/xBF9JLw1F+slyEaXGS1XUaIyB
RlYzF0qbGlbdT1VYEQ2PoLpBylWDNHnPlXEZNCpPsxW/vTWwbX1+xhhLo3XL
oq64DRqM9halbQqgsaSJeXDhBQ3cnFlskWEIvQRddY+jxWKB+O4u+1dsfHbd
w5zzGNJmVY1MYsXMB55vnZyeYuDtvlu60E942L/+RcvaBgRvijr2K7EfDUmX
vGKsBqz+bM1YF9+B+5+Sk+N+GJCfOvB+EbsDldJg7R6GEc227h3uf9tRIOnY
eYBpxD5HI7eztB3CeM+y/LVGlDGr/6S0tqElpmBWrcKIn6EJBaW8V3gjTJk+
LtCEh+d7SobntcJMrElw5ZjgNLvNpd1qwRPBpDr3MBO2XH6RqdVYUMG/IZ4V
acKHm9poeZQF8bx35wNzTWAfWcFd7d2Cj5zIqdFmE2yW28JiexO+s0Im16QQ
SM8pTwypNyK0fx1xKpuAMmAPp2SzEfJLQpk0nwDZGTDxS48BM5hi2q+UgD+n
vko53oBVTsktZQYCH0daB0dEDcjuVhYXepG4+dqDFHfpoL9weaOERcKVW57o
zNDBNaLSsX45CenFgIkq1mOUkndTHQISTDFf4HZIA02daVtmOok882HDM496
jBbbJu+lSETrB/RBfBX44XYi7BWJtJAB/aO2WigmMPLm95Jg2/86pvnVYG6u
2/BrG4nCgyuPNuqqEZrkaxH5UNglqcjhjFyDfKF/4bIlFHz8NOpzvKto7gvk
ua+ioH9a/a3bqwJxO7gqMnys7zGHhCIlqqZCWhVFgbd0837HlxIMmfk+J3aP
/euyz3Xys5Dxt59BFoU+dpt5Q3YBSEekcO5xCnmCvJKE2FxM0cYyfisoMGLu
zJEpUjHTWVDNKh77hN0SPT8J/wCh/HzC
        "]], LineBox[CompressedData["
1:eJxFzm0wEwAcBvB56axWC3V1YtzEndcsJ4UPK9flvWN0PuTt5iXkKnKVTmll
jqL5MKJJXpZoZ+OyclnlaqfI+4hpbczS2EZd4abLqrvu/3/unnvu9+2hMs8z
0s0JBEL43/5bykFD2XZ+P53wP1p9jhu3HU1rzZvN7Ub3Ol6P9h5GE2duEUly
dHRVWa92Hj1HqqLxjWhzo8Da3nUAbD8U/IPug/ZrlE+mBaDTw6x4wij0+1qm
a/AlNCfQLjDrHdqhsCT1edYHsL8p5VmscBA8WOw33OcxAnaq1BnblkfBunWV
cpI2DuYv9QyQ78rAZMrjFY1mAlyeJc5ocPkIXjsq0GQWTYHzfaVde95Og1VC
6Z0x6gz4V/YEz/3qJ7DnMavNjB4FOKSJeqZzrxJ8mZLsPJegAnvpT5GmombB
u3Z+I0o30JaveaL9dXPgs3498q0RarAgjNnwag29qttnvVA9DxbHhlhwj2vA
RaHsh10LaOrn8Olm9hdw4OFirp3vAjjBccRoJkOvDlSoL7C+gmssk/IZLlr8
rxQ3mUvRW66x4gJyF8GEtiSR2nYJnHdfVGH7Bv3Ss5Roc04HtgnP87pJ1oMV
3qOyAgm6o57uokkygBNF/jaUTfQNdiNL8WQZ3K6l8MiRK+DSB+wU5Ul0GsPg
KoxBO0gkHVHx6Nuc033lTHSmf+33bQVo5+LdoVYt6M0jhTumWtFyw/x4iwBd
Gf808UQn2uTBuMiWoBVjnHoLGbq7ZD1VNonmBiW7N0+jIx4d6ApWol9cGepn
LaKrvQ9xYvToXHVdHHUF7RaZo+r9ibY0m+BXrqNnxUHZKRtoSXazD+03+p4T
adVkQv8B19k1/Q==
        "]]},
      Annotation[#, "Charting`Private`Tag$66338#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[{{2.040816326530612*^-8, 10.}, {0.009814340804846833, 10.}, {
        0.0196286612015304, 10.}, {0.040908357085458646`, 10.}, {
        0.06077788357015209, 10.}, {0.07051776619451407, 10.}, {
        0.08025764881887605, 10.}, {0.08554035390369732, 10.}, {
        0.09082305898851858, 10.}, {0.09346441153092921, 10.}, {
        0.09610576407333984, 10.}, {0.09742644034454516, 10.}, {
        0.09874711661575047, 10.}, {0.09907728568355181, 10.}, {
        0.09940745475135314, 10.}, {0.0996811224489796, 10.}}], 
       LineBox[{{0.10031887755102041`, -10.}, {0.10072813102255845`, -10.}, {
        0.10138846915816112`, -10.}, {0.11124879462818625`, -10.}, {
        0.12110912009821138`, -10.}, {0.1424808261288228, -10.}, {
        0.16346277092346467`, -10.}, {0.17324865862116823`, -10.}, {
        0.18303454631887175`, -10.}, {0.1883402539403638, -10.}, {
        0.19364596156185587`, -10.}, {0.1962988153726019, -10.}, {
        0.19895166918334792`, -10.}, {0.1992832759096912, -10.}, {
        0.19961488263603444`, -10.}, {0.1996811224489796, -10.}}], 
       LineBox[CompressedData["
1:eJxFzm0wEwAcBvB56axWC3V1YtzEndcsJ4UPK9flvWN0PuTt5iXkKnKVTmll
jqL5MKJJXpZoZ+OyclnlaqfI+4hpbczS2EZd4abLqrvu/3/unnvu9+2hMs8z
0s0JBEL43/5bykFD2XZ+P53wP1p9jhu3HU1rzZvN7Ub3Ol6P9h5GE2duEUly
dHRVWa92Hj1HqqLxjWhzo8Da3nUAbD8U/IPug/ZrlE+mBaDTw6x4wij0+1qm
a/AlNCfQLjDrHdqhsCT1edYHsL8p5VmscBA8WOw33OcxAnaq1BnblkfBunWV
cpI2DuYv9QyQ78rAZMrjFY1mAlyeJc5ocPkIXjsq0GQWTYHzfaVde95Og1VC
6Z0x6gz4V/YEz/3qJ7DnMavNjB4FOKSJeqZzrxJ8mZLsPJegAnvpT5GmombB
u3Z+I0o30JaveaL9dXPgs3498q0RarAgjNnwag29qttnvVA9DxbHhlhwj2vA
RaHsh10LaOrn8Olm9hdw4OFirp3vAjjBccRoJkOvDlSoL7C+gmssk/IZLlr8
rxQ3mUvRW66x4gJyF8GEtiSR2nYJnHdfVGH7Bv3Ss5Roc04HtgnP87pJ1oMV
3qOyAgm6o57uokkygBNF/jaUTfQNdiNL8WQZ3K6l8MiRK+DSB+wU5Ul0GsPg
KoxBO0gkHVHx6Nuc033lTHSmf+33bQVo5+LdoVYt6M0jhTumWtFyw/x4iwBd
Gf808UQn2uTBuMiWoBVjnHoLGbq7ZD1VNonmBiW7N0+jIx4d6ApWol9cGepn
LaKrvQ9xYvToXHVdHHUF7RaZo+r9ibY0m+BXrqNnxUHZKRtoSXazD+03+p4T
adVkQv8B19k1/Q==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$66338#2"]& ], {}}, {{}, {}, {}, {}, {}}, {{}, \
{}, {}, {}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-10., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.829233163903245*^9, 3.829234835296632*^9, 
  3.829235173237384*^9},
 CellLabel->
  "Out[508]=",ExpressionUUID->"20510807-2b48-432b-91eb-d0e35b478b8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Solve", " ", "the", " ", "system", " ", "and", " ", "write", " ", "the", 
    " ", 
    RowBox[{"solution", "."}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"u", " ", "=", " ", 
     RowBox[{"N", "[", 
      RowBox[{"LinearSolve", "[", 
       RowBox[{"AA", ",", " ", "ff"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Solution", " ", "[", "y_", "]"}], " ", ":=", " ", 
     RowBox[{"u0", " ", "+", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"k", "=", "1"}], 
        RowBox[{"n", "-", "1"}]], 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"[", "k", "]"}], "]"}], " ", 
        RowBox[{"v", "[", 
         RowBox[{"k", ",", "y"}], "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t1", "=", 
     RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"tFEM", "=", 
    RowBox[{"t1", "-", "t0"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8292330965255938`*^9, 3.8292330966572886`*^9}},
 CellLabel->
  "In[516]:=",ExpressionUUID->"d96fbbe4-8f20-4eb5-b40d-b827c0eeab35"],

Cell[BoxData["4.516000000000002`"], "Output",
 CellChangeTimes->{3.829233172083624*^9, 3.829234840427533*^9, 
  3.8292351779572706`*^9},
 CellLabel->
  "Out[519]=",ExpressionUUID->"1fe5c1c8-4b8a-4875-af75-e1759980cd18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Plot", " ", "the", " ", "exact", " ", "and", " ", "approximate", " ", 
    RowBox[{"solution", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Uexact", "[", "y_", "]"}], ":=", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "y", "-", 
        RowBox[{"\[ExponentialE]", " ", "y", " ", 
         RowBox[{"Cos", "[", "1", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "y"], " ", 
         RowBox[{"Cos", "[", "y", "]"}]}]}], ")"}]}]}], ";"}], " ", "\n", 
   RowBox[{"Plot1", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Uexact", "[", "y", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", " ", 
         RowBox[{"{", 
          RowBox[{"Red", ",", " ", "Dashed"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Solution\>\""}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<Exact solution\>\"", "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot2", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "i", "]"}], ",", 
          RowBox[{"Solution", "[", 
           RowBox[{"x", "[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"PointSize", "[", "Large", "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<FEM\>\"", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"Plot2", ",", "Plot1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8292330852378154`*^9, 3.829233093557418*^9}, {
  3.829234885206438*^9, 3.8292348875271482`*^9}},
 CellLabel->
  "In[520]:=",ExpressionUUID->"4e2193b7-751f-46cb-a251-b600dc175240"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwV13lcTN8bB/BJIaFSyCRLKUIIWSJ9StGetNKipJCKtBDxFSppE4p+CVER
SmlT3RtJydKeFrTMzJ2moSiUQsvv+Gvm/TpzznO2+zx3FF2PWLpPYLFYMiIs
1r9PY3dhfelnG23ylTNquEFbTE/ep5OtARbLfuIMx1lYezshKZetD1arYC3P
QQUm1S05N9nWYM381fvGYR3s3IZKrrDdwBob3FHssA3tqy7oRbP9wcoUxqc6
2CB51o6wCHYIWMtYnXsd3HFWPHfJRXYcgjesLHG2D8Cu3Xey+r+ngnNszZ2Y
zWGYOn7W0WB+FqQ1wvme/8VCZec34cvIPEgXWG6JL4nH8RpNJAwUof+j8m7a
7Qbk8mZ0iIg8x/DE7w/LdySjgKdXVatVhl2VmtTOeSkoO3Rz7u7ecrB0Hj7R
eZ+GwcVbpDK9K1H4+sm1CMt0TPj9SHquylv0i/3J0PzzEOvHXQqsHlfBZ3NO
YuiBTFSFaNS8WlaL8BsBj54WZ2FBbM/vB9/qUHrPzT9Z7gl6hjo7mtQb4KIw
9rh/bQ5Sv1BvJWMaobHD7t1hp1xIzrvfx+e/h6OY+OsHAXmI8sjfn6zcjNTw
OrPwI/n4pfOIf/BMC8SNXStGfArgv6Y8b/bLVrTu8V0eb/UUnY/LI+sVP2Lg
lbuBhGYh/h56f2PpyU9I2t8a3SlehOW6k8f2U22wGP87JFdcBIO7igeeyHVA
beWKytb9xTg+z1mJ69iJ4eEVE18PFMPVQt22bW8nWr/v/FT9qxjm50UiWvaT
9nvLgxuGi7H4c8r3ap9OhMj3abSOFON9nrC0OKQT/r5aek1iFNRNfZ3jMjqR
en7a0/iZFIQnQ5MMRjqRXfZDfuVaCmq9NlNbzDgQfogqzPSiUGht+jzCggMf
Hdou4jAFvZKtftpWHIxU6gS5+1Cwj1n1KW0XaY9kzOT8KVxUn/LIfx8HyaxX
ch5BFAT+tLHMCTIedamv/CKF5FGlCLNUDjhSZZoOaSTefra2yH0OxAdu5k++
T+FpjdSPvAccDIhfepiTTqHm9shuhSwONmptHxPNoDCq27y0p4jE+6KgF5dD
4oddfBNey0H/ud4fh55TkJXqFy//w0G4/Hzvby0UGkoiLhiNchAo9JOz+EDh
ipfKpNpxDrTO++7L/khB5q296EcxLoKj0enVThxaMdonyUW47VenJh4F6b+J
P+Yu4iLqmNJ6t68UpnVva/Mz4cJn60v94yI0quI59r/NuOh9NflqxgQaUfpB
H/6z4MLa9coJjiiNqXezmy/akP7xJpL6k2hIOM2tv+3MheFOcfM/EjTEG/sr
3vlxQVe785Vm0hB7fiNrURIX0tvHd7mq0PiopW/YeYsL08rXS4IX08gq7uUk
3uGiKqtRP2kJDfuCLTIy97lInat6sHYpjSeZnf6sHC7UOYpGiitp7ElatKm9
kguOZc98v/U0NOSrGhLecjFQPj01YAONKQn+ntbVXPSH2h49tpFG3tWKpHcN
XLhUNPB8N5H5Rx4YL2rnYjijeLadNo3CE4/Kr/3kQr/GyKtqG42YISsny19c
xOq+2pa7nca+gJHB6b+5UE7Q25tgQEPyqNmS0DEuFi4rcHQyouF+sO+i3xQe
aK1M+wZTGjJ2a3dYLOAh4Y+VwkErGp4a1IcpJjwIO76Mw5lGaV1TRqEZDz4B
9St7iGd59585YMHDqcOClDgXGs/TVBZX2PCgKqfozNtLQ1Yu1jfYhYde6f+k
PNxoUL/dpg4F8FDq0S62yIOG9LUzHWmBPAz/1DqUQ+y+JvGJdRAPUSVtUjqH
aEh51trlBPPQv9ZF3taTrKdNM9U7koe6qxJK3t5kP55LbuEn8/A+3it9+1Ea
Lg5Lpa+m8GDqId9VRJw/pMfo3uMh9rG043JfGs7qJy7efsSDgqHdkLgfjdw7
TJN9AQ86j2tbH/uT89ceS59SxIOysX67bAANp49zThVSPITUirCPE0+WNVea
/YIHsbktGhuP0XAIKTxc/46HmeruP1OP08he2KgbXEPit964/5d4YsnXmavq
eUgPYMdaBJL7MqhERTXzoNV+YGSAWPRA9GRDLonn/HKD6kkau0TTP/5iyP7+
TDnvQ5x5uywzTcBD+NxK1lNiu9YhK9FeMn9ty2jtIBqPjFyTn/3iwcKsi7/h
FLlPaora+M2DePPxT97EzyQ5n57/JVZp07pLXNfoJPeCxWBEtVN70mkauwsU
8nVFGSjbcDrWEfMSPlmWTWQgXBco3Ec84LQ75qUEAzpHfQNFfFpnjpr+dAYK
kblBfOJJi1relEsxKI29rDrtPxpsofXEVzMZ+JgsKrYlvvtWNmW7HINeEc1b
J4jVMht0KtkMooTenxOJtX0tTr2ez2B4aDi3lbjSWkreSJGBRXf2mkFiiw01
T98sYlB11URO+gyND+xoG+PFDExrTuxdSuw6YvLzrSqxS6+0LnFPh8Rlk+UM
OFOtVeyI/V+8WVm1gvSP3HvLk3gsJbzKVJ1B4NWKoP+IL4QZHKpew+B9jXrJ
JWJpj0ni5usYhPOsXG8TJ5pUpNVsIPvh2Xkok3jRyhC9HZsYvGaFNBcRZ0jr
cWu1GKSu+pFaTrzup8gZCzDIO/OxqZr4WVOpQr0u2T+frwebiA0KzxTv1Gcw
J+iT0yfiukTtXQ3bSXwpm7xO4t2nRwctjUj8BAkvHjHPmb7aaEL263hGCEPs
uTVotbU5iT+5Z/Rf+4Dyptr3FiR+0rEWDvHpyb+9bKwYGJ4bl24nnvTlqUSz
Dek/uu5hC3Fs1bF0210MCk3e3q0jZmet295iz6DtrtefSuK7lwcYOycGwaur
s0uI1fxzz7Y6M+DPT6p4Qpxv67tgtyvZj4iLG1OJtTVXl3xwYyAWs21KPHHl
3H57+wMkvmbwhhBii7HHwx89GDhe+1x29N95vVTTaDtM1ntAvN/g33ml9dQ7
HmWQ/XbeZfV/5xX+8Ei7HwMdWjFG7t/5mKk+6ghkoN+Sl8gh90FavdvQOYjE
y0t5UEacKHNP0Hma3N8wHdkU4oyWRUrccwxYC/UG9xCvK+Y93xtK5uss7r2J
+FnSHSfeBQYZoZu0ZxLX7V3wPyaKQbJiak8Zuc+DPfLSgmvk+bB94TGNOO5m
d2XS/xikKyQ5NpPnZ+2OvDNWSQz83c473CI+mmPWV3qHQdyBtiBV4q+BwTU3
MhjUnQzcrEKez6hlZmGWWWS8luPnO8nzu7yNrT0lh4HLBdP314k9kJt57Cm5
j+c+xEwg7pooiNpZRuazRtOxlOSHkKc5+uIVZP9yEjsPES/yODPyrJKsr+L6
QVnivVVzvNSqGcSyKi/uIfmm/YqJyeRWEl8xfbSN5KumBU+mlHwl+9NXYXGS
5D//+tMv/PoZbLS3HBUjlj1vfGLZTwYDquPp0SRf7hQwwuvDDDSesUcSfGhU
Z8x+7SvKR5xyX+j1wzQqNE+FqbL54Eu1Va0l+dmtx1C7cy4fYieubrpF8rfo
zVm/4ufzEdjQlTyJWJeV5S6qzAfncqFN/QEaJa+4+h0r+dBJSbY2dyf3ycpA
NE6fjyjbDBMBqSfhJoWhCgbEpmxdLWJHvaXiaUZ8hO/f7BW7h8aEtVOnF5jz
UWVu6LrWiYa5TO3s1l1kfhrK5fvsaQjrbJcpePOR/aZc9rA1qTevKzNSj5D+
24217pN6FlO6cdUKXz7mnF4c32FJ8mW2vIb2cT5YnhHNBjtpnL3UscXlLB8b
2y7HiJnTkDffvzM1nqzn14zwxaR+ft3W0qiWwEdCSkz0VlJfS7cY2uYn8qFf
9bfEkdTf/SuWOby6zYfbN9NbkXqkvkz75iZ8wEe6pblVI2iYvgsIVHvGR9Kr
hq0SpL6fMQy9nSfgYxrvSLMseX9o2HPQUf0zH8m+vtp/yPuGcoAJO6OHD9M/
mz50KNN4e2fG1ZR+PlSzG9PuKtGY+fdm2JU/fEgflL8ycz6N9MwCbx/JLvRX
JB6+Q95f6mSEm9XWdyGwr+WHI4uG0tJ3w/c3dqGtji07ZZxCAB7nL9rcBcNP
LxxyRynIe/mvmqvThbiIX24T/lJwq2AtkjDuQtL1WrOIQQrDx9kSQqcuqGfL
qOt+oaDYbtyaEtoFsb/9PYYNFCLKNmfZhHeh7sKPvdfrKPy4rxY2ObILprRR
MlNDocxXUsMztgun2oz8A96R8cUbLq25QTyp3Pu/cgrpa3cbvMjuAl9LzlCl
gMLKiAMFHZ/IeDaclJfXKVw7sis6tqMLG2cMWr6NpzBubeS2lduFjNUNdM1V
CnULlpOM0IUEq9XP6y5ROJr/zdv7exdmll3xLbpAIY8ToDIySQBpPW2Neccp
bNoQEsdeI4D6B1Hl5dYUml3Z629qEOu2rpKypOAX87hl4QYBNP5Wr/u+g0JG
V6u8qpYA2b0FK7NMKMyPW3Fn/XYB0quz3sroUZjwvTnTyl6AOZEZjoGrKbx7
uLQy+pwAbS4FvsXTKDjOr/0t0ijA6/q+pEklxZBk++ZTTQLEnletX1FcjBey
s44GtAqgvGpxhOVT8v9hioNQ2C4A5/vN8Lgnxej7KWiuFQpwypB6+CetGOfe
jOXeHCPj2XvO2xFTjHT/lYc1l3UjYdA1fJZTMQbfRvN8znYjz/J11tiPIrRN
bTo4cr4bwqNOV571FaHMVKHvQlg3Auv2rT7VW4TYmod/b0V2g1WLlP6uIixr
qJxZHd8N8bSrJs9ai7Dng4jB0ofdWJgZtru3pAivugMecRu6sbG99nlsWBES
xPb4WyoL8Zo/rN8lXQTZjvy7E8qFGDmavuuGZCEmnj5rrXn0M95/j/QofFcA
1oM9WTyZL0jfczs8yT8fvolZ0TJlxAM5jvvqc1GyPFx8xuEejMw4k8cTzcEM
Y1+1c5K9aNvquWfikmy0rahrPEH3gnMlNPnjx0fIvgVl/p6vyM67Zjtkeh9O
WetnzBv7iuHvAZ+ife8iOPTO2baH36CTdcnl/LH/IVM474akaR846VWaw82R
CL8Z6tJh3geduY/CBjwj4Wb5VeXxzj6Uql7qq2ZFQoGms83siEd5rDnLIhBx
yeFVlGsfWPdFrogHhePg+v99lzhBbL68z3Z2KJRCZhpOvteH4J37Z01xP4Wx
jaemt6STdqVvLzTCgvDhK9Nw7xGJF1HjyL5/ErF2uU7bn5Df712jMV0YiPFl
ln6hNImXEWNwa38A2uov3RJtJP2VRdqLMrxQGDa0r7GJuE7WWEVwCHGbnZem
tBKn/zEQWeABk7SVeVs7yHjGc1MkLrmjOLD6zdnPpD3v4MIXdY64tmLdpZ29
xJajJ5M27cZRXpK1Yh+xlNFDuxQbqJp6dZYOEHtlln7gmUJM5H1q7BBxtt+S
6Mxt4ORvPuTyh1jc/v1ojxboQymr1EeJXZ40Ffer4fqCqYPj48QsVtmzdaba
/wdpDJ5N
          "]]}, Annotation[#, "Charting`Private`Tag$75794#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Solution\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {0., 0.11132642735580428`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Exact solution\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.82923317238828*^9, 3.829234840651221*^9, {3.829234874076374*^9, 
   3.829234888238556*^9}, 3.829235178067314*^9},
 CellLabel->
  "Out[521]=",ExpressionUUID->"963c51d3-f5ec-4d74-bc85-d125488e12eb"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         PointSize[Large]], 
        PointBox[{{0., 0.}, {0.1, 0.026390136418910314`}, {0.2, 
         0.05165861668635712}, {0.30000000000000004`, 0.0744805960350851}, {
         0.4, 0.0932919814605839}, {0.5, 0.10627103331311326`}, {0.6, 
         0.11132158830462746`}, {0.7, 0.10605863374533007`}, {
         0.7999999999999999, 0.08779707243735706}, {0.8999999999999999, 
         0.05354463298020121}, {0.9999999999999999, 0.}}]}}, {{
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         PointSize[Large]]}, {}}, {{
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         PointSize[Large]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 0.9999999999999999}, {0, 0.11132158830462746`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"FEM\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.82923317238828*^9, 3.829234840651221*^9, {3.829234874076374*^9, 
   3.829234888238556*^9}, 3.829235178175485*^9},
 CellLabel->
  "Out[522]=",ExpressionUUID->"fff29c22-6387-47da-be5d-9ed6c66447dd"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]], 
         PointBox[{{0., 0.}, {0.1, 0.026390136418910314`}, {0.2, 
          0.05165861668635712}, {0.30000000000000004`, 0.0744805960350851}, {
          0.4, 0.0932919814605839}, {0.5, 0.10627103331311326`}, {0.6, 
          0.11132158830462746`}, {0.7, 0.10605863374533007`}, {
          0.7999999999999999, 0.08779707243735706}, {0.8999999999999999, 
          0.05354463298020121}, {0.9999999999999999, 0.}}]}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
/wdpDJ5N
           "]]}, Annotation[#, "Charting`Private`Tag$75794#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 0.9999999999999999}, {0, 0.11132158830462746`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"FEM\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Exact solution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.82923317238828*^9, 3.829234840651221*^9, {3.829234874076374*^9, 
   3.829234888238556*^9}, 3.829235178266306*^9},
 CellLabel->
  "Out[523]=",ExpressionUUID->"827e3166-023f-44bd-a2c0-87ca4fa960cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Error", "*)"}], "\n", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Uexact", "[", "y", "]"}], "-", 
       RowBox[{"Solution", "[", "y", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Error\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DiscreteError", "[", "i_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"Uexact", "[", 
      RowBox[{"x", "[", "i", "]"}], "]"}], "-", 
     RowBox[{"Solution", "[", 
      RowBox[{"x", "[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"DiscreteError", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"PointSize", "[", "Medium", "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Max", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"Uexact", "[", "y", "]"}], "-", 
        RowBox[{"Solution", "[", "y", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1", ",", 
        RowBox[{"1", "/", "n"}]}], "}"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8292331378174024`*^9, 3.8292331815593424`*^9}},
 CellLabel->
  "In[524]:=",ExpressionUUID->"ae0216d6-5c15-4301-9772-4ed038d7cb40"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
R24WB6CpAM181WL6f+Qx7J0=
        "]], LineBox[CompressedData["
1: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
LNNaOQrzLG4x4+fOr2oe+vMp5/8v38fd
        "]], LineBox[CompressedData["
1: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
9nUnmaiojzCDfXhrlrXW66/OabJ7mP8HT70Qrg==
        "]], LineBox[CompressedData["
1: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
rs0IFCkYYfa2eck7xaMHu074s4eY/wHqKSiJ
        "]], LineBox[CompressedData["
1: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
hfMblsz2TBiDQcul2l9o1xaD8JEB4/8Aurgw/Q==
        "]], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1: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
gdh2QaiuiO9dykBW3Gal92Xe9P+1Myiu
        "]], LineBox[CompressedData["
1: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
mg1anciq6W2FB1cM/gVYrkPJ
        "]], LineBox[CompressedData["
1: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
lIOav2nPwmGDZf8HIQNx/w==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$75943#1"]& ], {}}, {{}, {}}, {{}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 3.574824144363161*^-11},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Error\"", TraditionalForm],
  PlotRange->{{0, 1}, {3.574824144363161*^-11, 0.0026303859897779183`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.829233172551428*^9, 3.8292331830065126`*^9}, 
   3.8292348414065504`*^9, 3.8292351787766247`*^9},
 CellLabel->
  "Out[524]=",ExpressionUUID->"5ea51169-4fc7-4b8c-9b95-a11b68929b89"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
     AbsoluteThickness[1.6], 
     PointBox[{{1., 0.}, {2., 4.5102810375396984`*^-17}, {3., 
      6.938893903907228*^-18}, {4., 6.938893903907228*^-17}, {
      5., -2.7755575615628914`*^-17}, {6., 1.249000902703301*^-16}, {7., 
      0.}, {8., 1.249000902703301*^-16}, {9., 1.3877787807814457`*^-17}, {
      10., -2.7755575615628914`*^-17}, {11., 5.551115123125783*^-17}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
      AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
      AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 11.}, {-2.7755575615628914`*^-17, 1.249000902703301*^-16}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.829233172551428*^9, 3.8292331830065126`*^9}, 
   3.8292348414065504`*^9, 3.8292351788256445`*^9},
 CellLabel->
  "Out[526]=",ExpressionUUID->"f7715b66-670a-4e00-9426-ec1c5834bc6d"],

Cell[BoxData["1.6653345369377348`*^-16"], "Output",
 CellChangeTimes->{{3.829233172551428*^9, 3.8292331830065126`*^9}, 
   3.8292348414065504`*^9, 3.829235178827141*^9},
 CellLabel->
  "Out[527]=",ExpressionUUID->"9c7549c9-4b25-442b-9745-b10be86d632a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "approximate", " ", "solution", " ", "using", " ", "FD", " ", "method", 
    " ", "for", " ", "elliptic", " ", "problem"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"t2", "=", 
     RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]x", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xx", "[", "j_", "]"}], ":=", " ", 
     RowBox[{"j", " ", "\[CapitalDelta]x"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BB", ":=", " ", 
     RowBox[{"BB", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"fun", "[", 
         RowBox[{"xx", "[", "i", "]"}], "]"}], " ", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "M"}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"A", ":=", " ", 
     RowBox[{"A", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
            RowBox[{"i", "==", 
             RowBox[{"j", "+", "1"}]}]}], "\[Rule]", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"M", ",", "M"}], "}"}]}], "]"}], " ", "+", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
            RowBox[{"i", "==", 
             RowBox[{"j", "-", "1"}]}]}], "\[Rule]", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"M", ",", "M"}], "}"}]}], "]"}], " ", "+", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
            RowBox[{"i", "==", "j"}]}], "\[Rule]", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"M", ",", "M"}], "}"}]}], "]"}]}], "//", "Normal"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Anew", " ", "=", " ", 
     RowBox[{"A", " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]x", "^", "2"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"X", "[", "j", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "M"}], "}"}]}], "]"}]}], " ", ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sol1", " ", "=", " ", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Anew", ".", " ", "XX"}], " ", "\[Equal]", " ", "BB"}], ",", 
       " ", "XX"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX1", " ", "=", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"XX", " ", "/.", " ", "Sol1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX1", " ", "=", " ", 
     RowBox[{"Prepend", "[", 
      RowBox[{"XX1", ",", "0"}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX1", " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{"XX1", ",", "0"}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"Plot3", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[CapitalDelta]x", " ", "j"}], ",", " ", 
          RowBox[{"XX1", "[", 
           RowBox[{"[", 
            RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{"M", "+", "1"}]}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"Joined", "\[Rule]", " ", "True"}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\< \>\""}], "}"}]}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Dashed", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<FD approximation\>\"", "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t3", "=", 
     RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\<time\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{"tFD", "=", 
    RowBox[{"t3", "-", "t2"}]}]}]}]], "Input",
 CellLabel->
  "In[528]:=",ExpressionUUID->"3a05fa40-6826-43e1-8276-4e01d1d24a8f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]], 
        LineBox[{{0., 0.}, {0.09090909090909091, 0.02394449715217159}, {
         0.18181818181818182`, 0.04706731018319579}, {0.2727272727272727, 
         0.06839778846865814}, {0.36363636363636365`, 0.08680418223669821}, {
         0.45454545454545453`, 0.10098200693504013`}, {0.5454545454545454, 
         0.10944321433929823`}, {0.6363636363636364, 0.11050652728797886`}, {
         0.7272727272727273, 0.10228934502721682`}, {0.8181818181818182, 
         0.08270167886797368}, {0.9090909090909091, 0.04944263276868714}, {1.,
          0.}}]}}, {{
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 1, 0], 
                 Dashing[{Small, Small}], 
                 PointSize[Large]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[6.272]], {{{0., 0.}}, {{0.09090909090909091, 
         0.02394449715217159}}, {{0.18181818181818182`, 
         0.04706731018319579}}, {{0.2727272727272727, 
         0.06839778846865814}}, {{0.36363636363636365`, 
         0.08680418223669821}}, {{0.45454545454545453`, 
         0.10098200693504013`}}, {{0.5454545454545454, 
         0.10944321433929823`}}, {{0.6363636363636364, 
         0.11050652728797886`}}, {{0.7272727272727273, 
         0.10228934502721682`}}, {{0.8181818181818182, 
         0.08270167886797368}}, {{0.9090909090909091, 
         0.04944263276868714}}, {{1., 0.}}}]}}, {{
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]]}, {}}, {{
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\" \"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 0.11050652728797886`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"FD approximation\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    LineBox[{{0, 6.272}, {40, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                 RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{
                   GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                   RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8292349307373447`*^9, 3.8292351789678144`*^9},
 CellLabel->
  "Out[539]=",ExpressionUUID->"03e3b6c2-0967-484c-9200-cb54e0c452a6"],

Cell[BoxData["\<\"time\"\>"], "Print",
 CellChangeTimes->{3.829234930766582*^9, 3.829235178985482*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[528]:=",ExpressionUUID->"755a58c7-af33-441a-96fa-0bc14b7beb0b"],

Cell[BoxData["0.09300000000000352`"], "Output",
 CellChangeTimes->{3.8292349307373447`*^9, 3.8292351789874697`*^9},
 CellLabel->
  "Out[542]=",ExpressionUUID->"62ecb445-93b3-4ec6-adab-6ab1b0d2622a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DiscreteError2", "[", "i_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Uexact", "[", 
    RowBox[{"x", "[", "i", "]"}], "]"}], "-", 
   RowBox[{"Sol1", "[", 
    RowBox[{"x", "[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DiscreteError2", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "Medium", "]"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Error of the FD method compared with the exact sol\>\""}]}], 
  "]"}]}], "Input",
 CellLabel->
  "In[543]:=",ExpressionUUID->"a4c8c585-09f1-43af-8fda-64232bf58009"],

Cell[BoxData[
 GraphicsBox[{{}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Error of the FD method compared with the exact sol\"", TraditionalForm],
  PlotRange->{{-1, 1}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8292349432975364`*^9, 3.829235179096284*^9},
 CellLabel->
  "Out[544]=",ExpressionUUID->"423e3017-a409-42d8-ba23-93b2b743dc2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{"Plot2", ",", "Plot3", ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Comparison between FEM and FD\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"Plot1", ",", "Plot2", ",", "Plot3"}], "]"}]}], "Input",
 CellChangeTimes->{3.829235024576803*^9},
 CellLabel->
  "In[545]:=",ExpressionUUID->"f945a32a-ed36-4e1e-95f9-8f40a8ff5c1e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]], 
         PointBox[{{0., 0.}, {0.1, 0.026390136418910314`}, {0.2, 
          0.05165861668635712}, {0.30000000000000004`, 0.0744805960350851}, {
          0.4, 0.0932919814605839}, {0.5, 0.10627103331311326`}, {0.6, 
          0.11132158830462746`}, {0.7, 0.10605863374533007`}, {
          0.7999999999999999, 0.08779707243735706}, {0.8999999999999999, 
          0.05354463298020121}, {0.9999999999999999, 0.}}]}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]], 
         LineBox[{{0., 0.}, {0.09090909090909091, 0.02394449715217159}, {
          0.18181818181818182`, 0.04706731018319579}, {0.2727272727272727, 
          0.06839778846865814}, {0.36363636363636365`, 0.08680418223669821}, {
          0.45454545454545453`, 0.10098200693504013`}, {0.5454545454545454, 
          0.10944321433929823`}, {0.6363636363636364, 0.11050652728797886`}, {
          0.7272727272727273, 0.10228934502721682`}, {0.8181818181818182, 
          0.08270167886797368}, {0.9090909090909091, 0.04944263276868714}, {
          1., 0.}}]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 1, 0], 
                  Dashing[{Small, Small}], 
                  PointSize[Large]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[6.272]], {{{0., 0.}}, {{0.09090909090909091, 
          0.02394449715217159}}, {{0.18181818181818182`, 
          0.04706731018319579}}, {{0.2727272727272727, 
          0.06839778846865814}}, {{0.36363636363636365`, 
          0.08680418223669821}}, {{0.45454545454545453`, 
          0.10098200693504013`}}, {{0.5454545454545454, 
          0.10944321433929823`}}, {{0.6363636363636364, 
          0.11050652728797886`}}, {{0.7272727272727273, 
          0.10228934502721682`}}, {{0.8181818181818182, 
          0.08270167886797368}}, {{0.9090909090909091, 
          0.04944263276868714}}, {{1., 0.}}}]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]]}, {}}}, {{}, {}}}}, {
    PlotLabel -> 
     FormBox["\"Comparison between FEM and FD\"", TraditionalForm], 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 0.9999999999999999}, {0, 0.11132158830462746`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"FEM\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"FD approximation\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    LineBox[{{0, 6.272}, {40, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.829234969896223*^9, 3.8292351791774616`*^9},
 CellLabel->
  "Out[545]=",ExpressionUUID->"c9edee0a-a96d-46b0-a7bd-47add9bc2b32"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV13lcTN8bB/BJIaFSyCRLKUIIWSJ9StGetNKipJCKtBDxFSppE4p+CVER
SmlT3RtJydKeFrTMzJ2moSiUQsvv+Gvm/TpzznO2+zx3FF2PWLpPYLFYMiIs
1r9PY3dhfelnG23ylTNquEFbTE/ep5OtARbLfuIMx1lYezshKZetD1arYC3P
QQUm1S05N9nWYM381fvGYR3s3IZKrrDdwBob3FHssA3tqy7oRbP9wcoUxqc6
2CB51o6wCHYIWMtYnXsd3HFWPHfJRXYcgjesLHG2D8Cu3Xey+r+ngnNszZ2Y
zWGYOn7W0WB+FqQ1wvme/8VCZec34cvIPEgXWG6JL4nH8RpNJAwUof+j8m7a
7Qbk8mZ0iIg8x/DE7w/LdySjgKdXVatVhl2VmtTOeSkoO3Rz7u7ecrB0Hj7R
eZ+GwcVbpDK9K1H4+sm1CMt0TPj9SHquylv0i/3J0PzzEOvHXQqsHlfBZ3NO
YuiBTFSFaNS8WlaL8BsBj54WZ2FBbM/vB9/qUHrPzT9Z7gl6hjo7mtQb4KIw
9rh/bQ5Sv1BvJWMaobHD7t1hp1xIzrvfx+e/h6OY+OsHAXmI8sjfn6zcjNTw
OrPwI/n4pfOIf/BMC8SNXStGfArgv6Y8b/bLVrTu8V0eb/UUnY/LI+sVP2Lg
lbuBhGYh/h56f2PpyU9I2t8a3SlehOW6k8f2U22wGP87JFdcBIO7igeeyHVA
beWKytb9xTg+z1mJ69iJ4eEVE18PFMPVQt22bW8nWr/v/FT9qxjm50UiWvaT
9nvLgxuGi7H4c8r3ap9OhMj3abSOFON9nrC0OKQT/r5aek1iFNRNfZ3jMjqR
en7a0/iZFIQnQ5MMRjqRXfZDfuVaCmq9NlNbzDgQfogqzPSiUGht+jzCggMf
Hdou4jAFvZKtftpWHIxU6gS5+1Cwj1n1KW0XaY9kzOT8KVxUn/LIfx8HyaxX
ch5BFAT+tLHMCTIedamv/CKF5FGlCLNUDjhSZZoOaSTefra2yH0OxAdu5k++
T+FpjdSPvAccDIhfepiTTqHm9shuhSwONmptHxPNoDCq27y0p4jE+6KgF5dD
4oddfBNey0H/ud4fh55TkJXqFy//w0G4/Hzvby0UGkoiLhiNchAo9JOz+EDh
ipfKpNpxDrTO++7L/khB5q296EcxLoKj0enVThxaMdonyUW47VenJh4F6b+J
P+Yu4iLqmNJ6t68UpnVva/Mz4cJn60v94yI0quI59r/NuOh9NflqxgQaUfpB
H/6z4MLa9coJjiiNqXezmy/akP7xJpL6k2hIOM2tv+3MheFOcfM/EjTEG/sr
3vlxQVe785Vm0hB7fiNrURIX0tvHd7mq0PiopW/YeYsL08rXS4IX08gq7uUk
3uGiKqtRP2kJDfuCLTIy97lInat6sHYpjSeZnf6sHC7UOYpGiitp7ElatKm9
kguOZc98v/U0NOSrGhLecjFQPj01YAONKQn+ntbVXPSH2h49tpFG3tWKpHcN
XLhUNPB8N5H5Rx4YL2rnYjijeLadNo3CE4/Kr/3kQr/GyKtqG42YISsny19c
xOq+2pa7nca+gJHB6b+5UE7Q25tgQEPyqNmS0DEuFi4rcHQyouF+sO+i3xQe
aK1M+wZTGjJ2a3dYLOAh4Y+VwkErGp4a1IcpJjwIO76Mw5lGaV1TRqEZDz4B
9St7iGd59585YMHDqcOClDgXGs/TVBZX2PCgKqfozNtLQ1Yu1jfYhYde6f+k
PNxoUL/dpg4F8FDq0S62yIOG9LUzHWmBPAz/1DqUQ+y+JvGJdRAPUSVtUjqH
aEh51trlBPPQv9ZF3taTrKdNM9U7koe6qxJK3t5kP55LbuEn8/A+3it9+1Ea
Lg5Lpa+m8GDqId9VRJw/pMfo3uMh9rG043JfGs7qJy7efsSDgqHdkLgfjdw7
TJN9AQ86j2tbH/uT89ceS59SxIOysX67bAANp49zThVSPITUirCPE0+WNVea
/YIHsbktGhuP0XAIKTxc/46HmeruP1OP08he2KgbXEPit964/5d4YsnXmavq
eUgPYMdaBJL7MqhERTXzoNV+YGSAWPRA9GRDLonn/HKD6kkau0TTP/5iyP7+
TDnvQ5x5uywzTcBD+NxK1lNiu9YhK9FeMn9ty2jtIBqPjFyTn/3iwcKsi7/h
FLlPaora+M2DePPxT97EzyQ5n57/JVZp07pLXNfoJPeCxWBEtVN70mkauwsU
8nVFGSjbcDrWEfMSPlmWTWQgXBco3Ec84LQ75qUEAzpHfQNFfFpnjpr+dAYK
kblBfOJJi1relEsxKI29rDrtPxpsofXEVzMZ+JgsKrYlvvtWNmW7HINeEc1b
J4jVMht0KtkMooTenxOJtX0tTr2ez2B4aDi3lbjSWkreSJGBRXf2mkFiiw01
T98sYlB11URO+gyND+xoG+PFDExrTuxdSuw6YvLzrSqxS6+0LnFPh8Rlk+UM
OFOtVeyI/V+8WVm1gvSP3HvLk3gsJbzKVJ1B4NWKoP+IL4QZHKpew+B9jXrJ
JWJpj0ni5usYhPOsXG8TJ5pUpNVsIPvh2Xkok3jRyhC9HZsYvGaFNBcRZ0jr
cWu1GKSu+pFaTrzup8gZCzDIO/OxqZr4WVOpQr0u2T+frwebiA0KzxTv1Gcw
J+iT0yfiukTtXQ3bSXwpm7xO4t2nRwctjUj8BAkvHjHPmb7aaEL263hGCEPs
uTVotbU5iT+5Z/Rf+4Dyptr3FiR+0rEWDvHpyb+9bKwYGJ4bl24nnvTlqUSz
Dek/uu5hC3Fs1bF0210MCk3e3q0jZmet295iz6DtrtefSuK7lwcYOycGwaur
s0uI1fxzz7Y6M+DPT6p4Qpxv67tgtyvZj4iLG1OJtTVXl3xwYyAWs21KPHHl
3H57+wMkvmbwhhBii7HHwx89GDhe+1x29N95vVTTaDtM1ntAvN/g33ml9dQ7
HmWQ/XbeZfV/5xX+8Ei7HwMdWjFG7t/5mKk+6ghkoN+Sl8gh90FavdvQOYjE
y0t5UEacKHNP0Hma3N8wHdkU4oyWRUrccwxYC/UG9xCvK+Y93xtK5uss7r2J
+FnSHSfeBQYZoZu0ZxLX7V3wPyaKQbJiak8Zuc+DPfLSgmvk+bB94TGNOO5m
d2XS/xikKyQ5NpPnZ+2OvDNWSQz83c473CI+mmPWV3qHQdyBtiBV4q+BwTU3
MhjUnQzcrEKez6hlZmGWWWS8luPnO8nzu7yNrT0lh4HLBdP314k9kJt57Cm5
j+c+xEwg7pooiNpZRuazRtOxlOSHkKc5+uIVZP9yEjsPES/yODPyrJKsr+L6
QVnivVVzvNSqGcSyKi/uIfmm/YqJyeRWEl8xfbSN5KumBU+mlHwl+9NXYXGS
5D//+tMv/PoZbLS3HBUjlj1vfGLZTwYDquPp0SRf7hQwwuvDDDSesUcSfGhU
Z8x+7SvKR5xyX+j1wzQqNE+FqbL54Eu1Va0l+dmtx1C7cy4fYieubrpF8rfo
zVm/4ufzEdjQlTyJWJeV5S6qzAfncqFN/QEaJa+4+h0r+dBJSbY2dyf3ycpA
NE6fjyjbDBMBqSfhJoWhCgbEpmxdLWJHvaXiaUZ8hO/f7BW7h8aEtVOnF5jz
UWVu6LrWiYa5TO3s1l1kfhrK5fvsaQjrbJcpePOR/aZc9rA1qTevKzNSj5D+
24217pN6FlO6cdUKXz7mnF4c32FJ8mW2vIb2cT5YnhHNBjtpnL3UscXlLB8b
2y7HiJnTkDffvzM1nqzn14zwxaR+ft3W0qiWwEdCSkz0VlJfS7cY2uYn8qFf
9bfEkdTf/SuWOby6zYfbN9NbkXqkvkz75iZ8wEe6pblVI2iYvgsIVHvGR9Kr
hq0SpL6fMQy9nSfgYxrvSLMseX9o2HPQUf0zH8m+vtp/yPuGcoAJO6OHD9M/
mz50KNN4e2fG1ZR+PlSzG9PuKtGY+fdm2JU/fEgflL8ycz6N9MwCbx/JLvRX
JB6+Q95f6mSEm9XWdyGwr+WHI4uG0tJ3w/c3dqGtji07ZZxCAB7nL9rcBcNP
LxxyRynIe/mvmqvThbiIX24T/lJwq2AtkjDuQtL1WrOIQQrDx9kSQqcuqGfL
qOt+oaDYbtyaEtoFsb/9PYYNFCLKNmfZhHeh7sKPvdfrKPy4rxY2ObILprRR
MlNDocxXUsMztgun2oz8A96R8cUbLq25QTyp3Pu/cgrpa3cbvMjuAl9LzlCl
gMLKiAMFHZ/IeDaclJfXKVw7sis6tqMLG2cMWr6NpzBubeS2lduFjNUNdM1V
CnULlpOM0IUEq9XP6y5ROJr/zdv7exdmll3xLbpAIY8ToDIySQBpPW2Neccp
bNoQEsdeI4D6B1Hl5dYUml3Z629qEOu2rpKypOAX87hl4QYBNP5Wr/u+g0JG
V6u8qpYA2b0FK7NMKMyPW3Fn/XYB0quz3sroUZjwvTnTyl6AOZEZjoGrKbx7
uLQy+pwAbS4FvsXTKDjOr/0t0ijA6/q+pEklxZBk++ZTTQLEnletX1FcjBey
s44GtAqgvGpxhOVT8v9hioNQ2C4A5/vN8Lgnxej7KWiuFQpwypB6+CetGOfe
jOXeHCPj2XvO2xFTjHT/lYc1l3UjYdA1fJZTMQbfRvN8znYjz/J11tiPIrRN
bTo4cr4bwqNOV571FaHMVKHvQlg3Auv2rT7VW4TYmod/b0V2g1WLlP6uIixr
qJxZHd8N8bSrJs9ai7Dng4jB0ofdWJgZtru3pAivugMecRu6sbG99nlsWBES
xPb4WyoL8Zo/rN8lXQTZjvy7E8qFGDmavuuGZCEmnj5rrXn0M95/j/QofFcA
1oM9WTyZL0jfczs8yT8fvolZ0TJlxAM5jvvqc1GyPFx8xuEejMw4k8cTzcEM
Y1+1c5K9aNvquWfikmy0rahrPEH3gnMlNPnjx0fIvgVl/p6vyM67Zjtkeh9O
WetnzBv7iuHvAZ+ife8iOPTO2baH36CTdcnl/LH/IVM474akaR846VWaw82R
CL8Z6tJh3geduY/CBjwj4Wb5VeXxzj6Uql7qq2ZFQoGms83siEd5rDnLIhBx
yeFVlGsfWPdFrogHhePg+v99lzhBbL68z3Z2KJRCZhpOvteH4J37Z01xP4Wx
jaemt6STdqVvLzTCgvDhK9Nw7xGJF1HjyL5/ErF2uU7bn5Df712jMV0YiPFl
ln6hNImXEWNwa38A2uov3RJtJP2VRdqLMrxQGDa0r7GJuE7WWEVwCHGbnZem
tBKn/zEQWeABk7SVeVs7yHjGc1MkLrmjOLD6zdnPpD3v4MIXdY64tmLdpZ29
xJajJ5M27cZRXpK1Yh+xlNFDuxQbqJp6dZYOEHtlln7gmUJM5H1q7BBxtt+S
6Mxt4ORvPuTyh1jc/v1ojxboQymr1EeJXZ40Ffer4fqCqYPj48QsVtmzdaba
/wdpDJ5N
           "]]}, 
         Annotation[#, "Charting`Private`Tag$75794#1"]& ]}}, {}}, {{}, {{{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]], 
         PointBox[{{0., 0.}, {0.1, 0.026390136418910314`}, {0.2, 
          0.05165861668635712}, {0.30000000000000004`, 0.0744805960350851}, {
          0.4, 0.0932919814605839}, {0.5, 0.10627103331311326`}, {0.6, 
          0.11132158830462746`}, {0.7, 0.10605863374533007`}, {
          0.7999999999999999, 0.08779707243735706}, {0.8999999999999999, 
          0.05354463298020121}, {0.9999999999999999, 0.}}]}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]], 
         LineBox[{{0., 0.}, {0.09090909090909091, 0.02394449715217159}, {
          0.18181818181818182`, 0.04706731018319579}, {0.2727272727272727, 
          0.06839778846865814}, {0.36363636363636365`, 0.08680418223669821}, {
          0.45454545454545453`, 0.10098200693504013`}, {0.5454545454545454, 
          0.10944321433929823`}, {0.6363636363636364, 0.11050652728797886`}, {
          0.7272727272727273, 0.10228934502721682`}, {0.8181818181818182, 
          0.08270167886797368}, {0.9090909090909091, 0.04944263276868714}, {
          1., 0.}}]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 1, 0], 
                  Dashing[{Small, Small}], 
                  PointSize[Large]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[6.272]], {{{0., 0.}}, {{0.09090909090909091, 
          0.02394449715217159}}, {{0.18181818181818182`, 
          0.04706731018319579}}, {{0.2727272727272727, 
          0.06839778846865814}}, {{0.36363636363636365`, 
          0.08680418223669821}}, {{0.45454545454545453`, 
          0.10098200693504013`}}, {{0.5454545454545454, 
          0.10944321433929823`}}, {{0.6363636363636364, 
          0.11050652728797886`}}, {{0.7272727272727273, 
          0.10228934502721682`}}, {{0.8181818181818182, 
          0.08270167886797368}}, {{0.9090909090909091, 
          0.04944263276868714}}, {{1., 0.}}}]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Solution\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {0., 0.11132642735580428`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact solution\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"FEM\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"FD approximation\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    LineBox[{{0, 6.272}, {40, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.829234969896223*^9, 3.8292351792975607`*^9},
 CellLabel->
  "Out[546]=",ExpressionUUID->"5176b6f8-56df-4155-9c20-dd3ef7ebac35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"We", " ", "do", " ", "FD", " ", "with", " ", "n"}], " ", "=", 
    " ", "20"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"t4", "=", 
     RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M2", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]x2", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"M2", "+", "1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xx2", "[", "j_", "]"}], ":=", " ", 
     RowBox[{"j", " ", "\[CapitalDelta]x2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fun2", "[", "y_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"Sin", "[", "y", "]"}], 
     RowBox[{"Exp", "[", "y", "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BB2", ":=", " ", 
     RowBox[{"BB2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"fun2", "[", 
         RowBox[{"xx2", "[", "i", "]"}], "]"}], " ", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "M2"}], "}"}]}], "]"}]}]}], ";", " ", 
    RowBox[{"A2", ":=", " ", 
     RowBox[{"A2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
            RowBox[{"i", "==", 
             RowBox[{"j", "+", "1"}]}]}], "\[Rule]", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"M2", ",", "M2"}], "}"}]}], "]"}], " ", "+", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
            RowBox[{"i", "==", 
             RowBox[{"j", "-", "1"}]}]}], "\[Rule]", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"M2", ",", "M2"}], "}"}]}], "]"}], " ", "+", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
            RowBox[{"i", "==", "j"}]}], "\[Rule]", "2"}], ",", 
          RowBox[{"{", 
           RowBox[{"M2", ",", "M2"}], "}"}]}], "]"}]}], "//", 
       "Normal"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Anew2", " ", "=", " ", 
     RowBox[{"A2", " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]x2", "^", "2"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"X", "[", "j", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "M2"}], "}"}]}], "]"}]}], " ", ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sol12", " ", "=", " ", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Anew2", ".", " ", "XX2"}], " ", "\[Equal]", " ", "BB2"}], 
       ",", " ", "XX2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX12", " ", "=", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"XX2", " ", "/.", " ", "Sol12"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX12", " ", "=", " ", 
     RowBox[{"Prepend", "[", 
      RowBox[{"XX12", ",", "0"}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XX12", " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{"XX12", ",", "0"}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"Plot4", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[CapitalDelta]x2", " ", "j"}], ",", " ", 
          RowBox[{"XX12", "[", 
           RowBox[{"[", 
            RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{"M2", "+", "1"}]}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"Joined", "\[Rule]", " ", "True"}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
      RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", " ", "\"\< \>\""}], "}"}]}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Dashed", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", "\"\<FD approximation\>\"", "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<FD approximation n = 20\>\""}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t5", "=", 
     RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"time", "=", 
    RowBox[{"t5", "-", "t4"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8292349869376497`*^9, 3.829235010296192*^9}, {
  3.8292366789664135`*^9, 3.8292367060261507`*^9}},
 CellLabel->
  "In[560]:=",ExpressionUUID->"0c4b41e2-e698-44aa-bc75-a5e3fa947ca7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQjQ4k2hKBaIV9rFrCzPM3Ou0h/B32S5amrVTaPdN+
koonEB2yN+avjrihuhgqf8J+wTZTfX/blfbznlcC0Tn7ZTVV0psE1kPVX7Iv
7mLZN9F1k30oGFy1P17SIM93egtU/w37DSvXpq3j2W5/e1suCNln3Wtxy/+7
A2rePfsABVPe5P5d9oY8hw14Dj+wV7IT1Vu9eTfU/Ef2aQxTvIui9th/sTn/
2eb8Y3vdAuOrz4r2QO17am/x67mf2evd9tvBxj+zP8PeEdG5YRfU/hf2N04G
9TKs32FfBbbwpX1w9peQTRe3Qt3z2l6v8+KBlUyb7G1Bxn9+Y292bIry2dBV
UPe9s++0thSoOjnHHhKKH+xh4QkAPHqcUQ==
         "]]}}, {{
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 1, 0], 
                 Dashing[{Small, Small}], 
                 PointSize[Large]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[6.272]], CompressedData["
1:eJxTTMoPSmVmYGAQA2JGIGZiwAQSbYlAtMI+Vi1h5vkbnfYQ/g77JUvTVirt
nmk/ScUTiA7ZG/NXR9xQXQyVP2G/YJupvr/tSvt5zyuB6Jz9spoq6U0C66Hq
L9kXd7Hsm+i6yT4UDK7aHy9pkOc7vQWq/4b9hpVr09bxbLe/vS0XhOyz7rW4
5f/dATXvnn2Agilvcv8ue0OewwY8hx/YK9mJ6q3evBtq/iP7NIYp3kVRe+y/
2Jz/bHP+sb1ugfHVZ0V7oPY9tbf49dzP7PVu++1g45/Zn2HviOjcsAtq/wv7
GyeDehnW77CvAlv40j44+0vIpotboe55ba/XefHASqZN9rYg4z+/sTc7NkX5
bOgqqPve2XdaWwpUnZxjDwnFD/aw8AQARlqcUw==
         "]]}}, {{
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]]}, {}}, {{
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Dashing[{Small, Small}], 
         PointSize[Large]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\" \"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"FD approximation n = 20\"", TraditionalForm], 
     PlotRange -> {{0, 1.}, {0, 0.1111282606611332}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"FD approximation\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    LineBox[{{0, 6.272}, {40, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                 RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{
                   GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                   RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.829235011706532*^9, 3.8292351796274643`*^9, 
  3.8292367095764*^9},
 CellLabel->
  "Out[572]=",ExpressionUUID->"112e56ec-ae91-4a1d-92bf-fceff7f3bcf4"],

Cell[BoxData["0.26599999999999113`"], "Output",
 CellChangeTimes->{3.829235011706532*^9, 3.8292351796274643`*^9, 
  3.829236709596512*^9},
 CellLabel->
  "Out[574]=",ExpressionUUID->"d9a542a9-82bb-4edb-88a9-db6447f3abe9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Plot2", ",", "Plot4", ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Comparison between FD and FEM using n=20\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8292363250975876`*^9, 3.8292363592567406`*^9}},
 CellLabel->
  "In[559]:=",ExpressionUUID->"a5b08e24-142b-4c00-8f62-edd4c378fc35"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]], 
         PointBox[{{0., 0.}, {0.1, 0.026390136418910314`}, {0.2, 
          0.05165861668635712}, {0.30000000000000004`, 0.0744805960350851}, {
          0.4, 0.0932919814605839}, {0.5, 0.10627103331311326`}, {0.6, 
          0.11132158830462746`}, {0.7, 0.10605863374533007`}, {
          0.7999999999999999, 0.08779707243735706}, {0.8999999999999999, 
          0.05354463298020121}, {0.9999999999999999, 0.}}]}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Large]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQjQ4k2hKBaIV9rFrCzPM3Ou0h/B32S5amrVTaPdN+
koonEB2yN+avjrihuhgqf8J+wTZTfX/blfbznlcC0Tn7ZTVV0psE1kPVX7Iv
7mLZN9F1k30oGFy1P17SIM93egtU/w37DSvXpq3j2W5/e1suCNln3Wtxy/+7
A2rePfsABVPe5P5d9oY8hw14Dj+wV7IT1Vu9eTfU/Ef2aQxTvIui9th/sTn/
2eb8Y3vdAuOrz4r2QO17am/x67mf2evd9tvBxj+zP8PeEdG5YRfU/hf2N04G
9TKs32FfBbbwpX1w9peQTRe3Qt3z2l6v8+KBlUyb7G1Bxn9+Y292bIry2dBV
UPe9s++0thSoOjnHHhKKH+xh4QkAPHqcUQ==
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 1, 0], 
                  Dashing[{Small, Small}], 
                  PointSize[Large]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[6.272]], CompressedData["
1:eJxTTMoPSmVmYGAQA2JGIGZiwAQSbYlAtMI+Vi1h5vkbnfYQ/g77JUvTVirt
nmk/ScUTiA7ZG/NXR9xQXQyVP2G/YJupvr/tSvt5zyuB6Jz9spoq6U0C66Hq
L9kXd7Hsm+i6yT4UDK7aHy9pkOc7vQWq/4b9hpVr09bxbLe/vS0XhOyz7rW4
5f/dATXvnn2Agilvcv8ue0OewwY8hx/YK9mJ6q3evBtq/iP7NIYp3kVRe+y/
2Jz/bHP+sb1ugfHVZ0V7oPY9tbf49dzP7PVu++1g45/Zn2HviOjcsAtq/wv7
GyeDehnW77CvAlv40j44+0vIpotboe55ba/XefHASqZN9rYg4z+/sTc7NkX5
bOgqqPve2XdaWwpUnZxjDwnFD/aw8AQARlqcUw==
          "]]}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]]}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}], 
          PointSize[Large]]}, {}}}, {{}, {}}}}, {
    PlotLabel -> 
     FormBox["\"Comparison between FD and FEM using n=20\"", TraditionalForm],
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 0.9999999999999999}, {0, 0.11132158830462746`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"FEM\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"FD approximation\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    LineBox[{{0, 6.272}, {40, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8292363602067957`*^9},
 CellLabel->
  "Out[559]=",ExpressionUUID->"98331356-dcff-4f97-bb8b-c4098c64733a"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["8.3 Problem with Neumann BC",
 FontWeight->"Bold"]], "Section",
 CellChangeTimes->{{3.8282687517274656`*^9, 
  3.8282687892975397`*^9}},ExpressionUUID->"bbc5ab6e-94c7-475c-b31b-\
bc13ade4cef6"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["a) Write a program in Mathematica that solves (8.10) \
when k(x) = 1 and l = 1, using FEM method with piecewise polynomials of first \
order with f(x) = (x^2 + x - 1)*Exp(x), alpha = 0 and betha = 0. Compare the \
approximate solutions with the one obtained using the DSolve command.",
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0.5, 0]]], "Subsection",
 CellChangeTimes->{{3.82826880697772*^9, 
  3.828268927267419*^9}},ExpressionUUID->"707ca253-1e39-4213-96d4-\
9b42047d60b7"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "10"}], ";"}], "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "the", " ", "funtions"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ax", "[", "y_", "]"}], ":=", "1"}], "\n", 
 RowBox[{
  RowBox[{"fun", "[", "y_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"y", "^", "2"}], "+", "y", "-", "1"}], ")"}], "*", 
   RowBox[{"Exp", "[", "y", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"u0", "=", " ", "0"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.594386548921875*^9, {3.594386641140625*^9, 3.5943866428125*^9}, 
   3.597041504140625*^9, {3.60567783796875*^9, 3.605677838453125*^9}, {
   3.6081967441875*^9, 3.608196744265625*^9}, 3.60819683234375*^9, 
   3.6081968743125*^9, {3.733741875763049*^9, 3.7337418792830486`*^9}, 
   3.733850590161862*^9, 3.7342570808589644`*^9, {3.7342575408405647`*^9, 
   3.7342575447561646`*^9}, {3.7342575834909644`*^9, 
   3.7342576256577644`*^9}, {3.7342663847853217`*^9, 
   3.7342663857681236`*^9}, {3.734266509835141*^9, 3.7342665109427433`*^9}, {
   3.7342666492993865`*^9, 3.734266675008231*^9}, {3.8282696719218636`*^9, 
   3.828269672717376*^9}},
 CellLabel->
  "In[503]:=",ExpressionUUID->"54b40bb0-ca31-4ab7-8d8b-9ea7fa235b6a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalDelta]x", "=", 
   RowBox[{"N", "[", 
    RowBox[{"1", "/", "n"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "0", "]"}], " ", "=", " ", "0"}], ";"}], "\n", 
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"i", "++"}], ",", " ", 
   RowBox[{
    RowBox[{"x", "[", "i", "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"i", "-", "1"}], "]"}], "+", "\[CapitalDelta]x"}]}]}], 
  "]"}], "\n"}], "Input",
 CellChangeTimes->{{3.51427050453125*^9, 3.514270534*^9}, {
   3.51427291871875*^9, 3.514272929734375*^9}, {3.51428536059375*^9, 
   3.5142853646875*^9}, {3.5143910826875*^9, 3.51439109134375*^9}, {
   3.5143917479375*^9, 3.514391752171875*^9}, {3.514391834765625*^9, 
   3.514391836015625*^9}, 3.5299295542865*^9, 3.594386541609375*^9, {
   3.59438657490625*^9, 3.594386594046875*^9}, {3.594386647125*^9, 
   3.594386660984375*^9}, {3.594386759234375*^9, 3.594386761734375*^9}, {
   3.59704140559375*^9, 3.59704140746875*^9}, {3.6056778026875*^9, 
   3.60567786278125*^9}, {3.828269050937707*^9, 3.828269052187148*^9}, {
   3.828269102207135*^9, 3.8282691162470536`*^9}},
 CellLabel->
  "In[508]:=",ExpressionUUID->"8a276601-fce5-4a8e-8b26-70c509b10036"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vlin", "[", " ", 
   RowBox[{"k_", ",", "y_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"y", "-", 
           RowBox[{"x", "[", 
            RowBox[{"k", "-", "1"}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", "k", "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"k", "-", "1"}], "]"}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"k", "-", "1"}], "]"}], "\[LessEqual]", " ", "y", " ", 
         "\[LessEqual]", " ", 
         RowBox[{"x", "[", "k", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"k", "+", "1"}], "]"}], "-", "y"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"k", "+", "1"}], "]"}], "-", 
           RowBox[{"x", "[", "k", "]"}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", "k", "]"}], "\[LessEqual]", " ", "y", " ", 
         "\[LessEqual]", " ", 
         RowBox[{"x", "[", 
          RowBox[{"k", "+", "1"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "  ", 
        RowBox[{"y", " ", "<", " ", 
         RowBox[{"x", "[", 
          RowBox[{"k", "-", "1"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "  ", 
        RowBox[{"y", " ", ">", " ", 
         RowBox[{"x", "[", 
          RowBox[{"k", "+", "1"}], "]"}]}]}], "}"}]}], "}"}], "]"}], 
   "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"vlin", "[", 
   RowBox[{"n", ",", "y_"}], "]"}], ":=", "  ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"y", "-", 
           RowBox[{"x", "[", 
            RowBox[{"n", "-", "1"}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", "n", "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"n", "-", "1"}], "]"}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"n", "-", "1"}], "]"}], "\[LessEqual]", " ", "y", " ", 
         "\[LessEqual]", " ", 
         RowBox[{"x", "[", "n", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "  ", 
        RowBox[{"y", " ", "<", " ", 
         RowBox[{"x", "[", 
          RowBox[{"n", "-", "1"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "  ", 
        RowBox[{"y", " ", ">", " ", 
         RowBox[{"x", "[", "n", "]"}]}]}], "}"}]}], "}"}], "]"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"vlin", "[", 
   RowBox[{"0", ",", "y_"}], "]"}], "=", "  ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", "1", "]"}], "-", "y"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", "1", "]"}], "-", 
           RowBox[{"x", "[", "0", "]"}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "\[LessEqual]", " ", "y", " ", 
         "\[LessEqual]", " ", 
         RowBox[{"x", "[", "1", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "  ", 
        RowBox[{"y", " ", "<", " ", 
         RowBox[{"x", "[", "0", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "  ", 
        RowBox[{"y", " ", ">", " ", 
         RowBox[{"x", "[", "0", "]"}]}]}], "}"}]}], "}"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dvlin", "[", 
    RowBox[{"j_", ",", "y_"}], "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"vlin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], ",", "y"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dvlin", "[", 
    RowBox[{"n", ",", "y_"}], "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"vlin", "[", 
      RowBox[{"n", ",", "y"}], "]"}], ",", "y"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dvlin", "[", 
    RowBox[{"0", ",", "y_"}], "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"vlin", "[", 
      RowBox[{"0", ",", "y"}], "]"}], ",", "y"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.51041901117725*^9, 3.510419020599125*^9}, {
   3.51042016936475*^9, 3.51042017073975*^9}, {3.510420307786625*^9, 
   3.510420308724125*^9}, {3.51048582334375*^9, 3.5104858265625*^9}, {
   3.51048618871875*^9, 3.510486189640625*^9}, {3.510487294921875*^9, 
   3.5104872953125*^9}, {3.5105027035*^9, 3.51050270459375*^9}, {
   3.5142045258415003`*^9, 3.5142045271227503`*^9}, {3.59438655425*^9, 
   3.594386617796875*^9}, 3.594386669921875*^9, {3.594386701859375*^9, 
   3.5943867195625*^9}, {3.594386754671875*^9, 3.594386840328125*^9}, {
   3.59704141503125*^9, 3.59704143953125*^9}, {3.606620337796875*^9, 
   3.606620355828125*^9}, {3.606620452421875*^9, 3.6066204654375*^9}, 
   3.733741866711049*^9, {3.7342575067545643`*^9, 3.734257527190564*^9}, {
   3.8282691834771814`*^9, 3.82826918661938*^9}, {3.828269255601013*^9, 
   3.8282692617474923`*^9}},
 CellLabel->
  "In[511]:=",ExpressionUUID->"f526725f-e09f-474c-a226-7d2f758bd0b5"],

Cell[BoxData[{
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"j", "=", "1"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"j", "++"}], ",", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"j_", ",", "y_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"vlin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], "/;", "  ", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"j", ",", "1"}], "]"}], "\[Equal]", "0"}]}]}]}], "]"}], "\n", 
 RowBox[{"For", "[", " ", 
  RowBox[{
   RowBox[{"j", "=", "1"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "n"}], ",", " ", 
   RowBox[{"j", "++"}], ",", 
   RowBox[{
    RowBox[{"dv", "[", 
     RowBox[{"j_", ",", "y_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"dvlin", "[", 
      RowBox[{"j", ",", "y"}], "]"}], "/;", "  ", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"j", ",", "1"}], "]"}], "\[Equal]", "0"}]}]}]}], "]"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"v", " ", "[", 
      RowBox[{"1", ",", "y"}], "]"}], ",", 
     RowBox[{"dv", "[", 
      RowBox[{"1", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.510810318703125*^9, 3.51081034078125*^9}, {
  3.5943865591875*^9, 3.59438661596875*^9}, {3.5943867356875*^9, 
  3.594386735875*^9}, {3.594386904265625*^9, 3.594386908640625*^9}},
 CellLabel->
  "In[517]:=",ExpressionUUID->"2b84d8bd-3db6-4572-8845-1edf027d6b90"],

Cell[BoxData[{
 RowBox[{"Do", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"i", ",", "j"}], "]"}], " ", "=", " ", 
    RowBox[{"N", "[", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{"ax", "[", "s", "]"}], " ", 
       RowBox[{"dv", "[", 
        RowBox[{"j", ",", "s"}], "]"}], "  ", 
       RowBox[{"dv", "[", 
        RowBox[{"i", ",", "s"}], "]"}], 
       RowBox[{"\[DifferentialD]", "s"}]}]}], " ", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", 
     RowBox[{"n", "-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "0", ",", 
     RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"AA", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"i", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"n", "-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", 
       RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Det", "[", "AA", "]"}], ";"}], "\n", 
 RowBox[{"Do", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"b", "[", "j", "]"}], " ", "=", 
    RowBox[{"N", "[", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{"fun", "[", "s", "]"}], " ", 
       RowBox[{"v", "[", 
        RowBox[{"j", ",", "s"}], "]"}], 
       RowBox[{"\[DifferentialD]", "s"}]}]}], " ", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "0", ",", 
     RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ff", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"b", "[", "j", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", 
       RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Solve", " ", "the", " ", "system", " ", "and", " ", "write", " ", "the", 
    " ", 
    RowBox[{"solution", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", " ", "=", " ", 
   RowBox[{"N", "[", 
    RowBox[{"LinearSolve", "[", 
     RowBox[{"AA", ",", " ", "ff"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Solution", " ", "[", "y_", "]"}], " ", ":=", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "0"}], 
     RowBox[{"n", "-", "1"}]], 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"[", 
       RowBox[{"k", "+", "1"}], "]"}], "]"}], " ", 
     RowBox[{"v", "[", 
      RowBox[{"k", ",", "y"}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.51427050453125*^9, 3.514270534*^9}, {
   3.514273946453125*^9, 3.514273959421875*^9}, {3.514391333171875*^9, 
   3.514391335875*^9}, {3.59438656296875*^9, 3.59438660928125*^9}, {
   3.594386916234375*^9, 3.59438692346875*^9}, {3.594386965234375*^9, 
   3.594387003515625*^9}, 3.594388297484375*^9, {3.594388894265625*^9, 
   3.594388898859375*^9}, {3.597041448828125*^9, 3.59704146703125*^9}, {
   3.605677980828125*^9, 3.60567799746875*^9}, {3.60662036325*^9, 
   3.606620368125*^9}, 3.606620406734375*^9, {3.6081966986875*^9, 
   3.608196702796875*^9}, {3.60819677909375*^9, 3.60819681009375*^9}, {
   3.7342578292377644`*^9, 3.734257850687764*^9}, {3.7342591798385515`*^9, 
   3.7342592001804295`*^9}, {3.7342594533619375`*^9, 3.734259492314474*^9}, {
   3.7342595234362745`*^9, 3.734259551422495*^9}, {3.7342662915127583`*^9, 
   3.7342662917311583`*^9}, {3.7343193792970667`*^9, 
   3.7343193964175215`*^9}, {3.7343194292239313`*^9, 
   3.7343194786518393`*^9}, {3.7343195233864346`*^9, 
   3.7343195304341993`*^9}, {3.7343197792034616`*^9, 
   3.7343197796089916`*^9}, {3.8282696329171653`*^9, 3.8282696332372026`*^9}},
 CellLabel->
  "In[520]:=",ExpressionUUID->"59cae258-ab2d-4fb5-b42c-c8c369bb9472"],

Cell[BoxData[
 RowBox[{"gFEM", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "i", "]"}], ",", 
        RowBox[{"Solution", "[", 
         RowBox[{"x", "[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<FEM\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.51427050453125*^9, 3.514270534*^9}, {
   3.514273946453125*^9, 3.514273959421875*^9}, {3.514391333171875*^9, 
   3.514391335875*^9}, {3.59438656296875*^9, 3.59438660928125*^9}, {
   3.594386916234375*^9, 3.59438692346875*^9}, {3.594386965234375*^9, 
   3.594387003515625*^9}, 3.594388297484375*^9, {3.594388894265625*^9, 
   3.594388898859375*^9}, {3.594388955359375*^9, 3.59438895984375*^9}, {
   3.6066204170625*^9, 3.606620418078125*^9}, {3.60819672453125*^9, 
   3.60819672509375*^9}, {3.733741534859049*^9, 3.7337415917830486`*^9}, {
   3.733741624838049*^9, 3.733741625919049*^9}, {3.733741666371049*^9, 
   3.733741667346049*^9}, {3.7337416979690485`*^9, 3.733741741357049*^9}, {
   3.733741775612049*^9, 3.7337417792100487`*^9}, {3.733741936754049*^9, 
   3.7337419371370487`*^9}, {3.733850885531756*^9, 3.7338509526085925`*^9}, 
   3.734256044346819*^9, 3.7342560907691455`*^9, {3.734256276149561*^9, 
   3.7342562769295206`*^9}, {3.734256340589856*^9, 3.7342563481866665`*^9}, {
   3.7342564398328996`*^9, 3.734256454730708*^9}, {3.7342577521893644`*^9, 
   3.7342577902689643`*^9}, 3.734259143383095*^9, {3.7656070258478127`*^9, 
   3.7656070287231274`*^9}, {3.7656079176907434`*^9, 
   3.7656079182532835`*^9}, {3.828269598927026*^9, 3.8282696390671606`*^9}},
 CellLabel->
  "In[529]:=",ExpressionUUID->"759d2f9b-f628-48d4-8b88-39ad1ea07343"],

Cell[TextData[StyleBox["We calculate and plot the exact solution",
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.8282695152485423`*^9, 
  3.8282695252873297`*^9}},ExpressionUUID->"c5190be0-50de-43b0-89cc-\
28c73f2313e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           RowBox[{"ax", "'"}], "[", "x", "]"}]}], "*", 
         RowBox[{
          RowBox[{"u1", "'"}], "[", "x", "]"}]}], "-", 
        RowBox[{
         RowBox[{"ax", "[", "x", "]"}], "*", 
         RowBox[{
          RowBox[{"u1", "''"}], "[", "x", "]"}]}]}], "\[Equal]", 
       RowBox[{"fun", "[", "x", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"u1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"u1", "'"}], "[", "1", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"u1", "[", "1", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"u1", "[", "x", "]"}], ",", "x"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "We", " ", "calculate", " ", "the", " ", "exact", " ", "solution"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.734258010046564*^9, 3.7342580933349648`*^9}, {
   3.7342581511953645`*^9, 3.7342581705393643`*^9}, {3.7342582249857645`*^9, 
   3.734258277776164*^9}, 3.7342583181333647`*^9, 3.734258868816557*^9, {
   3.7342590331279488`*^9, 3.734259048009586*^9}, 3.765607077861781*^9, 
   3.7656079612576294`*^9, 3.7656116630721784`*^9, {3.7656123289704638`*^9, 
   3.765612330095723*^9}},
 CellLabel->
  "In[530]:=",ExpressionUUID->"63f0753b-76b0-4a37-91b9-a902c907bfcf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Uexact", "[", "x_", "]"}], ":=", 
  RowBox[{"\[ExponentialE]", "-", 
   RowBox[{"3", " ", 
    SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
   RowBox[{"3", " ", 
    SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}], "-", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "x"], " ", 
    SuperscriptBox["x", "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.7342638522284727`*^9, 3.7342638839121284`*^9}, {
   3.7342639255018015`*^9, 3.734263937997423*^9}, 3.7342648053121467`*^9, 
   3.8282694488371763`*^9},
 CellLabel->
  "In[531]:=",ExpressionUUID->"f3995657-44b9-488d-ba83-94240a42a051"],

Cell[BoxData[
 RowBox[{"gEX", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Uexact", "[", "x", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<exact solution\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.7342580146173644`*^9, {3.734259054420857*^9, 3.7342590613781004`*^9}, {
   3.7342657599758234`*^9, 3.7342657623158274`*^9}, {3.7656070972842813`*^9, 
   3.765607102909751*^9}, {3.7656079290511074`*^9, 3.765607929863905*^9}, 
   3.8282694612174225`*^9},
 CellLabel->
  "In[532]:=",ExpressionUUID->"a73999b9-2e0d-4353-8fe5-332c6ce85d84"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"gEX", ",", "gFEM"}], "]"}]], "Input",
 CellChangeTimes->{{3.73428249286696*^9, 3.734282504821644*^9}, {
  3.7656071059567213`*^9, 3.7656071144102154`*^9}, {3.765607449792427*^9, 
  3.7656074542302275`*^9}},
 CellLabel->
  "In[533]:=",ExpressionUUID->"0d037f29-9e5c-45b6-a3fb-c4a09afa39fd"],

Cell[TextData[StyleBox["We compute the discrete error",
 FontWeight->"Bold",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Text",
 CellChangeTimes->{{3.828269491527045*^9, 
  3.8282694976120825`*^9}},ExpressionUUID->"b8941143-30d0-498b-b8b8-\
c64241e887fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DiscreteError", "[", "i_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Uexact", "[", 
    RowBox[{"x", "[", "i", "]"}], "]"}], "-", 
   RowBox[{"Solution", "[", 
    RowBox[{"x", "[", "i", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DiscreteError", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "Large", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.765608004896756*^9, 3.7656080060841837`*^9}, {
   3.766309742007723*^9, 3.766309742662493*^9}, {3.766309839942587*^9, 
   3.7663098402774744`*^9}, 3.8282694815521235`*^9, {3.828269650157401*^9, 
   3.8282696502674036`*^9}},
 CellLabel->
  "In[534]:=",ExpressionUUID->"2781d85e-160f-42d8-b557-8b0e8c9a0c4c"],

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"DiscreteError", "[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8286052793806744`*^9, 3.8286052958648386`*^9}, {
  3.8286053415860567`*^9, 3.8286053424245586`*^9}},
 CellLabel->
  "In[538]:=",ExpressionUUID->"b4892dc2-80e0-45ea-8a61-f872211fe037"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{725, 772},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"12.0 para Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 231, 5, 113, "Chapter",ExpressionUUID->"786a3222-c28a-4a8a-ae61-60304c6de3e3"],
Cell[CellGroupData[{
Cell[836, 31, 210, 4, 67, "Section",ExpressionUUID->"03e389e1-8da4-40c2-a793-abe552aa4d17"],
Cell[CellGroupData[{
Cell[1071, 39, 511, 9, 79, "Subsection",ExpressionUUID->"3015dc94-c2be-48da-81e9-5fadb2e3a2a5"],
Cell[1585, 50, 1002, 23, 158, "Input",ExpressionUUID->"bb4cd7b9-5dc0-4295-8649-12281936c14e"],
Cell[CellGroupData[{
Cell[2612, 77, 1139, 29, 140, "Input",ExpressionUUID->"80dc6b85-4d99-49a6-a1ac-151bf2eb4f88"],
Cell[3754, 108, 63575, 1068, 245, "Output",ExpressionUUID->"b0e9f4c8-d4ab-4d46-855b-b38aeee025ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67366, 1181, 1164, 34, 193, "Input",ExpressionUUID->"57449121-1525-4106-82fd-92a3e09f8a48"],
Cell[68533, 1217, 62118, 1046, 247, "Output",ExpressionUUID->"2b9577a6-587f-4566-a0a9-f606cb512e18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130688, 2268, 2711, 79, 267, "Input",ExpressionUUID->"d96c2444-d214-4ce0-8615-7c66efdac775"],
Cell[133402, 2349, 12177, 222, 236, "Output",ExpressionUUID->"8c0f4b41-e7e2-46f4-9bf3-e8b5bc034e69"],
Cell[145582, 2573, 41323, 701, 230, "Output",ExpressionUUID->"84349fab-8cc5-4f54-bd42-fc13ac34bf8d"],
Cell[186908, 3276, 39940, 679, 232, "Output",ExpressionUUID->"905c1199-fdd3-4e24-824e-fd24269c1f51"]
}, Open  ]],
Cell[226863, 3958, 1809, 56, 327, "Input",ExpressionUUID->"8e894d03-f420-40db-8ef4-db27d6b7cc1c"],
Cell[228675, 4016, 1124, 34, 155, "Input",ExpressionUUID->"5fb217fd-883c-457d-9993-031f54b9d427"],
Cell[CellGroupData[{
Cell[229824, 4054, 1484, 40, 193, "Input",ExpressionUUID->"cd26d408-2d44-45c8-aca0-c257c9c5dd14"],
Cell[231311, 4096, 22817, 434, 249, "Output",ExpressionUUID->"ba02929d-2002-4211-8aab-e4f90b981235"],
Cell[254131, 4532, 26556, 456, 235, "Output",ExpressionUUID->"b98d559c-ca8f-480b-ba1b-4eb23d10764a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280724, 4993, 1013, 25, 138, "Input",ExpressionUUID->"aea15d57-8c05-4853-b129-3291ec6fc983"],
Cell[281740, 5020, 1901, 47, 230, "Output",ExpressionUUID->"0360133e-99bd-4031-ad0b-88a8eace49a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283678, 5072, 758, 20, 64, "Input",ExpressionUUID->"093e0011-1abf-426f-a9a3-3e3bb0feaa0a"],
Cell[284439, 5094, 172, 2, 32, "Output",ExpressionUUID->"9138697e-01dd-46b2-ae23-11739e4fee9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284648, 5101, 307, 4, 45, "Input",ExpressionUUID->"baeed611-a1b3-4849-b22f-6146555b3a84"],
Cell[284958, 5107, 352, 11, 46, "Output",ExpressionUUID->"8f8cdfe7-a09d-45b4-b5f3-cf3c3569ad66"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[285359, 5124, 510, 8, 89, "Subsection",ExpressionUUID->"c9dcfd4a-4e37-428e-b3e4-4eeb192c59f1"],
Cell[CellGroupData[{
Cell[285894, 5136, 299, 6, 44, "Subsubsection",ExpressionUUID->"5d41ffb9-cbd8-406f-a95a-cf0bccd1f135"],
Cell[CellGroupData[{
Cell[286218, 5146, 2301, 61, 343, "Input",ExpressionUUID->"e8a08b7c-a76d-4b34-af63-cbd43f3ebece"],
Cell[288522, 5209, 63528, 1067, 230, "Output",ExpressionUUID->"eec7deac-7368-4223-97be-2bd8a3eb9723"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352087, 6281, 1049, 31, 156, "Input",ExpressionUUID->"655a598b-57bb-4170-8a35-e3f29827d891"],
Cell[353139, 6314, 62043, 1044, 232, "Output",ExpressionUUID->"ead99646-4d55-41e7-a986-eeda263e87bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415219, 7363, 2017, 60, 230, "Input",ExpressionUUID->"1bddd8d7-ac1d-436b-94cd-1f68177a34ec"],
Cell[417239, 7425, 12205, 223, 236, "Output",ExpressionUUID->"06b9e062-9169-4b6c-87ad-fd93169bf0be"],
Cell[429447, 7650, 41358, 702, 230, "Output",ExpressionUUID->"e8adb59a-fe44-4531-a1d0-88cd820345e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470842, 8357, 755, 21, 119, "Input",ExpressionUUID->"8f7e0a93-6cce-47eb-b23f-11deaee54440"],
Cell[471600, 8380, 39974, 680, 232, "Output",ExpressionUUID->"e95b509e-c661-40fd-8811-7fe456bec7f1"]
}, Open  ]],
Cell[511589, 9063, 1813, 56, 335, "Input",ExpressionUUID->"a8cb9dee-415c-4841-982f-2b77c7159ad5"],
Cell[513405, 9121, 584, 18, 97, "Input",ExpressionUUID->"80b5c93d-4039-4ce9-8338-33dbce593fd1"],
Cell[CellGroupData[{
Cell[514014, 9143, 1146, 30, 175, "Input",ExpressionUUID->"0950c026-1137-431e-8227-14eeadd87de8"],
Cell[515163, 9175, 14339, 278, 255, "Output",ExpressionUUID->"41228657-2661-4d6b-9431-a6c650bc81cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[529539, 9458, 296, 8, 66, "Input",ExpressionUUID->"92f7bb5c-e8e1-48cd-a4ba-3a7ccb7572ee"],
Cell[529838, 9468, 194, 3, 32, "Output",ExpressionUUID->"65d14ca9-fad4-4887-936e-d88c4a38235b"]
}, Open  ]],
Cell[530047, 9474, 287, 6, 34, "Text",ExpressionUUID->"83906b34-2ee5-4f03-95aa-9881a480d96c"],
Cell[CellGroupData[{
Cell[530359, 9484, 3269, 98, 436, "Input",ExpressionUUID->"60dd5f18-d353-4a61-9411-d0dff79e901e"],
Cell[533631, 9584, 25430, 482, 240, "Output",ExpressionUUID->"f90f07aa-d461-41db-be14-967bcdc34b8d"],
Cell[559064, 10068, 1912, 47, 234, "Output",ExpressionUUID->"46a5d972-e8b2-4c67-8161-9c66e36cc717"],
Cell[560979, 10117, 195, 3, 32, "Output",ExpressionUUID->"b67ce3aa-e483-4d60-a009-435908a99944"]
}, Open  ]],
Cell[561189, 10123, 282, 6, 34, "Text",ExpressionUUID->"d3aad010-b22f-4d41-a991-54323491c3d3"],
Cell[561474, 10131, 4159, 125, 624, "Input",ExpressionUUID->"8f86f244-f44e-4d41-95d8-1ec8ddd709af"],
Cell[565636, 10258, 246, 5, 34, "Text",ExpressionUUID->"263aecf7-a1c9-48f6-acec-e68bc5e8c525"],
Cell[CellGroupData[{
Cell[565907, 10267, 197, 4, 85, "Input",ExpressionUUID->"3a95e319-2dbc-4016-b98a-6044c2bfff91"],
Cell[566107, 10273, 20235, 399, 258, "Output",ExpressionUUID->"1bb83de7-ecea-435d-b8b8-18cf28dcb6b4"],
Cell[586345, 10674, 192, 3, 32, "Output",ExpressionUUID->"38e7c804-e213-4d2c-991d-8ab5fade0860"],
Cell[586540, 10679, 196, 3, 32, "Output",ExpressionUUID->"ea14394f-785f-4e79-acd2-f72ebb8e785a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[586785, 10688, 299, 6, 36, "Subsubsection",ExpressionUUID->"e5d965d1-3149-4aa5-bb52-b6e8e5547fdd"],
Cell[587087, 10696, 889, 26, 232, "Input",ExpressionUUID->"d236cf6b-9147-4b3f-a969-0e82284bcadd"],
Cell[587979, 10724, 1744, 51, 267, "Input",ExpressionUUID->"6d010c00-24e2-45ae-b4d0-999987200371"],
Cell[589726, 10777, 1991, 59, 230, "Input",ExpressionUUID->"ed8f3b10-2502-4b58-9f69-762c1588745a"],
Cell[591720, 10838, 729, 20, 119, "Input",ExpressionUUID->"41fb267b-e54d-44dd-ae10-954f6a03d13a"],
Cell[CellGroupData[{
Cell[592474, 10862, 2984, 92, 566, "Input",ExpressionUUID->"dc447390-6d56-41a5-9d8b-b8991b107e09"],
Cell[595461, 10956, 14187, 275, 252, "Output",ExpressionUUID->"88b4970d-d03d-4138-99d8-fe5db72b2b38"]
}, Open  ]],
Cell[609663, 11234, 284, 6, 34, "Text",ExpressionUUID->"7d6d1f80-30e6-446c-b214-72545f53b397"],
Cell[CellGroupData[{
Cell[609972, 11244, 1695, 49, 230, "Input",ExpressionUUID->"a6934e86-3108-4846-875b-00311e716fb8"],
Cell[611670, 11295, 626, 17, 49, "Output",ExpressionUUID->"5d7093bf-78a8-4a8c-bf10-cbbe1f4b955c"],
Cell[612299, 11314, 25411, 482, 237, "Output",ExpressionUUID->"bc6c9d44-db73-4121-b89d-ce8f84e47a6c"]
}, Open  ]],
Cell[637725, 11799, 244, 5, 34, "Text",ExpressionUUID->"5fb0e8db-c0a6-4d62-9480-22ca25c038fe"],
Cell[CellGroupData[{
Cell[637994, 11808, 1440, 43, 194, "Input",ExpressionUUID->"ee418e8e-5431-4fdf-9ad5-f137533460f1"],
Cell[639437, 11853, 1931, 48, 237, "Output",ExpressionUUID->"31766b0f-e77b-478b-abc9-685a8f8c871f"],
Cell[641371, 11903, 201, 3, 32, "Output",ExpressionUUID->"c1a19cf3-e8a7-4bc2-9a9b-b97c02e279e8"]
}, Open  ]],
Cell[641587, 11909, 276, 6, 34, "Text",ExpressionUUID->"1640098f-c6b8-40b3-8072-d5899bc4d406"],
Cell[641866, 11917, 4310, 130, 661, "Input",ExpressionUUID->"4efe6cdb-4b65-40e2-8a22-184795006ab8"],
Cell[646179, 12049, 254, 5, 34, "Text",ExpressionUUID->"d0c79526-ebf1-44f6-a877-671c8ac6fee5"],
Cell[CellGroupData[{
Cell[646458, 12058, 197, 4, 85, "Input",ExpressionUUID->"511ffa45-504f-44b6-a2dd-50a7add3df1b"],
Cell[646658, 12064, 20090, 397, 254, "Output",ExpressionUUID->"e6cdfd21-0493-47e5-96f2-93d3c9c28685"],
Cell[666751, 12463, 194, 3, 32, "Output",ExpressionUUID->"9c83127d-d93a-45dd-aa71-2cb6bb61fa77"],
Cell[666948, 12468, 196, 3, 89, "Output",ExpressionUUID->"a17d27c3-bf5b-4ef3-983f-cb4357dd74bb"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[667217, 12479, 319, 5, 67, "Section",ExpressionUUID->"e07821ae-d6c8-4871-a964-8ac09a4bf042"],
Cell[CellGroupData[{
Cell[667561, 12488, 575, 9, 131, "Subsection",ExpressionUUID->"7ebe133b-c745-44c6-8f37-6f0ec85bbe28"],
Cell[CellGroupData[{
Cell[668161, 12501, 299, 6, 44, "Subsubsection",ExpressionUUID->"b75521d4-c864-4d3d-a45b-cef62623b87e"],
Cell[668463, 12509, 1040, 30, 253, "Input",ExpressionUUID->"8650f16d-afe9-40ab-9bbb-7ee93d4dbbf3"],
Cell[669506, 12541, 3802, 115, 325, "Input",ExpressionUUID->"56ebbeb9-1bf6-439d-af85-4669f710ba6f"],
Cell[CellGroupData[{
Cell[673333, 12660, 1364, 41, 119, "Input",ExpressionUUID->"4d931d0f-e3b9-48db-bf7e-38150c70856e"],
Cell[674700, 12703, 7081, 141, 232, "Output",ExpressionUUID->"ee454f7b-61f4-4ae3-a31e-24b922aa5ef3"]
}, Open  ]],
Cell[681796, 12847, 1906, 61, 306, "Input",ExpressionUUID->"061c6171-5d71-41d9-95fb-0e593a6cc8bd"],
Cell[CellGroupData[{
Cell[683727, 12912, 1225, 34, 214, "Input",ExpressionUUID->"f06bd11e-165e-45d3-82b9-527600146889"],
Cell[684955, 12948, 350, 6, 22, "Print",ExpressionUUID->"9dd798dd-1409-4227-aa1f-671e3672279e"],
Cell[685308, 12956, 317, 5, 32, "Output",ExpressionUUID->"9273a432-6209-40b7-8b33-18e4d9a3d806"]
}, Open  ]],
Cell[CellGroupData[{
Cell[685662, 12966, 2310, 62, 361, "Input",ExpressionUUID->"9647885a-4a47-4631-aa7c-024becaf1cba"],
Cell[687975, 13030, 14132, 276, 255, "Output",ExpressionUUID->"785c6114-8c99-4aff-ba8f-ba71c3624c33"],
Cell[702110, 13308, 8749, 185, 262, "Output",ExpressionUUID->"459fbcc6-7e6d-4e4d-88c3-b36eb335bd82"],
Cell[710862, 13495, 20361, 398, 262, "Output",ExpressionUUID->"12624ea9-0cdf-41ce-a282-1cfb80298fd1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[731260, 13898, 1675, 46, 194, "Input",ExpressionUUID->"28142c9b-5c93-46ca-b148-662857bb905a"],
Cell[732938, 13946, 30914, 534, 70, "Output",ExpressionUUID->"e1c8d8be-b8d7-452a-b6fc-483c889563ab"],
Cell[763855, 14482, 2084, 50, 70, "Output",ExpressionUUID->"b7883e40-112b-407d-96bd-0e23fb646e82"],
Cell[765942, 14534, 343, 5, 70, "Output",ExpressionUUID->"1b72d288-d7ae-49e6-bb64-3182cd3ab143"]
}, Open  ]],
Cell[CellGroupData[{
Cell[766322, 14544, 4938, 137, 735, "Input",ExpressionUUID->"b734b7e4-7176-49ea-9283-d34e22792ddd"],
Cell[771263, 14683, 10969, 243, 70, "Output",ExpressionUUID->"01484adb-8a50-46c2-b4ea-ad13d9090f07"],
Cell[782235, 14928, 364, 6, 70, "Print",ExpressionUUID->"d9c5b4f7-3e86-4b8e-a293-708f525a3079"],
Cell[782602, 14936, 341, 5, 70, "Output",ExpressionUUID->"be375ca8-bce7-4ce3-8066-dede5ea3fa04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[782980, 14946, 847, 23, 101, "Input",ExpressionUUID->"ab8be647-0980-4b30-838c-ac15cec1e703"],
Cell[783830, 14971, 1311, 37, 70, "Output",ExpressionUUID->"b674f2c9-bf70-47d3-942c-2c4e9acfb89a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[785178, 15013, 783, 15, 82, "Input",ExpressionUUID->"c956c80c-bbcf-4c6b-8113-f0cc7c90fa97"],
Cell[785964, 15030, 18209, 384, 70, "Output",ExpressionUUID->"f5542c43-3315-4a79-acfe-9e5a62903e5c"],
Cell[804176, 15416, 30067, 607, 70, "Output",ExpressionUUID->"588635a2-2924-49ff-bdf4-71934cf52129"]
}, Open  ]],
Cell[834258, 16026, 5581, 149, 735, "Input",ExpressionUUID->"661ce187-5ff0-4ced-967d-f3b5b21f0a79",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[839842, 16177, 10725, 242, 273, "Output",ExpressionUUID->"423a03de-0ef3-4830-9425-61766c1f331f"],
Cell[850570, 16421, 268, 4, 32, "Output",ExpressionUUID->"2e6c9705-bb4d-4804-be0f-2953817ff263"],
Cell[CellGroupData[{
Cell[850863, 16429, 340, 8, 45, "Input",ExpressionUUID->"580b00be-acb7-4354-98be-e249e3d62521"],
Cell[851206, 16439, 17752, 380, 262, "Output",ExpressionUUID->"a1b43c1d-3fe9-47f6-be5f-e14cc4e341bf"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[869007, 16825, 301, 6, 36, "Subsubsection",ExpressionUUID->"7d734945-57b0-47a6-9294-72a3fd38c0a8"],
Cell[869311, 16833, 820, 24, 234, "Input",ExpressionUUID->"6d498f28-336d-4781-9435-9a6f7fc399cb"],
Cell[870134, 16859, 3802, 115, 325, "Input",ExpressionUUID->"d4147650-af16-42e3-9d2f-e9e5b208b357"],
Cell[CellGroupData[{
Cell[873961, 16978, 3169, 100, 418, "Input",ExpressionUUID->"0e62b4eb-48ff-40c3-89eb-c2235f22af1d"],
Cell[877133, 17080, 6982, 140, 232, "Output",ExpressionUUID->"20510807-2b48-432b-91eb-d0e35b478b8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[884152, 17225, 1151, 33, 177, "Input",ExpressionUUID->"d96fbbe4-8f20-4eb5-b40d-b827c0eeab35"],
Cell[885306, 17260, 219, 4, 32, "Output",ExpressionUUID->"1fe5c1c8-4b8a-4875-af75-e1759980cd18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885562, 17269, 2217, 58, 305, "Input",ExpressionUUID->"4e2193b7-751f-46cb-a251-b600dc175240"],
Cell[887782, 17329, 14091, 276, 252, "Output",ExpressionUUID->"963c51d3-f5ec-4d74-bc85-d125488e12eb"],
Cell[901876, 17607, 8513, 182, 243, "Output",ExpressionUUID->"fff29c22-6387-47da-be5d-9ed6c66447dd"],
Cell[910392, 17791, 20124, 395, 243, "Output",ExpressionUUID->"827e3166-023f-44bd-a2c0-87ca4fa960cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[930553, 18191, 1624, 44, 176, "Input",ExpressionUUID->"ae0216d6-5c15-4301-9772-4ed038d7cb40"],
Cell[932180, 18237, 30824, 532, 242, "Output",ExpressionUUID->"5ea51169-4fc7-4b8c-9b95-a11b68929b89"],
Cell[963007, 18771, 1883, 46, 214, "Output",ExpressionUUID->"f7715b66-670a-4e00-9426-ec1c5834bc6d"],
Cell[964893, 18819, 252, 4, 32, "Output",ExpressionUUID->"9c7549c9-4b25-442b-9745-b10be86d632a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[965182, 18828, 4843, 135, 735, "Input",ExpressionUUID->"3a05fa40-6826-43e1-8276-4e01d1d24a8f"],
Cell[970028, 18965, 10826, 241, 254, "Output",ExpressionUUID->"03e3b6c2-0967-484c-9200-cb54e0c452a6"],
Cell[980857, 19208, 220, 4, 22, "Print",ExpressionUUID->"755a58c7-af33-441a-96fa-0bc14b7beb0b"],
Cell[981080, 19214, 198, 3, 32, "Output",ExpressionUUID->"62ecb445-93b3-4ec6-adab-6ab1b0d2622a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[981315, 19222, 779, 22, 101, "Input",ExpressionUUID->"a4c8c585-09f1-43af-8fda-64232bf58009"],
Cell[982097, 19246, 1234, 36, 253, "Output",ExpressionUUID->"423e3017-a409-42d8-ba23-93b2b743dc2f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[983368, 19287, 409, 10, 82, "Input",ExpressionUUID->"f945a32a-ed36-4e1e-95f9-8f40a8ff5c1e"],
Cell[983780, 19299, 17891, 379, 258, "Output",ExpressionUUID->"c9edee0a-a96d-46b0-a7bd-47add9bc2b32"],
Cell[1001674, 19680, 29946, 605, 252, "Output",ExpressionUUID->"5176b6f8-56df-4155-9c20-dd3ef7ebac35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1031657, 20290, 5164, 141, 735, "Input",ExpressionUUID->"0c4b41e2-e698-44aa-bc75-a5e3fa947ca7"],
Cell[1036824, 20433, 10675, 242, 269, "Output",ExpressionUUID->"112e56ec-ae91-4a1d-92bf-fceff7f3bcf4"],
Cell[1047502, 20677, 221, 4, 65, "Output",ExpressionUUID->"d9a542a9-82bb-4edb-88a9-db6447f3abe9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1047760, 20686, 345, 8, 45, "Input",ExpressionUUID->"a5b08e24-142b-4c00-8f62-edd4c378fc35"],
Cell[1048108, 20696, 17619, 378, 258, "Output",ExpressionUUID->"98331356-dcff-4f97-bb8b-c4098c64733a"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1065800, 21082, 217, 4, 67, "Section",ExpressionUUID->"bbc5ab6e-94c7-475c-b31b-bc13ade4cef6"],
Cell[CellGroupData[{
Cell[1066042, 21090, 504, 8, 157, "Subsection",ExpressionUUID->"707ca253-1e39-4213-96d4-9b42047d60b7"],
Cell[1066549, 21100, 1357, 31, 179, "Input",ExpressionUUID->"54b40bb0-ca31-4ab7-8d8b-9ea7fa235b6a"],
Cell[1067909, 21133, 1337, 30, 122, "Input",ExpressionUUID->"8a276601-fce5-4a8e-8b26-70c509b10036"],
Cell[1069249, 21165, 5528, 155, 400, "Input",ExpressionUUID->"f526725f-e09f-474c-a226-7d2f758bd0b5"],
Cell[1074780, 21322, 1565, 44, 119, "Input",ExpressionUUID->"2b84d8bd-3db6-4572-8845-1edf027d6b90"],
Cell[1076348, 21368, 4018, 106, 434, "Input",ExpressionUUID->"59cae258-ab2d-4fb5-b42c-c8c369bb9472"],
Cell[1080369, 21476, 2005, 38, 82, "Input",ExpressionUUID->"759d2f9b-f628-48d4-8b88-39ad1ea07343"],
Cell[1082377, 21516, 264, 5, 34, "Text",ExpressionUUID->"c5190be0-50de-43b0-89cc-28c73f2313e2"],
Cell[1082644, 21523, 1460, 39, 66, "Input",ExpressionUUID->"63f0753b-76b0-4a37-91b9-a902c907bfcf"],
Cell[1084107, 21564, 626, 15, 28, "Input",ExpressionUUID->"f3995657-44b9-488d-ba83-94240a42a051"],
Cell[1084736, 21581, 751, 17, 82, "Input",ExpressionUUID->"a73999b9-2e0d-4353-8fe5-332c6ce85d84"],
Cell[1085490, 21600, 337, 7, 45, "Input",ExpressionUUID->"0d037f29-9e5c-45b6-a3fb-c4a09afa39fd"],
Cell[1085830, 21609, 251, 5, 34, "Text",ExpressionUUID->"b8941143-30d0-498b-b8b8-c64241e887fa"],
Cell[1086084, 21616, 909, 22, 64, "Input",ExpressionUUID->"2781d85e-160f-42d8-b557-8b0e8c9a0c4c"],
Cell[1086996, 21640, 454, 11, 45, "Input",ExpressionUUID->"b4892dc2-80e0-45ea-8a61-f872211fe037"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

