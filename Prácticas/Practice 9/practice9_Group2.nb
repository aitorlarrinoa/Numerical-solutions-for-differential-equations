(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    728892,      15308]
NotebookOptionsPosition[    718683,      15152]
NotebookOutlinePosition[    719025,      15167]
CellTagsIndexPosition[    718982,      15164]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Practise 9: group 2. Nerea Andia, Ander Cano, Mikel Lamela and Aitor Larrinoa.\
\>", "Chapter",
 CellChangeTimes->{{3.8295386322372065`*^9, 3.829538637087147*^9}, {
  3.8295386756934767`*^9, 
  3.82953867815687*^9}},ExpressionUUID->"3a9e9938-56c5-4a93-a580-\
c71afa66faf3"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["9.1 Spectral Fourier Differentiation Matrices",
 FontWeight->"Bold"]], "Section",
 CellChangeTimes->{{3.8295386905124226`*^9, 
  3.8295387071471586`*^9}},ExpressionUUID->"2e35e026-edd2-4c6f-b0b9-\
b24c1279a971"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["a) Write a program in Mathematica that computes the first and \
second derivatives, using commands ToeplitzMatrix in order to construct (9.2) \
and (9.3)",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[".",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Subsection",
 CellChangeTimes->{{3.8295387266975946`*^9, 
  3.8295387800970993`*^9}},ExpressionUUID->"f013bfa0-2f15-4856-b841-\
dd752c58d5da"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["N = 20",
 FontWeight->"Bold",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Subsubsection",
 CellChangeTimes->{{3.82953880355753*^9, 3.829538815067209*^9}, {
  3.829538873567161*^9, 3.829538902796723*^9}, {3.8295389411967516`*^9, 
  3.8295389454073877`*^9}, {3.8295390785622897`*^9, 
  3.829539083787052*^9}},ExpressionUUID->"6f786b53-6a5b-45af-9e77-\
c62819b1db33"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
   "Set", " ", "up", " ", "grid", " ", "and", " ", "the", " ", 
    "differentiation", " ", 
    RowBox[{"matrix", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NN", "=", "20"}], ";", " ", 
    RowBox[{"(*", " ", "EVEN", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"h", "=", 
     RowBox[{"2", "*", 
      RowBox[{"Pi", "/", "NN"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"h", "*", "i"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Now", ",", " ", 
     RowBox[{
     "we", " ", "are", " ", "going", " ", "to", " ", "calculate", " ", "the", 
      " ", "Fourier", " ", "differentiation", " ", "matrix", " ", "for", " ", 
      "first", " ", "derivative"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{".5", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", 
         RowBox[{"(", "i", ")"}]}], "*", 
        RowBox[{"Cot", "[", 
         RowBox[{"i", "*", 
          RowBox[{"h", "/", "2"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"column1", "=", " ", 
     RowBox[{"Prepend", "[", 
      RowBox[{"column1", ",", "0."}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{".5", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", 
         RowBox[{"(", "i", ")"}]}], "*", 
        RowBox[{"Cot", "[", 
         RowBox[{"i", "*", 
          RowBox[{"h", "/", "2"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"NN", "-", "1"}], ",", "1", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"column2", "=", " ", 
     RowBox[{"Prepend", "[", 
      RowBox[{"column2", ",", "0."}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DD1", "=", 
     RowBox[{"ToeplitzMatrix", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Be", " ", "careful"}], ",", " ", 
     RowBox[{"the", " ", "two", " ", "columns", " ", "are", " ", "needed"}]}],
     "  ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "DD1", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.829539141477397*^9, 3.8295391418770657`*^9}, {
  3.829539172617295*^9, 3.8295392054351377`*^9}, {3.829539314587134*^9, 
  3.829539316127084*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"5ac4c5af-b2d7-41f2-87fa-1220b3e280a3"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Now", ",", " ", 
   RowBox[{
   "we", " ", "are", " ", "going", " ", "to", " ", "calculate", " ", "the", 
    " ", "Fourier", " ", "differentiation", " ", "matrix", " ", "for", " ", 
    "second", " ", "order", " ", "derivative"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8295393852785606`*^9, 3.829539418096822*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"38bd1367-8cf4-487b-a70d-161127533acb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"column3", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", 
        RowBox[{"(", "i", ")"}]}]}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"i", "*", 
            RowBox[{"h", "/", "2"}]}], "]"}], "^", "2"}], ")"}]}], ")"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"NN", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"column3", "=", " ", 
   RowBox[{"Prepend", "[", 
    RowBox[{"column3", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Pi", "^", "2"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"3", "*", 
         RowBox[{"h", "^", "2"}]}], ")"}]}], "-", 
      RowBox[{"1", "/", "6"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"column4", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", 
        RowBox[{"(", "i", ")"}]}]}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"i", "*", 
            RowBox[{"h", "/", "2"}]}], "]"}], "^", "2"}], ")"}]}], ")"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"NN", "-", "1"}], ",", "1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"column4", "=", " ", 
   RowBox[{"Prepend", "[", 
    RowBox[{"column4", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Pi", "^", "2"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"3", "*", 
         RowBox[{"h", "^", "2"}]}], ")"}]}], "-", 
      RowBox[{"1", "/", "6"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DD2", "=", 
    RowBox[{"ToeplitzMatrix", "[", 
     RowBox[{"column3", ",", "column4"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Be", " ", "careful"}], ",", " ", 
    RowBox[{"the", " ", "two", " ", "columns", " ", "are", " ", "needed"}]}], 
   "  ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "DD2", "]"}], ";"}]}], "Input",
 CellLabel->
  "In[322]:=",ExpressionUUID->"763b61e5-31e6-4961-b6ed-056154c2cf77"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{"Differentiation", " ", "of", " ", "Exp", 
     RowBox[{"(", 
      RowBox[{"Sin", 
       RowBox[{"(", "x", ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Cos", 
          RowBox[{"(", "x", ")"}]}], ")"}], "^", "2"}]}], ")"}]}], ":"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"v", "[", "y_", "]"}], ":=", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"Sin", "[", "y", "]"}], 
       SuperscriptBox[
        RowBox[{"Cos", "[", "y", "]"}], "2"]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"First", " ", "derivative"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derv1", "[", "y_", "]"}], "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"v", "[", "y", "]"}], ",", "y"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Second", " ", "derivative"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"derv2", "[", "y_", "]"}], "=", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"v", "[", "y", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Plot", " ", "of", " ", "the", " ", "f", " ", "function", " ", "and", " ",
      "its", " ", "derivatives", " ", "computed", " ", "using", " ", "the", 
     " ", "command", " ", "D"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot1", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"v", "[", "y", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Original function N = 20\>\""}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Exact Original function\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"derv1", "[", "y", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<First derivative N = 20\>\""}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Exact First derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot3", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"derv2", "[", "y", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Second derivative N = 20\>\""}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Exact Second derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.82954163568944*^9, 3.8295416943694696`*^9}, {
  3.8295422992993264`*^9, 3.829542305455862*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"854db9c4-a7fb-45f4-b184-54ea20c0ff96"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "y", "]"}], "2"], " ", 
     RowBox[{"Sin", "[", "y", "]"}]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "y", "]"}], "3"], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "y", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "y", "]"}], "2"]}]}], ")"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "y", "]"}], "2"], " ", 
     RowBox[{"Sin", "[", "y", "]"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "7"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "y", "]"}], "2"], " ", 
      RowBox[{"Sin", "[", "y", "]"}]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "y", "]"}], "3"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.82954123826439*^9, 3.8295413328793344`*^9, {3.8295416719244094`*^9, 
   3.8295417229989653`*^9}, 3.8295423094860334`*^9},
 CellLabel->
  "Out[330]=",ExpressionUUID->"2a8f6ad2-0d32-4b9f-9af2-d1731257b650"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"numv", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{"h", "*", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"derv1num", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"derv1", "[", 
        RowBox[{"h", "*", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"derv2num", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"derv2", "[", 
        RowBox[{"h", "*", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numderv1", " ", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numderv1", " ", "=", " ", 
     RowBox[{
      RowBox[{"Dot", "[", 
       RowBox[{"DD1", ",", "numv"}], "]"}], " ", "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numderv2", " ", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numderv2", " ", "=", " ", 
     RowBox[{
      RowBox[{"Dot", "[", 
       RowBox[{"DD2", ",", "numv"}], "]"}], " ", "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numv", "=", 
     RowBox[{"Prepend", "[", 
      RowBox[{"numv", ",", 
       RowBox[{"numv", "[", 
        RowBox[{"[", "NN", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numderv11", "=", 
     RowBox[{"Prepend", "[", 
      RowBox[{"numderv1", ",", 
       RowBox[{"numderv1", "[", 
        RowBox[{"[", "NN", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numv2", "=", 
     RowBox[{"Prepend", "[", 
      RowBox[{"numv", ",", 
       RowBox[{"numv", "[", 
        RowBox[{"[", "NN", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numderv22", "=", 
     RowBox[{"Prepend", "[", 
      RowBox[{"numderv2", ",", 
       RowBox[{"numderv2", "[", 
        RowBox[{"[", "NN", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Now", ",", " ", 
     RowBox[{
     "we", " ", "are", " ", "going", " ", "to", " ", "plot", " ", "the", " ", 
      "approximated", " ", "derivatives", " ", "using", " ", "Fourier", " ", 
      "Differentiation", " ", "Matrices"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot4", " ", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"numv", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", " ", "Pi"}]}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Original function N = 20\>\""}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Approx Original function\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot5", " ", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"numderv11", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", " ", "Pi"}]}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<First derivative N = 20\>\""}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Approx First derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot6", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"numderv22", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", " ", "Pi"}]}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Second derivative N = 20\>\""}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Approx Second derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8295393278020735`*^9, 3.8295393480868473`*^9}, {
   3.8295394350266943`*^9, 3.8295394760815797`*^9}, {3.829539533117041*^9, 
   3.8295396023367877`*^9}, {3.8295398157467937`*^9, 
   3.8295398332416472`*^9}, {3.8295402472149105`*^9, 3.829540271572733*^9}, {
   3.82954038062475*^9, 3.82954040194514*^9}, {3.8295404398135357`*^9, 
   3.829540565140025*^9}, {3.829540644940077*^9, 3.8295407394879456`*^9}, {
   3.8295408702747507`*^9, 3.8295409201543036`*^9}, {3.829540977580016*^9, 
   3.829541003584695*^9}, {3.8295412522747355`*^9, 3.8295412675346794`*^9}, 
   3.829541327009613*^9, {3.8295415982085285`*^9, 3.8295416281948643`*^9}, {
   3.829541709809415*^9, 3.8295417197005777`*^9}, {3.8295422822092104`*^9, 
   3.8295422929590673`*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"460bbaf7-ee54-407c-ab59-a7c5b16b6daa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "We", " ", "show", " ", "the", " ", "plots", " ", "in", " ", "order", " ", 
    "to", " ", "compare", " ", "the", " ", "results"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"Plot1", ",", " ", "Plot4"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"Plot2", ",", " ", "Plot5"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"Plot3", ",", "Plot6"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.829541006909526*^9, 3.8295410521219997`*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"e7f2e41c-d0c7-4a0e-a666-0fb955246e8a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
ipAb/E2BVzc9M4v9+dCox17xfT8oIDH+O2bDLT70Qn9sW1INBQTqIi/HhfOh
4z0DIYkfKbB8j29T9XM+ZCj9cNAqlQJ/WLjuSH7mQzNCbWp/Aygwk/PczrSK
DylTuZv0blCA20r5QFgNHxpQGKkov0YBVGCysNDAh8QdHgUOu1Ig1yn2QlMv
H9reqCBNOUuBHwKK+pxDfOgQc1drgzkFyGWlm3QpfGj5hVJV9UkKyIj0dGTP
8KHcdDaFniMUePBVwThsnQ/FO9am1PxHgfQrRYoVbPzI+Uvn/S1aFKiWPkyg
c/Kjx1VXQ5/uwd9/7VK5kxA/0tIMz36lQgGXLe9VdeX50aFfJrqXNlHA4J6O
KP0gPzq1VX71JycFHNR/05QN+VEKM/eINDsF/HsdfjkZ86O8+gjXm6wUKNAM
CW06xY9sb24Uc1ojgxzlx2L2OX4UcMU5dmSeDNrRNn+HXPjRt9eb2bNmyXBG
dyZf8jI/anF+uTWISobIOGG3MG9+dPKQ4EWzSTLO+5a9TqH86OFrkytZw2SQ
mB//+Pw+P8qkHBkbGSTDniT/uKZIfmRkvWtm5wAZXJmvTug+40c13z0iJ3vI
EJqipuL9gh+xPH25yaGbDG9OVHO9S+JHrqpnlIc7ydCRQf4imcmPbjUNJIm2
k2HhlO8r03f8iPu+1Xr1XzIIbuD2D3vPj4K9P3wLbiXDYUsVDXopP8oh7/Hb
8ocMToQKIZVyrK9Xhw1fMxmC3p+YdvrCj/RUz8ewNpGhmOtaelM9P7r6k50q
2UgGSsDt6Ypf/CiRkxlz5Bc+z+xjjZxmfvRfg27yvQYyHD3/yv/FX35UKT5O
bPxJhoDOd9URnbgetLUhBcy5xz9x3+jlR++sbwuE/CDDwJd60wuD/MjyzLUn
s/VkIO7teHaajOv7+/dFN8wGWZS+g+NY/7jIR7N1ZPCRpW9Vn+ZHTVYp/+5i
zoxmu7xplh+tJ659UMDcxUEs4qfzI8Ws8IJf38nA6y+3srLIj2LDlKdDMGtT
dx2cWOVHU7N1TkaYPZx1Ijo2CKCFYyAogfl1u3HTN4IAYnnuMjP/jQx/jK3E
i7kEkNBFqdVuzIQqF7sUPgHk3bBVownzXg3ftCdCAkjb4kz0/9kl895UsKgA
Uln1IfZiTpCJ2eMhIYAuiRi9p2NuiEr2s5ERQPUo4qIUft8/Qv6Xo3ICqNp1
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
yEvp0//z8P8A3y2myg==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$12273#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQo+2D/4MKdMX/qKvYHJ2+wHGl+h/Cf2e9srNM80
frcPzHxteFzjHZr8F/tN8xmnpLd+tJfQdQn5rfjTHmYeRP0/uPyRoJPtJ6cz
OqDqZ3GAmf+nryB16jw2uDzEPE4HmHmmp8WdE5dyO2Q/eTUrx+gF1Hw+h8V2
7WvuHn9qv605foJYmABcHmKfoEOR1v0TZy3e2l9SNK6vuSnkgOpfEbj8+/1s
eY9iROH6Ie4Rg5vPFXcrxuOBOFwe4j5JuHkALauTlg==
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[1.6]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxTTMoPSmVmYGAQBWJGIGZiQAcf7B98mFOmL33F3sDkbfYDja9Q/hP7ve0V
mmcav9sHZr42PK7xDk3+i/2m+YxT0ls/2kvouoT8VvxpDzMPov4fXP5I0Mn2
k9MZHVD1szjAzP/TV5A6dR4bXB5iHqcDzDzT0+LOiUu5HbKfvJqVY/QCaj6f
w2K79jV3jz+139YcP0EsTAAuD7FP0KFI6/6JsxZv7S8pGtfX3BRyQPWvCFz+
/X62vEcxonD9EPeIwc3nirsV4/FAHC4PcZ8k3DwAN2eTmA==
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.6805185649898784}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.6805185649898784}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Original function N = 20\"", TraditionalForm], PlotRange -> 
     NCache[{{0, 2 Pi}, {0.6805185649898784, 1.4694671539445294`}}, {{
        0, 6.283185307179586}, {0.6805185649898784, 1.4694671539445294`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact Original function\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx Original function\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 7}, {20, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8295412399493957`*^9, 3.829541333709334*^9, {3.8295416723127527`*^9, 
   3.8295417234516554`*^9}, 3.829542309909845*^9},
 CellLabel->
  "Out[352]=",ExpressionUUID->"fd17e7b4-e789-4534-b6f4-f3cffa308106"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
ePs7UzXK6Bc2yl8qELIfhveDp/7sSfqFL9l3Lwy7D0PZbWv3B4IN+E39m1tR
EcNg8iG5sbSsAfOHSF6idA+D4lxZ8QXdJty1Rnjf1HkGOPRtO5kh3op9t/wh
ZZ5lgt/2n2N3LnXhe3cOqQ7bMqFJxPcxX14XvobfmUq5MSHo8Omw3+Ld+ODR
fUkukUyQGW8Ym/rRjQVuBpzUGmDCZy9D65Nivfhxskr8d7sRKHu9f+5yBR3f
+uNez3Qfgfq6+CuLk3T8n/6veemXI/BRSFtaX7IP7629c9T12wh4ZUlmZ1/s
w1yTJXO7/oxAkk77h5fTfdhDzdI498EonM5NuHWdPIDtb6feHgsYhbG3m97e
2DSAL+TzRa96PwpGLmJMCaMBrHvk8+/7JaNw04RGOuw7gP/Z/Y3QFRyD4X8y
c//xD+K7n1+x84PGwGhAV0BwYhDb/B6WnfwwBkGUgpgd5CF8Rldnv1zGGKzr
UwnjURzCO6vp4R6tY9DIfrj90Zkh/HtMbR+sHodFdW2GaN4QdlStCCmIG4cQ
we0SR5yH8eDlwYfRmePw+PSbViWfYXw6mmT3sHwcJo1Na9+/G8Y6krv2opFx
KB3qdnxWMoy5lz9O4s0TcCbwXL0QhYFv7Sprj9KbgK3VT8/yKzDwsHN/yQOT
CRjNH/OM38bAVUzZt+AwAc7FauRmUwYOanhuiNMmgJlgnjIRwsC8IomaUSUT
8LOwfpwSx8AuhiVrHjRPgIgd/tCexsDn8ham9Wcn4NpQtoh5PQMrxN+I/qEz
CcV84dyb+Jg4mP7seaTxJDik8Gu7UZmYf1W8i4f5JCjveLTJZQ0Tj77sOazv
MQmfX/9btNjOxKmuR//mF04C7x6jUUELJl6ffn0womES7v9Vcw67ysShk0/r
3AcmYVrJ6UydAxPf+68gTo+PBfeKPq3S8mLi8YiugDVSLIi2+uhs48vEFm1z
9xc3sCAtWXTlviAm3ntE40T+QRZ0xwvrz0QzcfrTI3oRZ1lw51zavpoEJt5Q
dE3Z3ZYFjFftYUeTmThs4YnEBeKcm+Y88nRLZ2IhrfdLui9YkLvYt/dUDhO7
Of4YWR3BAlufg4qtmIknP3U0LXxhQZWAmi1fKRM3rpX4lFfHgsPSNSaXa5n4
wPktoe/oLMjmnnj4uoGJv4cYe7pxWFBzyGivSwsTSzK37VTnYsMAJ6uXq4OJ
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
8/nSziUqgrCrs1b72sCeZ/riaTFx9OW5XGx9eQv8F/zwbKiGONrtu/wg71kj
ON0QPJuzTRyNfjpYNnKiEbwOBJn17BBHuQ4iEsWrGiF67sOZDTri6NT2DhH3
zw3QY15umrlXHHk3iapvqPoFZkqiJ1pOEu/n/0pXnKwDk8y3RlIu4qiGUmtT
u7sCbKatlyXviqP9fGMta0vL4dFWlXTJe+JotraMX8qkHL4nfV8j6SGOzqud
TGdZlIFCVDNbwlsc+aUJCwa5lcCfp2KvqaHiyOOIrKjyxwKIPPtoYEWmOBr4
FL145uM3mFywdeP5I46OP1LZNHjnMz5rZrzp76w4knNzP6Bnm4xL0lRbJv+K
o9PRKsMU9RQcbju+pWNRHNFeWKVoyadig7YbAyl8Ekjd9Vj1hqUM/DbNwchC
UgJNq2/3NP2Ujw/aukhnb5dAbS93xTFPleG00tOlyTsl0MWKzI4zVWVYbp2W
U6y2BLKNkiU5Qjmebp39+VJXAq27sf7WG+UKHLnf9cEVAwnk8vTA77d/KvHv
tW7DEqckUGjA7hb2gxoc0+qZbu8sgUg3t+4JlmvAw6Vbe/1vSyDjAKGpstMN
eHN6r+DXOxKolnU3OMm/AWcG6Fmy7ksgub+lpp6LDbj60F9Bh8cSKP5lMt20
tRHP5TpYOoZIoB9/jB+N3WvG+knyvoGvJZC32KOfNV+a8aOw2vRv4RJIXL8t
4xS9GYve3iw0FSGBulosUo8YtGBFdWa6U7wEmhroed8u0IpNoi2FbmVJoN+O
Lk+q3dpwsL/ojuBsYv3erwOfPrbhdrd8y/RcCeTwVkpiQ0sbvnR2VcZvLIHu
FGtVM9Xasat4q+XtCgl0VEf0eXhbO459bJLh0i6BnmXx8yDZTjzqtNgb2imB
BGYC54JQJ95i9Vkoq1sCfTLb6ed6pRPn6AldnO2TQG73+xVJ3zpx3Z9Sobuj
EmjF9RnfEdSF5230Lrr+k0A2hlvnR4y7sVGuCrq9KIGsFUl+ute68VsR6bWO
yxLoZWdi4WbvbqybOtVrw0NDr0cDrg/96MYe/xIszYRpyHzpblKaag+uPRIC
p0RoyL5z10bW/h4sH+0lf0yMhoYng9TKLXtwgcGFXkMJGqoyaLI/HNSDefzF
LbVW0ZA29+Txj1M9+BR9WX/bGhrqiI54VybYi2M1J+S2yNMQve1G/YO1vfhA
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
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$12333#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMeMmX8Iv/f2z/4MKdMX/qK/YcklznN295A+U/s
GVRCgoMYl+0PzHxteFzjnf2PBy2RLL+f74fIf7G3OB0pz9zzaL+ErkvIb8Wf
9hBTD9hA1P+DydsfCTrZfnI6o8MXiH6o+SwOUPPt//QVpE6dx+bwBWI/1DxO
BxeI+/abnhZ3TlzK7fBu8/8JankPoO7hc2C4J9qR9nuK/bbm+AliYQIOJets
djsl3YbaJ+iQ06IymenbPftLisb1NTeFHGD+htgv4pABkd//fj9b3qMYUYca
iP79EPeIORy4CzZ/P1fcrRiPB+IObyD220PcJ+kACz8AgZ+VNA==
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[1.6]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxTTMoPSmVmYGAQBWJGIGZiQAAPmTJ+kf/v7R98mFOmL33F/kOSy5zmbW+g
/Cf2DCohwUGMy/YHZr42PK7xzv7Hg5ZIlt/P90Pkv9hbnI6UZ+55tF9C1yXk
t+JPe4ipB2wg6v/B5O2PBJ1sPzmd0eELRD/UfBYHqPn2f/oKUqfOY3P4ArEf
ah6ngwvEfftNT4s7Jy7ldni3+f8EtbwHUPfwOTDcE+1I+z3Ffltz/ASxMAGH
knU2u52SbkPtE3TIaVGZzPTtnv0lReP6mptCDjB/Q+wXcciAyO9/v58t71GM
qEMNRP9+iHvEHA7cBZu/nyvuVozHA3GHNxD77SHuk3SAhR8Ai1uVNg==
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"First derivative N = 20\"", TraditionalForm], PlotRange -> 
     NCache[{{0, 2 Pi}, {-1.069560661374064, 1.0695642341162421`}}, {{
        0, 6.283185307179586}, {-1.069560661374064, 1.0695642341162421`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact First derivative\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx First derivative\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 7}, {20, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8295412399493957`*^9, 3.829541333709334*^9, {3.8295416723127527`*^9, 
   3.8295417234516554`*^9}, 3.8295423100387077`*^9},
 CellLabel->
  "Out[353]=",ExpressionUUID->"0d5a983b-1bf4-4072-b580-b474991f062a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
XaFH0nnw2M/rwxMWudEkh7fFroYHf9Wk7nyLxY3kV2rCVUZ48LleS9lgHh50
99CRS1rbSXjQ8p1EJwke1JnbUFxYQsJjdlKjFHfwIGxDSEZWOS+er6dwRl6b
B82p/MoXauXFGw009sns5kGDrpPp6ou8uKS1FYe8jwd9YL2jvNbkw1MuJvhP
WPGgn1GVPrde8uF5OdRzr7150DGlQZPaWH48/Be2l8efB91TGE1hvuDH7bkv
rLEM5EE7c3yHm+r4cbJ97bfx6zzo6mTXS49VAvhZ0SCtjfd5EO9KfckuDwFc
T3erqHcSD7K4OHc8MFoAlzz/ewRL5UGx7wZ+Hk8XwD9WqaXYZfEg02bRjslm
AVzeb4j7bhkPklr9XNZOSxBfTE/o7H1H8L10bKuPuSD+7TuUquCEHrInojae
EsSDtyafb6gj4u26ucM4ThBv77RoXNXOgxRY6q8i+wXxQkF27sFuHpQXKZVp
uCCIR+/MvZ7az4PW79TYmihIxrXjebR3/eVBv5pMdo2qkPF7+8pTPdk86Osx
9nNDHzLu5nnGv5KLhEp0NmqFhpNx/VSqpRAvCaUJvzxueI+MTy+4k3KESYjy
qA98i8h43YbV3fPiJLSy9/Z4F07G0w7Vlu2TJqGBtZkiP76RcYvn6916ZEmI
7bj/9eFRMr6p5ZvB9g0k5DytYTA4T8bZPEGygYok5Dlo58BeRcFfOPz+Ia1G
QrI3styr6RQ87Ob1F6c1SWjmv4BblzZQ8ONlahFFOiTkHc+OyN1OwQXEb+lY
7CWh24X0mzmIgvfo6VBTDEmozfZGh6cJBS91Hfo7akJCf8ZPPqy0pOCxDxJq
tC1IiD/jssedYxT8TDU8ibAiIfOeDNFRJwquOz1++acNCRXpVKvXuFBwSdlk
q/V2JHTDCovd5EHB/5ruV77oSEJbL8YOCvpQ8Cr/Od73p0jo4ne9ea8rFDwp
42kP+RwJXWiZjnQIoeCePyzeHHUnoY2MsVNfwii48QorIcuThN6fvnG8MpKC
y23LdZ/zISH5kEN6O25S8AVbGyP9KyR0jTbWr3Sbgn8L55GPDyahg55bN2fG
UfDMwleMrmsk1LIkPPz0DgUP6nb4uS2ShKraanjX36Xgc/v1Us/cJNafet0p
e4+CuxeudXkSS0K/+ho8nxF4cDVbrS2BiFcYW5RPYLvwDib1AQnln/JNRARu
+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
xlovg2pzI79xcU3B/wDLw/5z
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$12393#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMLhE1sprJ9sH/wYU6ZvvQVeweTouke+f/2Q/hP
7B9sL16TfIfrQGDma8PjGu/sGfryvvukvoDKf7F/sPvRhJin3+0ldF1Cfiv+
tN/CUft8MjODA0T9P3uGPRD5I0En209OZ3RA1c/i8AFq/p++gtSp89gcYPZD
zON0gLnP9LS4c+JSbocDsoyZVc1/7CHm8zk8SH5XvurVD/ttzfETxMIEHBj8
bfOS6t9C7RN0aCh5+GV29/P9lxSN62tuCjnUbHU4s+7nf6j9InD59/vZ8h7F
iDoc8IPoh7hHzOEC1HyuuFsxHg/EHR5A7Ye4TxLuPgCW+qFw
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[1.6]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxTTMoPSmVmYGAQBWJGIGZiQIAFwiY2U9k+2D/4MKdMX/qKvYNJ0XSP/H/7
Ifwn9g+2F69JvsN1IDDzteFxjXf2DH15331SX0Dlv9g/2P1oQszT7/YSui4h
vxV/2m/hqH0+mZnBAaL+nz3DHoj8kaCT7SenMzqg6mdx+AA1/09fQerUeWwO
MPsh5nE6wNxnelrcOXEpt8MBWcbMquY/9hDz+RweJL8rX/Xqh/225vgJYmEC
Dgz+tnlJ9W+h9gk6NJQ8/DK7+/n+S4rG9TU3hRxqtjqcWffzP9R+Ebj8+/1s
eY9iRB0O+EH0Q9wj5nABaj5X3K0YjwfiDg+g9kPcJwl3HwCgtqFy
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Second derivative N = 20\"", TraditionalForm], PlotRange -> 
     NCache[{{0, 2 Pi}, {-3.4476178873749634`, 1.9999990256889362`}}, {{
        0, 6.283185307179586}, {-3.4476178873749634`, 1.9999990256889362`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact Second derivative\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx Second derivative\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 7}, {20, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8295412399493957`*^9, 3.829541333709334*^9, {3.8295416723127527`*^9, 
   3.8295417234516554`*^9}, 3.829542310160628*^9},
 CellLabel->
  "Out[354]=",ExpressionUUID->"3e17fce5-5efa-48ad-a092-7a0d3baa2d72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Minimum", " ", "and", " ", "maximum", " ", "values", " ", "of", " ", 
    "the", " ", "error", " ", "of", " ", "the", " ", "first", " ", "and", " ",
     "second", " ", "derivatives"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"numderv1", "-", "derv1num"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"errormin11", " ", "=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{"Abs", "[", 
      RowBox[{"numderv1", "-", "derv1num"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"errormax11", " ", "=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{"Abs", "[", 
      RowBox[{"numderv1", "-", "derv1num"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"numderv2", "-", "derv2num"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"errormin12", " ", "=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{"Abs", "[", 
      RowBox[{"numderv1", "-", "derv1num"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"errormax12", " ", "=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{"Abs", "[", 
      RowBox[{"numderv2", "-", "derv2num"}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8295410600477495`*^9, 3.829541082087161*^9}, {
  3.82954119795998*^9, 3.8295412334697757`*^9}},
 CellLabel->
  "In[355]:=",ExpressionUUID->"3444f1c0-eb5b-4db6-bac7-a4ae613ec519"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{
  3.829541240224552*^9, 3.829541334059613*^9, {3.829541672669197*^9, 
   3.8295417238145514`*^9}, 3.8295423102412996`*^9},
 CellLabel->
  "Out[356]=",ExpressionUUID->"dedc227f-f9b7-454d-a97d-ef71acfd29e6"],

Cell[BoxData["0.00041056455062327135`"], "Output",
 CellChangeTimes->{
  3.829541240224552*^9, 3.829541334059613*^9, {3.829541672669197*^9, 
   3.8295417238145514`*^9}, 3.829542310246255*^9},
 CellLabel->
  "Out[357]=",ExpressionUUID->"1eff7885-100e-46b0-8867-c479d964c014"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{
  3.829541240224552*^9, 3.829541334059613*^9, {3.829541672669197*^9, 
   3.8295417238145514`*^9}, 3.829542310250252*^9},
 CellLabel->
  "Out[359]=",ExpressionUUID->"1672d95f-5256-4887-90a5-410aad7b39f1"],

Cell[BoxData["0.0017469487221095648`"], "Output",
 CellChangeTimes->{
  3.829541240224552*^9, 3.829541334059613*^9, {3.829541672669197*^9, 
   3.8295417238145514`*^9}, 3.8295423102542415`*^9},
 CellLabel->
  "Out[360]=",ExpressionUUID->"d6ccb7e2-606e-489d-93c2-8d1e63e929ce"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["N=60",
 FontWeight->"Bold",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Subsubsection",
 CellChangeTimes->{{3.829541750434532*^9, 
  3.829541752270155*^9}},ExpressionUUID->"4910c300-715a-4f4e-9e3c-\
00612ca193c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
   "Set", " ", "up", " ", "grid", " ", "and", " ", "the", " ", 
    "differentiation", " ", 
    RowBox[{"matrix", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NN", "=", "60"}], ";", " ", 
    RowBox[{"(*", " ", "EVEN", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"h", "=", 
     RowBox[{"2", "*", 
      RowBox[{"Pi", "/", "NN"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"h", "*", "i"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Now", ",", " ", 
     RowBox[{
     "we", " ", "are", " ", "going", " ", "to", " ", "calculate", " ", "the", 
      " ", "Fourier", " ", "differentiation", " ", "matrix", " ", "for", " ", 
      "first", " ", "derivative"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{".5", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", 
         RowBox[{"(", "i", ")"}]}], "*", 
        RowBox[{"Cot", "[", 
         RowBox[{"i", "*", 
          RowBox[{"h", "/", "2"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"column1", "=", " ", 
     RowBox[{"Prepend", "[", 
      RowBox[{"column1", ",", "0."}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"column2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{".5", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", 
         RowBox[{"(", "i", ")"}]}], "*", 
        RowBox[{"Cot", "[", 
         RowBox[{"i", "*", 
          RowBox[{"h", "/", "2"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"NN", "-", "1"}], ",", "1", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"column2", "=", " ", 
     RowBox[{"Prepend", "[", 
      RowBox[{"column2", ",", "0."}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DD1", "=", 
     RowBox[{"ToeplitzMatrix", "[", 
      RowBox[{"column1", ",", "column2"}], "]"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Be", " ", "careful"}], ",", " ", 
      RowBox[{
      "the", " ", "two", " ", "columns", " ", "are", " ", "needed"}]}], "  ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"MatrixForm", "[", "DD1", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8295420228459153`*^9, 3.8295420232072024`*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"d563f86c-c0a1-4be8-80d7-78d8daff044c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Now", ",", " ", 
   RowBox[{
   "we", " ", "are", " ", "going", " ", "to", " ", "calculate", " ", "the", 
    " ", "Fourier", " ", "differentiation", " ", "matrix", " ", "for", " ", 
    "second", " ", "order", " ", "derivative"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8295393852785606`*^9, 3.829539418096822*^9}},
 CellLabel->
  "In[417]:=",ExpressionUUID->"622e62d7-a7df-49f8-ac3a-3f6d0649f64c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"column3", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", 
        RowBox[{"(", "i", ")"}]}]}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"i", "*", 
            RowBox[{"h", "/", "2"}]}], "]"}], "^", "2"}], ")"}]}], ")"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"NN", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"column3", "=", " ", 
   RowBox[{"Prepend", "[", 
    RowBox[{"column3", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Pi", "^", "2"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"3", "*", 
         RowBox[{"h", "^", "2"}]}], ")"}]}], "-", 
      RowBox[{"1", "/", "6"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"column4", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", 
        RowBox[{"(", "i", ")"}]}]}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"i", "*", 
            RowBox[{"h", "/", "2"}]}], "]"}], "^", "2"}], ")"}]}], ")"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"NN", "-", "1"}], ",", "1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"column4", "=", " ", 
   RowBox[{"Prepend", "[", 
    RowBox[{"column4", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Pi", "^", "2"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"3", "*", 
         RowBox[{"h", "^", "2"}]}], ")"}]}], "-", 
      RowBox[{"1", "/", "6"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DD2", "=", 
    RowBox[{"ToeplitzMatrix", "[", 
     RowBox[{"column3", ",", "column4"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Be", " ", "careful"}], ",", " ", 
    RowBox[{"the", " ", "two", " ", "columns", " ", "are", " ", "needed"}]}], 
   "  ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "DD2", "]"}], ";"}]}], "Input",
 CellLabel->
  "In[418]:=",ExpressionUUID->"2ee9ae7b-fb5e-43f2-9a2c-1f7bdc2ff5bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{"Differentiation", " ", "of", " ", "Exp", 
     RowBox[{"(", 
      RowBox[{"Sin", 
       RowBox[{"(", "x", ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Cos", 
          RowBox[{"(", "x", ")"}]}], ")"}], "^", "2"}]}], ")"}]}], ":"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"v", "[", "y_", "]"}], ":=", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"Sin", "[", "y", "]"}], 
       SuperscriptBox[
        RowBox[{"Cos", "[", "y", "]"}], "2"]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"First", " ", "derivative"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derv1", "[", "y_", "]"}], "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"v", "[", "y", "]"}], ",", "y"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Second", " ", "derivative"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"derv2", "[", "y_", "]"}], "=", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"v", "[", "y", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Plot", " ", "of", " ", "the", " ", "f", " ", "function", " ", "and", " ",
      "its", " ", "derivatives", " ", "computed", " ", "using", " ", "the", 
     " ", "command", " ", "D"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot1", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"v", "[", "y", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Original function N = 60\>\""}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Exact Original function\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"derv1", "[", "y", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<First derivative N = 60\>\""}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Exact First derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot3", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"derv2", "[", "y", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", 
         RowBox[{"2", " ", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{"Green", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Second derivative N = 60\>\""}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Exact Second derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.82954163568944*^9, 3.8295416943694696`*^9}, {
  3.8295420689280233`*^9, 3.829542083180849*^9}},
 CellLabel->
  "In[424]:=",ExpressionUUID->"79a7e0fc-d1e3-482a-bea4-892f9ebcffc3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "y", "]"}], "2"], " ", 
     RowBox[{"Sin", "[", "y", "]"}]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "y", "]"}], "3"], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", "y", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "y", "]"}], "2"]}]}], ")"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "y", "]"}], "2"], " ", 
     RowBox[{"Sin", "[", "y", "]"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "7"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "y", "]"}], "2"], " ", 
      RowBox[{"Sin", "[", "y", "]"}]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "y", "]"}], "3"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.8295420339205627`*^9, {3.8295423128124514`*^9, 3.829542314967869*^9}},
 CellLabel->
  "Out[426]=",ExpressionUUID->"8b783559-aead-4edc-930f-28038ce45e99"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"numv", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{"h", "*", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"derv1num", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"derv1", "[", 
        RowBox[{"h", "*", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"derv2num", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"derv2", "[", 
        RowBox[{"h", "*", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numderv1", " ", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numderv1", " ", "=", " ", 
     RowBox[{
      RowBox[{"Dot", "[", 
       RowBox[{"DD1", ",", "numv"}], "]"}], " ", "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numderv2", " ", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numderv2", " ", "=", " ", 
     RowBox[{
      RowBox[{"Dot", "[", 
       RowBox[{"DD2", ",", "numv"}], "]"}], " ", "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numv", "=", 
     RowBox[{"Prepend", "[", 
      RowBox[{"numv", ",", 
       RowBox[{"numv", "[", 
        RowBox[{"[", "NN", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numderv11", "=", 
     RowBox[{"Prepend", "[", 
      RowBox[{"numderv1", ",", 
       RowBox[{"numderv1", "[", 
        RowBox[{"[", "NN", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numv2", "=", 
     RowBox[{"Prepend", "[", 
      RowBox[{"numv", ",", 
       RowBox[{"numv", "[", 
        RowBox[{"[", "NN", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numderv22", "=", 
     RowBox[{"Prepend", "[", 
      RowBox[{"numderv2", ",", 
       RowBox[{"numderv2", "[", 
        RowBox[{"[", "NN", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Now", ",", " ", 
     RowBox[{
     "we", " ", "are", " ", "going", " ", "to", " ", "plot", " ", "the", " ", 
      "approximated", " ", "derivatives", " ", "using", " ", "Fourier", " ", 
      "Differentiation", " ", "Matrices"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot4", " ", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"numv", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", " ", "Pi"}]}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Original function N = 60\>\""}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Approx Original function\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot5", " ", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"numderv11", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", " ", "Pi"}]}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<First derivative N = 60\>\""}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Approx First derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot6", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"numderv22", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", " ", "Pi"}]}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Second derivative N = 60\>\""}], 
       ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Approx Second derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8295393278020735`*^9, 3.8295393480868473`*^9}, {
   3.8295394350266943`*^9, 3.8295394760815797`*^9}, {3.829539533117041*^9, 
   3.8295396023367877`*^9}, {3.8295398157467937`*^9, 
   3.8295398332416472`*^9}, {3.8295402472149105`*^9, 3.829540271572733*^9}, {
   3.82954038062475*^9, 3.82954040194514*^9}, {3.8295404398135357`*^9, 
   3.829540565140025*^9}, {3.829540644940077*^9, 3.8295407394879456`*^9}, {
   3.8295408702747507`*^9, 3.8295409201543036`*^9}, {3.829540977580016*^9, 
   3.829541003584695*^9}, {3.8295412522747355`*^9, 3.8295412675346794`*^9}, 
   3.829541327009613*^9, {3.8295415982085285`*^9, 3.8295416281948643`*^9}, {
   3.829541709809415*^9, 3.8295417197005777`*^9}, {3.8295420463244047`*^9, 
   3.8295420605604205`*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"be1378a3-456c-4bcc-a103-75599be086a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "We", " ", "show", " ", "the", " ", "plots", " ", "in", " ", "order", " ", 
    "to", " ", "compare", " ", "the", " ", "results"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"Plot1", ",", " ", "Plot4"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"Plot2", ",", " ", "Plot5"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"Plot3", ",", "Plot6"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.829541006909526*^9, 3.8295410521219997`*^9}},
 CellLabel->
  "In[448]:=",ExpressionUUID->"806b907d-0b47-428f-b14b-700554f11986"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
ipAb/E2BVzc9M4v9+dCox17xfT8oIDH+O2bDLT70Qn9sW1INBQTqIi/HhfOh
4z0DIYkfKbB8j29T9XM+ZCj9cNAqlQJ/WLjuSH7mQzNCbWp/Aygwk/PczrSK
DylTuZv0blCA20r5QFgNHxpQGKkov0YBVGCysNDAh8QdHgUOu1Ig1yn2QlMv
H9reqCBNOUuBHwKK+pxDfOgQc1drgzkFyGWlm3QpfGj5hVJV9UkKyIj0dGTP
8KHcdDaFniMUePBVwThsnQ/FO9am1PxHgfQrRYoVbPzI+Uvn/S1aFKiWPkyg
c/Kjx1VXQ5/uwd9/7VK5kxA/0tIMz36lQgGXLe9VdeX50aFfJrqXNlHA4J6O
KP0gPzq1VX71JycFHNR/05QN+VEKM/eINDsF/HsdfjkZ86O8+gjXm6wUKNAM
CW06xY9sb24Uc1ojgxzlx2L2OX4UcMU5dmSeDNrRNn+HXPjRt9eb2bNmyXBG
dyZf8jI/anF+uTWISobIOGG3MG9+dPKQ4EWzSTLO+5a9TqH86OFrkytZw2SQ
mB//+Pw+P8qkHBkbGSTDniT/uKZIfmRkvWtm5wAZXJmvTug+40c13z0iJ3vI
EJqipuL9gh+xPH25yaGbDG9OVHO9S+JHrqpnlIc7ydCRQf4imcmPbjUNJIm2
k2HhlO8r03f8iPu+1Xr1XzIIbuD2D3vPj4K9P3wLbiXDYUsVDXopP8oh7/Hb
8ocMToQKIZVyrK9Xhw1fMxmC3p+YdvrCj/RUz8ewNpGhmOtaelM9P7r6k50q
2UgGSsDt6Ypf/CiRkxlz5Bc+z+xjjZxmfvRfg27yvQYyHD3/yv/FX35UKT5O
bPxJhoDOd9URnbgetLUhBcy5xz9x3+jlR++sbwuE/CDDwJd60wuD/MjyzLUn
s/VkIO7teHaajOv7+/dFN8wGWZS+g+NY/7jIR7N1ZPCRpW9Vn+ZHTVYp/+5i
zoxmu7xplh+tJ659UMDcxUEs4qfzI8Ws8IJf38nA6y+3srLIj2LDlKdDMGtT
dx2cWOVHU7N1TkaYPZx1Ijo2CKCFYyAogfl1u3HTN4IAYnnuMjP/jQx/jK3E
i7kEkNBFqdVuzIQqF7sUPgHk3bBVownzXg3ftCdCAkjb4kz0/9kl895UsKgA
Uln1IfZiTpCJ2eMhIYAuiRi9p2NuiEr2s5ERQPUo4qIUft8/Qv6Xo3ICqNp1
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
yEvp0//z8P8A3y2myg==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$13457#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCwBWIQjQo+2F99Xf355bld9klPeVcq7fsI5Z+yDzzWOb2m
9bP9gw9zyvSlr9gbmLzNfqDxFSp/y97b6dTR2vJv9qnFuhZBBx/YZ72/LbzU
/TtU/RP7ve0Vmmcav9tH5/Fs5Sl9bs/St/e1jvp3qP5X9q5Ffjv/BXyzD8h8
bXhc4x3cfIh5H+yNuSZ4K977bK9klHrdIe+T/Zclyk3Ocz5Bzf9iv2k+45T0
1o/289ZfEZU78dWe1zzb6fmGD1D7vtvLidwJPKDzwV5C1yXkt+JPe1T//oLL
T1q1edKN6j9w/RD3/IObz6uhfHHr1f9w+yHuY3CAue9I0Mn2k9MZHWDuh7iX
yQHmv0ZBRvUdLswOMP9D3M/iAAsf+wsWx5Z9ZHGAhR/EP6wOsPD901eQOnUe
G9x8iP/YHWDxs9N3BUuLN4cDLP4g/uV0gPm3jOfB4qIfnA5GlS8nxN1+A/U/
l8OmKXNfO1m9sjc9Le6cuJTbIfvJq1k5Ri+g4cHjsK7iQgDXqWf2nzr9H/kH
8Tr0970Udfv3FBo+fA6L7drX3D3+1H69R3uj3X8+B5b4pvuyss+g4cXvILxw
jnbUx2f225rjJ4iFCcDNh4SfgMOy4llMdkdf2osm/77fqyPoYNT9TvJj02to
eAo6FGndP3HW4q19sdN0fVZmIYeZTUoJ19e8g4avkMOpOoe/Zcvf219SNK6v
uSkE9y8kvIXh8oaM5899Xi8M1w8JfxG4+f0PsuSy20Tg9kPiQwTuvnf72fIe
xYjC3Q+JH1G4/3zmL9obaSwG9z8kvsTg4bO6zo73Iqc4PPwg8ScOD1+uuFsx
Hg/E4eZD4lMCHj8ZtmVr9m+TgMcfJH4l4f4FAGcyyB0=
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.011000000000000001`], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[1.6]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxTTMoPSmVmYGCwBWJGIGZiQAcf7K++rv788twu+6SnvCuV9n2E8k/ZBx7r
nF7T+tn+wYc5ZfrSV+wNTN5mP9D4CpW/Ze/tdOpobfk3+9RiXYuggw/ss97f
Fl7q/h2q/on93vYKzTON3+2j83i28pQ+t2fp2/taR/07VP8re9civ53/Ar7Z
B2S+Njyu8Q5uPsS8D/bGXBO8Fe99tlcySr3ukPfJ/ssS5SbnOZ+g5n+x3zSf
cUp660f7eeuviMqd+GrPa57t9HzDB6h93+3lRO4EHtD5YC+h6xLyW/GnPap/
f8HlJ63aPOlG9R+4foh7/sHN59VQvrj16n+4/RD3MTjA3Hck6GT7yemMDjD3
Q9zL5ADzX6Mgo/oOF2YHmP8h7mdxgIWP/QWLY8s+sjjAwg/iH1YHWPj+6StI
nTqPDW4+xH/sDrD42em7gqXFm8MBFn8Q/3I6wPxbxvNgcdEPTgejypcT4m6/
gfqfy2HTlLmvnaxe2ZueFndOXMrtkP3k1awcoxfQ8OBxWFdxIYDr1DP7T53+
j/yDeB36+16Kuv17Cg0fPofFdu1r7h5/ar/eo73R7j+fA0t8031Z2WfQ8OJ3
EF44Rzvq4zP7bc3xE8TCBODmQ8JPwGFZ8Swmu6Mv7UWTf9/v1RF0MOp+J/mx
6TU0PAUdirTunzhr8da+2Gm6PiuzkMPMJqWE62veQcNXyOFUncPfsuXv7S8p
GtfX3BSC+xcS3sJweUPG8+c+rxeG64eEvwjc/P4HWXLZbSJw+yHxIQJ337v9
bHmPYkTh7ofEjyjcfz7zF+2NNBaD+x8SX2Lw8FldZ8d7kVMcHn6Q+BOHhy9X
3K0YjwficPMh8SkBj58M27I1+7dJwOMPEr+ScP8CAHaOyB8=
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.6805185649898784}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.6805185649898784}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Original function N = 60\"", TraditionalForm], PlotRange -> 
     NCache[{{0, 2 Pi}, {0.6805185649898784, 1.4694671539445294`}}, {{
        0, 6.283185307179586}, {0.6805185649898784, 1.4694671539445294`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact Original function\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx Original function\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 7}, {20, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8295420344048705`*^9, {3.829542313250107*^9, 3.8295423154896812`*^9}},
 CellLabel->
  "Out[448]=",ExpressionUUID->"65efd565-ae7a-4fa3-8f95-8a1f3553d08b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJwVl3k8lN8Xx8c+CDMMoaJIiShaSDi3UorSqlQivi2SZCmlUFSSIoSobGVL
JVmzde1btuy7sc5YZ4ZEsvye31/zer+eZ+495/M5597zrLO+eeIyN4lEOspD
Iv3/lwcL1Q7s8NT/UXZdgURig9LIj91yryzhWLIApV2ADfMpWy61B92E3h+V
dm/E2DBEs5nLDHoAf2rlYpvl2NBx4HFRXNBL4NZtP6+sS7yvskLFrSgQ7NIS
abCPDU81W5zicl+BiurGCF0jNsTsseWd+/IaLp8MPTJ2hg3NlkEbI4KiQEYt
+SHViQ3ftqlrD5RGQ1bEUeGzd9lwR+tV152iGBi7daH8iQcbeOGCUkzuB7ic
/IbP35cNciaczOkvCSDNw/53MoYNg8dPn/dJSgSKPd0Jx7Phk2nu8uqEj9BU
td5T9DMbtC88OXgg+hOE2XuHnc5kwwk7mY6woK9gsKJR9VklG1ZoAw41TIFs
2Ypm4Vo2sLMdqX2lKbBL8NBjhwY2ZOa3ZNwu+gY2TXbKvR1sCAdBcgFKBSkB
yGX2sMGtcPc5IZwK/duXXzT2s2FfafRSZG4ajM3mbDo8yoYNho3HRnalw2CB
w6v2CTYIVfJ92PY9He7bvXA15LChvtrWsCI9A7ysK+eLZ9mQZhIRLr4tEyDv
6s6GeTaE1teNmX/LhIPx17YULLLhQtP2AM6XLNjPhggdHg6g01f7d2/+Dv9t
8ksv4+PA+rbw7d5J30F9z7ZaDTIHBM5Ve9crZ0No3qq8+0IcGO1capNNyIYN
7+8ei13BgZoLGqqXlXJg4HDZhU+iHEjp/c/964ccuIRqMgMoHLgzULHOIDoX
XnamhM1IcODc5X/O/nJ50Nr+qeKWJAf0GWplbe/yoNQ9OuiXFAfWXbsorbgq
H0Q/sqqEpTnAOxZkeyM8HzRuHT+gKMMBhl1pXtbKHyAv2Nq+UpYDVZOzotyh
P8DZY/zcCMHJDipWh2kY9qSdi3q9igOBU+ZpoUEYrFQPuSus5oCf5BvdApEC
OP/2TGcAwQ3fnsjvOFEAOhPrdzUTLGXiyJ0UWgD63ExrFsHnR82H5DoL4Lvm
ZaVegqO9D1a8ki8EfhnOkViCBxW2fyJfKgRXc+ckfYI3YXl/98RCkHK7JphM
7G9/XthxarwQhsNGdk0R8aXN/jl5VaMI2iFOWJjguVf9O7tuF8GE5rjJHJGv
7tZameM5RRCs8bUpeyUHPKuzF0qXimBlgZf9UUKfMpu4Xp19xdAxETP5ncYB
Ib7Aoq9Pi+GiLGfjH3EOHI1xi1tfXQxV30mT/FQOBOvZ+IRTSqCVSpEcI/xp
bz95XdS0BLh5KU7vCf/kXMDkUXgJ/CqM69hM+Gstrqox110Cf/zUlHwFOJCQ
LEW7oVAK2rfzlXN4OTBuxD3bd6UU5viU8/O4OLCVMdF++lMp0PiWcwKX2JAj
XxqFtpeB7Tu+s6lEPS7lpnhl3C2DMB615MVpor7N3l1WyS8DueqMFlk2G6oD
nFVpB8rBvT2IVsVgQy+XQhbjTAVEjU+/mmtiw/pIkTfm7yrAS1WmrraODTY6
f91+0SuAcfB52+0qNkw51e/NvVYJD4RlB3dgot8HPWr971dBrE4I+x7Rz4ce
2n7jKaiCFUb5SU1RbPBffTr4Lu9PMOyzvrIUxoaVpmrnrP1+gsbsI79C4nxQ
Kesc2hFVDYvrVD157dhw07q8ImmgGqqpnzd0/ceG9KXUT/LKNVC4+Y/eo/Ns
0NPydRT8VgNWa1T9gDivjiVqL3YV1cKRNYZ3biqxYXepkdBe53qwqih5cjiO
BZSm+DqtV/UwnT1lYRXAgsF+7hC1tHrI3Rs7s/Y+C/xJufIy0/XwsMjdJfoo
C/p3q+5gO/2Cqg3XB2N+T4JPqvDFSKcGMLrevyNffRIuFF5VCg5qgKu/XmQ9
pk2CZn3x6LPUBtBRfrl17u8EdE3cv317qgGurPYKHSiegC2bxn0POzWCb/yK
+/UnJ6Alqjpj3rEJMqpzhVQvjcOnZOX77MAmcNW85FZmMA4P8x+j4W9NsMtD
c4aiNA6bOnV//uI0gZQdiyt9cAzcpL7QEx2bQbXIWkbn4hgo+vkJn3FsgZCH
1AWfg6PgcM/EKs2hDejdz6s+0hlgZK+bSA5og5uuJJPQ7wxQtFZhXfjaBoFJ
RwxQAANaDvG7kyfbYOG0s0WtPgP0ZH6EXbjeDiq0bS70sGEQ+q5WL3ClA77v
e1JntGcI4mZWgPn5Lkhcut68cKUfbny/7M+tSIdjzBIz5rE2aGIeEkywHgSz
G9kPrAJTMStcef8jp0EofeXK46iVjoWMBTwtvQZBV/peU0RXBkZfSuZWvh8E
t6vLIlrrs/EnR2D69A1C4RtNPZyAsdf89nLbi0PAnfZsn7teGd6yYu0TdYth
ePs7UzXK6Bc2yl8qELIfhveDp/7sSfqFL9l3Lwy7D0PZbWv3B4IN+E39m1tR
EcNg8iG5sbSsAfOHSF6idA+D4lxZ8QXdJty1Rnjf1HkGOPRtO5kh3op9t/wh
ZZ5lgt/2n2N3LnXhe3cOqQ7bMqFJxPcxX14XvobfmUq5MSHo8Omw3+Ld+ODR
fUkukUyQGW8Ym/rRjQVuBpzUGmDCZy9D65Nivfhxskr8d7sRKHu9f+5yBR3f
+uNez3Qfgfq6+CuLk3T8n/6veemXI/BRSFtaX7IP7629c9T12wh4ZUlmZ1/s
w1yTJXO7/oxAkk77h5fTfdhDzdI498EonM5NuHWdPIDtb6feHgsYhbG3m97e
2DSAL+TzRa96PwpGLmJMCaMBrHvk8+/7JaNw04RGOuw7gP/Z/Y3QFRyD4X8y
c//xD+K7n1+x84PGwGhAV0BwYhDb/B6WnfwwBkGUgpgd5CF8Rldnv1zGGKzr
UwnjURzCO6vp4R6tY9DIfrj90Zkh/HtMbR+sHodFdW2GaN4QdlStCCmIG4cQ
we0SR5yH8eDlwYfRmePw+PSbViWfYXw6mmT3sHwcJo1Na9+/G8Y6krv2opFx
KB3qdnxWMoy5lz9O4s0TcCbwXL0QhYFv7Sprj9KbgK3VT8/yKzDwsHN/yQOT
CRjNH/OM38bAVUzZt+AwAc7FauRmUwYOanhuiNMmgJlgnjIRwsC8IomaUSUT
8LOwfpwSx8AuhiVrHjRPgIgd/tCexsDn8ham9Wcn4NpQtoh5PQMrxN+I/qEz
CcV84dyb+Jg4mP7seaTxJDik8Gu7UZmYf1W8i4f5JCjveLTJZQ0Tj77sOazv
MQmfX/9btNjOxKmuR//mF04C7x6jUUELJl6ffn0womES7v9Vcw67ysShk0/r
3AcmYVrJ6UydAxPf+68gTo+PBfeKPq3S8mLi8YiugDVSLIi2+uhs48vEFm1z
9xc3sCAtWXTlviAm3ntE40T+QRZ0xwvrz0QzcfrTI3oRZ1lw51zavpoEJt5Q
dE3Z3ZYFjFftYUeTmThs4YnEBeKcm+Y88nRLZ2IhrfdLui9YkLvYt/dUDhO7
Of4YWR3BAlufg4qtmIknP3U0LXxhQZWAmi1fKRM3rpX4lFfHgsPSNSaXa5n4
wPktoe/oLMjmnnj4uoGJv4cYe7pxWFBzyGivSwsTSzK37VTnYsMAJ6uXq4OJ
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
8/nSziUqgrCrs1b72sCeZ/riaTFx9OW5XGx9eQv8F/zwbKiGONrtu/wg71kj
ON0QPJuzTRyNfjpYNnKiEbwOBJn17BBHuQ4iEsWrGiF67sOZDTri6NT2DhH3
zw3QY15umrlXHHk3iapvqPoFZkqiJ1pOEu/n/0pXnKwDk8y3RlIu4qiGUmtT
u7sCbKatlyXviqP9fGMta0vL4dFWlXTJe+JotraMX8qkHL4nfV8j6SGOzqud
TGdZlIFCVDNbwlsc+aUJCwa5lcCfp2KvqaHiyOOIrKjyxwKIPPtoYEWmOBr4
FL145uM3mFywdeP5I46OP1LZNHjnMz5rZrzp76w4knNzP6Bnm4xL0lRbJv+K
o9PRKsMU9RQcbju+pWNRHNFeWKVoyadig7YbAyl8Ekjd9Vj1hqUM/DbNwchC
UgJNq2/3NP2Ujw/aukhnb5dAbS93xTFPleG00tOlyTsl0MWKzI4zVWVYbp2W
U6y2BLKNkiU5Qjmebp39+VJXAq27sf7WG+UKHLnf9cEVAwnk8vTA77d/KvHv
tW7DEqckUGjA7hb2gxoc0+qZbu8sgUg3t+4JlmvAw6Vbe/1vSyDjAKGpstMN
eHN6r+DXOxKolnU3OMm/AWcG6Fmy7ksgub+lpp6LDbj60F9Bh8cSKP5lMt20
tRHP5TpYOoZIoB9/jB+N3WvG+knyvoGvJZC32KOfNV+a8aOw2vRv4RJIXL8t
4xS9GYve3iw0FSGBulosUo8YtGBFdWa6U7wEmhroed8u0IpNoi2FbmVJoN+O
Lk+q3dpwsL/ojuBsYv3erwOfPrbhdrd8y/RcCeTwVkpiQ0sbvnR2VcZvLIHu
FGtVM9Xasat4q+XtCgl0VEf0eXhbO459bJLh0i6BnmXx8yDZTjzqtNgb2imB
BGYC54JQJ95i9Vkoq1sCfTLb6ed6pRPn6AldnO2TQG73+xVJ3zpx3Z9Sobuj
EmjF9RnfEdSF5230Lrr+k0A2hlvnR4y7sVGuCrq9KIGsFUl+ute68VsR6bWO
yxLoZWdi4WbvbqybOtVrw0NDr0cDrg/96MYe/xIszYRpyHzpblKaag+uPRIC
p0RoyL5z10bW/h4sH+0lf0yMhoYng9TKLXtwgcGFXkMJGqoyaLI/HNSDefzF
LbVW0ZA29+Txj1M9+BR9WX/bGhrqiI54VybYi2M1J+S2yNMQve1G/YO1vfhA
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
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$13517#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1k2tIU2EYx495qenUOedmWGPaBy1a3rL8os+DNwYahlrkhbJyoAlqWQYp
pt3UD3mj8EO1JMvuqYWmZr0zxXSFzproFOpgQy1DvGRqSlZ73x0453B4z/s8
z//3O8fzWHacegPHcSH/zv93y6EwX2dhaDp/4Vt/O0y92SP2dZljzzoQRSfo
kzWzwM/ezPP1MICfPvLs4MsfbH0U9Of2xkufmkCdqwyO6+RBWzag3L3dwN43
AeczMpUdUE+Ss4TNwjOTwCdK5MuaYUL3f4fG0O6uwltfyf6Maf93PjNQ1Jx0
4P7SJKH1ZqFWeFrzcGiKeAWohzFrHriCZl1b1wSh9X+C1vvZXXn5ONE0GNzk
vYvgd6Fpa/gvI+u3BKlRxqnWGzriroxIWPVcAZqa76D9f0NRpHkdqh+9qB7J
XwO+2Lwf6Dx/oJfWB0efbYPNQ+uW/iwvh2w+6I7rK+mrscJKOj/QeTdgJc0H
xS5W3q0R1qil+RkfG2R8APTBPfVzNshTfiyPLTZSvmStPEd9XWOHCsqf5duI
zA9p2/fA5lL0JjRRfyyvAN2pX5In5OtOLQvwkEiTJHk7zfjbo9bbdZcxfoIE
vZeFH73ngK2vPniXZ/KE8hCiImlLldOKgcyXxY7Hxjmi1jlIt+jQxXw5IVdH
/LyqrkGDqqQ4dN0Ji9rT8ksrehgvZ8xZdE06ucMALRePVEoPilBh26tMTR9j
/ESIpbWdUR48uB1f/XJ1pwtyTW0Zlz/xjKcLKkLD0mLmP0NuWI2vrbUYc54T
U/zYMOMrRp4XRqgEOvjoGXi+wChG6lffQXm7Yi1dJ/5WA/0LDa6W/ez7kaCI
1icV/Al55hUJ8o3m/oT6kKCKzkdmiF3WeIobptL5mR83Sz4Sc/vO68RAKSLN
z3xJLXzI48JQx0GBDBUiMz+g/mTIUb5gf3g0RcXLUEv5A/XpjnrqB9JD8p6Q
FndE6g+o381o+X//Ahy1yOU=
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.011000000000000001`], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[1.6]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxFk2tIU2EYx8+8lTp1zjkNa0z7oEXmLcsv+jx4Y6BhTIucUlYONEEtyyDF
tJv6IW8UfqiWZNk9tdDUrHemmK7QWRNvUAcTXRniJVNTMtn7jg68Bw7veZ/n
+f9+53gez1KqLTmOC91Ygo1lwf2/5Kb7LAxO5y1872sD49u9Yj/nOfasA1FM
gj5JMwv87K1cPw8D+Oujzg28+sn2R0F/fl+89NkEqHN8Q5QdPGhL+3337DCw
9yeA8xk2ZgXWkaRMYZPw7BTwiRLZsmaI0PM/oCGsq7Pg9jdyIH064L3PDBQ2
qQ4+WJoitN4s1AjPaB4NGolXoHoIM+eBy2/StXZOElr/F2i9n9+TlY0TTb3B
VdazCP4XG7dF/B5h/ZYgJXrE2HJTR9x9IxNWPVeApubbaf8/UBhl2oeqxy+r
hvPWgC8ynQc6z1/oofXBwWf7QNPgurk/y8shmw+6lL3FvdUCrKDzA53XAito
PihyFni3RFqiluZnfKyQ8QHQh3TXzVkhT/mxPNbYQPmStbJs9Q2NDcopf5Zv
EzI/pHX/Q6vLMZtxgvpjeW3RnfoluUK+9vSyLR4WaVSSd9OMvx1qvV12j8RP
kuAPbhHH7ttjy+uP3mUZPKE8hChXba10XDGQ+dK48TilA2qdgnWL9p3MlyNy
tcTfq/I61CuKi8LWHbGwLTWvpLyb8XLC7EUX1amdBmi+dLRCekiEcuse35S0
McZPhFhS0xHtwYPridWv13Y5I9fYmn7lM894OqM8LDw1dv4L5IRX+1lbijH7
BZmIHxtifMXI88JIha0OPnkGXcgfESP1q2+nvF2whu6TAEF/30K9i/k8+34k
KKL1STl/UpZxVYJ8g6k/oT4kqKDzkRlikzme7IopdH7mx9Wcj8TeufsmMUiK
SPMzX1IzH/KkIMxhwNYN5SITP6D+3JCjfMHuyGiygndDLeUP1Kc76qkfSAvN
fUqa3RGpP6B+t6D5//0HLBHI5w==
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"First derivative N = 60\"", TraditionalForm], PlotRange -> 
     NCache[{{0, 2 Pi}, {-1.069560661374064, 1.0695642341162421`}}, {{
        0, 6.283185307179586}, {-1.069560661374064, 1.0695642341162421`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact First derivative\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx First derivative\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 7}, {20, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8295420344048705`*^9, {3.829542313250107*^9, 3.829542315634766*^9}},
 CellLabel->
  "Out[449]=",ExpressionUUID->"5ad15b75-3fce-4ca4-ad3f-527c7d0fced7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
XaFH0nnw2M/rwxMWudEkh7fFroYHf9Wk7nyLxY3kV2rCVUZ48LleS9lgHh50
99CRS1rbSXjQ8p1EJwke1JnbUFxYQsJjdlKjFHfwIGxDSEZWOS+er6dwRl6b
B82p/MoXauXFGw009sns5kGDrpPp6ou8uKS1FYe8jwd9YL2jvNbkw1MuJvhP
WPGgn1GVPrde8uF5OdRzr7150DGlQZPaWH48/Be2l8efB91TGE1hvuDH7bkv
rLEM5EE7c3yHm+r4cbJ97bfx6zzo6mTXS49VAvhZ0SCtjfd5EO9KfckuDwFc
T3erqHcSD7K4OHc8MFoAlzz/ewRL5UGx7wZ+Hk8XwD9WqaXYZfEg02bRjslm
AVzeb4j7bhkPklr9XNZOSxBfTE/o7H1H8L10bKuPuSD+7TuUquCEHrInojae
EsSDtyafb6gj4u26ucM4ThBv77RoXNXOgxRY6q8i+wXxQkF27sFuHpQXKZVp
uCCIR+/MvZ7az4PW79TYmihIxrXjebR3/eVBv5pMdo2qkPF7+8pTPdk86Osx
9nNDHzLu5nnGv5KLhEp0NmqFhpNx/VSqpRAvCaUJvzxueI+MTy+4k3KESYjy
qA98i8h43YbV3fPiJLSy9/Z4F07G0w7Vlu2TJqGBtZkiP76RcYvn6916ZEmI
7bj/9eFRMr6p5ZvB9g0k5DytYTA4T8bZPEGygYok5Dlo58BeRcFfOPz+Ia1G
QrI3styr6RQ87Ob1F6c1SWjmv4BblzZQ8ONlahFFOiTkHc+OyN1OwQXEb+lY
7CWh24X0mzmIgvfo6VBTDEmozfZGh6cJBS91Hfo7akJCf8ZPPqy0pOCxDxJq
tC1IiD/jssedYxT8TDU8ibAiIfOeDNFRJwquOz1++acNCRXpVKvXuFBwSdlk
q/V2JHTDCovd5EHB/5ruV77oSEJbL8YOCvpQ8Cr/Od73p0jo4ne9ea8rFDwp
42kP+RwJXWiZjnQIoeCePyzeHHUnoY2MsVNfwii48QorIcuThN6fvnG8MpKC
y23LdZ/zISH5kEN6O25S8AVbGyP9KyR0jTbWr3Sbgn8L55GPDyahg55bN2fG
UfDMwleMrmsk1LIkPPz0DgUP6nb4uS2ShKraanjX36Xgc/v1Us/cJNafet0p
e4+CuxeudXkSS0K/+ho8nxF4cDVbrS2BiFcYW5RPYLvwDib1AQnln/JNRARu
+ve22vwRCZnqdkseI+KZ2ibHRj4hIaOPkkpLxHpV+JWj+DMSkrhv+XtdPAX/
T+mYAjObhKaYb9c1EPkW3dUZ3/GS0Mv8jMAywUdpmVZ64RUJha22Ti+NouDp
ZxdDs0tI6Md6X9bCdQq+uvG3SV85Ca0WeK5YGUrBE3aVSqx5T0L1ve/3CAVS
cPKz+12HP5CQSuB5+z5foh6EfLNja0jI4Yplmp4nBWf4HvaqqychMTVelfWu
hN49O3ZzfyPq4+CycswpCj5iLMGr20RCe44k14XYU/DWNU0PC9pJ6NOuD4ks
cwp+KKLQebSbhC7LhO2INKDgdRPxyhsGSCjdyHJv0m4KXv7hIJ74l4R0rWkF
x7ZQcLVtqjcbJ0noUZTSQ35ZCp5zT+QweY6E3rqEkECCgj9w+fonmE1CMnzb
npmxybifsJnoGWFe5BZv7j1UR8Yn/JTaHovzovVcRs0jb8n42V7BZ61SvKh7
zdDdyy/JuE1x3U5zWV5UljfYsyeWjGsdMzqxQ5WXuC/WnLxkTsZfVm3acmEH
L9obd9N8+D8yvlGZdyZLmxex/1HsRreQcUnOx4jViBcpuh/gT+ch43MZe/NW
WfIi44MXXf4VC+LuIuv9dx/hRdMj7uumHwvig/5ce32P8SLxAd5HN24I4j9N
seaRk7zIa4d3SKCDIF40pcv+7s2Lbr9uTvDlEsS9dHXMHt/jRV0HxH2cdwjg
XB73QuMe8iLrzacle2QE8NgnU8VXU3hRnbpKsACXAP6cO3ftqQxeJOiibnP6
Mz/eXyczoVjCiyRvetpYn+DHDx9hxRf+5EXzjWo6+b58+E6Pyt/VVD7EXir/
+vIiCa9+sppSKs2H7i+FaqgdIOFWP/wgezUfGjPWIF1RIuEemqo5NxT40KwY
2+7EIA+ezXxyxUKDD/1eXS4af4QHp0ddW9tqyYcy1l6vsFbhxplPDJz/xvOh
P8Gvy3RCOdieRb0E9ft8KGXV0JF9WzjYNQvtKv8kPsR59DuG/8cKJrC8VYGU
zoeKHyvxfFq/gkkdF+1fW8yHElF0ph3OxtQk209a/OJD/wmJ3/g7y8DORF88
WSjDj3ZMJfg4GcxhjZ7JTv7p/KgnirtKc1U/phQvxvLJ4keixcKedQ592PWC
yPvez/nR+MzTG9Vve7GdE94NF4r40YKsiRPXeDeW6mamebqKH4XkmAgkDrRh
rmfZ/Jb9/Oi/xFProlc1YiT7EwVKCgLolfexCX3TbDgR2GyyZbMAarz8l0TV
egVlyaaDm5QE0FLKoQPZWAm4tu2UWa8hgFptY7xuV7+HHzai12n6AuiQW8kn
Rk0tPLbEbUjOAmj8Zbt987Vm2LVfYaXrqQDKjSkb+XygHzSfNUTXZgog7lzy
ZGBNP6hwvCUKcwXQheuuVad1B0Ch7OOW8EIBxLavu9CtOAgUReL9/EEAvdsR
kOA8PwRdfDk5fr0CyG3ntr/GrqPQ6nxoh9OgAPr0dPt1s1+j0FS59N5kRAAl
JqWiqzAGn/xMfq6dEkAzzq+Phor/hYLhseUqjgA6EJUW8v3FOFz7tN1aVE4Q
WR5X3pf1ZhKCFH53LSkIIqlR9w09lCnwCwk5179ZEDUbfG29/t8UuO78Hvxa
RRDFme7NeJA4BdZZnjl2ewTR4bUlmn9NpmFTZPFytoMg6hGX6HZIJd6H/XbR
d04KIoN1y8e4P83A6j0kicAzgmhsc1vZ3okZEFk4vMXigiAqPVU8e0dvFhbP
LFjNBQkiFYpSS0jLLNQb7spBKYKo82O0TDXxXr1cG6ISmiaIdPea8q6VnYct
JtUl7zMEUXCGPy/3vnmIND/44b88QXTqic3slVvzYGB9pl2zUhDxLkQ3baIt
AO50R2hrryAiOVb//i2zCJ79vxNcBgXRs6+XhfbrLILc6bUyWSOCqNuDh/eA
zSKEuGRv2jAtiK44iLiuvbMIuh7v96zjJqPy8xk3W1ctQVngqKf4RjLq+76P
e3/jEpxdVlk8uIWMMiIzg2xHlkA61Cc4VpmMvnw7I8jPxQCfMM4NihYZNbld
bjFUYYDGDalnvEZkpCFxbMQ6kgH9ZLutBqZkhBu3x3s8YsCdmLSCMAsy6j30
w2H7KwZMxW2r4NiQ0QFn0+WkVqJ/SNz7i+FCRl2BfGl7NzHhBD3KTsedjKbn
40ritJkgnPylz8+TjFZmG7dHmTDBPdV2YvYyGbGZt5d83JmglHGBf+IGGem2
2rw4kc+EzMKkXf0vyEhzy5DDqg0scGXZKbUWkNEe3fFfNqosUDOUXfOtmIwk
NYN3u+5mQUVrOvvNOzKSuX2U56sVC35yXmB3PpPRhvu9k3dCWPDQxONV1Hcy
8r2wes9wNAtO3FV7GvyTWL9Bu5edwIKxza/DzneQEY/BKstLWSxYZVFpuPcv
GVFPGqjda2DBpwdXd2pPktHXjaKu5J8siOnTV9w+S0YzWryH93ewgO5bKyDD
IqNE1fcnaX9Z0F15gyHCIaPwKvukFzMsyBAwHyPxUNBfnY4cASYLVFMaP0+R
KahKxfOSnAAb5oYSKoZFKIi8+gG0i7DhreqRvE4qBW30KuV1kmKD0ce22LrV
FJQ9npL6bT0bHMb6LdOUKCjS+E+xkQ4bFDQz9RNVKGh13CXyOT02jAS77IjR
oCBb2sebR/WJPld8XPLyfxRk02dPyzVjw392+bweeyhoi0XeVvIhNnBlei6c
0qeg3Ua1XrpEP3pLZ77loCkFLXdY5Urbs+FQWFmdoQUFsRSskjFHNkh/ufJm
txUFnUpXq959ig3pjivJiscp6FIuDSs4z4ZzufitdScoSG65PSbHnQ0qs2FB
Es4UJNP7L8bvIhveRPKf4Jwn+HH5SN/zYUNIY73F/AUK+ioV+GDQjw0Gq2Pg
rxcF6cXM7RK6QvTFpy3UiHcDGr/I9KcQ/XNjntj6lisUpNw839AfRPThi03i
X4MpqDsm5UVCCBvs997n/niNgl7NTtxZc5XQ55btbHkEBQ2Va80HX2PDn2aZ
wfwbFJSFcczehhF9uGxnc8ZtQk9eeaEf19ngfe5xTfIdCjp4/8XzqnCijy9y
Ko2/T0H8EYuP4iLYsMJSyI5MoqCOlURrnUg2VBsOPQhKpSCxI8cM3hP4Zlx2
tPdTCsLljXtlowj92s5fOZdJQc5umQ8dCCy1Qdn1RC4F/ewf7bpC4PiEWza5
eRQU0ha71pvAZO6/+nOFFFSst3pOn8ARXqaqUEpByWUxU+NEfK6+3DU331IQ
07E2xZPAgYcEBX5VEnydboR9I/JbwM7NyX2kII/MC0r8BPZSret1raUgp5SR
NWsIPuOPFb++/kxBz/mMusgEXxeRqDdcjRQU1po1+5vQpz94ONOsmYLebuH0
hxL6OfwzTEhsJfxVlVThC2VDq31mSF8nBVEOB9i4BrPB+gvJTbmPgspN7na+
JPz5tvu0rf8QBZF2x8A3wr/q1RvUhCco6NrlDwkFvmyAm2Frj85Q0M3KvYGe
l4h6Z/QJPFugoPD8zepULza8ak3r0+EQ49slRxhubNhmzPXtOo8QStIJaEFE
fWWVOb79xi+E/gotexJ3KaQkyt49LSaEllP2erk4sYHGFxJaICmEcqvNK3Y7
sCHBt8uNSRdCj9fwBswdY0P04RSD+PVCCN3jE5CyJvYHdfXCOw0h9OHEPMga
sGHy2pV+Pm0hVDTLxVqP2OA63frNcrcQKjTYGSSsywanxgfZf/YJoe0/FZxT
d7DBPFbqmMQRIcTjcPv8C2J/biCLV7j6C6FtTl+CfjBY8PiKZ87rQCF0+ubD
ruA54rwY/X6P66oQyqrTLaBNskCkLvZCYrQQEn0n3yc5yAJmhJBcVZIQ2qI4
3qr3lQVNqwTCZCqEkOFK9tXoFBZM5CWdOIQLIWu0htc8kQWCx7ftjqoWQvQ5
taZV8SxARRZzc1+EUAB3uLzhdRbkO98/29glhA4nWyC18yy49VHBLIpD8K8p
lqrSYIFBhJ7kvL4wUs6o3df7nglO6t+ntu0XRoaHed2glAmBXU5fnc2EUViN
xbH7xPlcpBUe2WgtjIrkMhs2PWGC/HDD0ovTwijAICOoPZQJbKOjXc6RwmiL
T7jOI2DCa4FLWY31wuj9mtuPQ8sZMBx07V/lV2HEM2rRbkvcJ/TpOM28H8JI
natsXDGHAUFtL6tutAmjizoPbAoeMMDg+XC3/qgw+qSdc/yYHwOazI7TXguI
INqxrSECGsR9FLs3Omm/CIrVr2iRTV8CBZ5D36PMRNBai8Obah4uwWH/E9J+
B0WQwzPDYce4JSh3DMywshVBAVeKNnsHLUGo2muc4iKCchd/6vLaLIFI0xZG
cKQI2sx9/TrOtwTKUmKuzjUiyC7SR1bfYREkCt69zKwXQXvGg5xULBeBaewy
OfJVBMWN/lnkNVyEuqBKn4u/RdCDSXMeP+VFOD3oHhr0RwQVN+lftGQuQGpx
/b1EQVHUrrhSUnRnAcIP+La0CYuiXZfXd6iFL4D7H/nV66ii6N+21LD7fgvw
35rLT56tFkXd658Ji9stwO+wzc9fbRNFWtay3HUKCyBidR1rOCCKdEi53n9f
zsP8XxVuEStRxDsUdux56jx0RrQbWNqIogmjdC/T2Hl4/ka9oeWEKEpyvftL
+eI8GK3vbR68SMQvMX7vqToPIVO6Yyt3RFHQ9nN/snLnYDJ2QXLHb1H0B2SK
joTNwviUbNX2dlH0TOKke8/FWRiz2n9xS7cocrlDv23gMAuD0g/r1w2Louht
Gn1PtGeh/fGuEIEFUaQXqMlKGJsBZ9vK2QmyGHJfCOLebjIDJ6OtTMeFxJBm
0LpGM80ZcHoznDYqIobuSFY/2Ss3Aw5rRC0GqWLIfGOFduHcNBztccxpWy2G
Xm4uISWlTsMBl1UO1UpiaKre8LLVnykwf3i/+IOyGKrQ1f1S9X0KTOu3kjEV
MSR61noTX/kUGG+zKnujQcTreMQiRU+B/mS6eMF/YqhG2n2yc9MU6PgbfEoy
FUOmRU/oMYUTsCEqSvWiqxj6997H1krzL3j/1gxxdhdDGQfqB44yxwDf1P/l
iIcYWkl/2L2MjcGJal1XXW8x1Lp1ERRMxyB51UyGYIAY+oTIot+PjQI1yH51
xg0x1HtA+ODds3+A20udty1HDFH3HYlbozUAlni39ZfnYmhdRNrjVxP9kCYa
k469FENFMsaNfdn9sCd/GLJeiSGf/TOCMjL9EPD3UcClcjF0Zo51u3uhF2bO
8E0J1xHrPTBp74Au6D/e0a7/RwyFzIkp0A7/BCE922ynUTF0Kyw2TvZpE2jJ
/bwU8lcMJX3RbbX89wOiBxqE3k6KIaWMUe+91xtB1f3tHvUlMXRCRP9Zu+ln
CApOSpcTFEemL832+4tjIJVm68pWEke6F9+HSNGLMOOhn4zXHuIoaaW+xC2/
GwveFhtY4CmOuG67uZX49WBFXsbLOd7i6ERd7PU7cr3YmpUKrhQ/cVRJF0/T
GOnFJqSz+MNCxNHxyUt14gH92D3jy1IWseJI9pQo5cfjIaz3xVr14TxxdNhm
X49i719MauZ3UU+BOBq9NJTstG8cM9W5o9lWKI5at5xR8skax4qreXW+vCbi
fZTetNH9HxbZNbGn6L04yj9i9sVrfgJTFv1gHvJVHLl/ZcQLcKawy95nzkn/
E0e2jsov68ZnsWizCZf/JsVR7PTAVva6OezBRn+XE9PiyHBzWc6cxRxW+jv6
bNY88b3+hvuqr+aw2f9ent65QujzriMv9+I85sEz62QjSkXWOmeb7vUtYMGd
gU4B4lRUKB3He01kEYt5TXJ6LEFF4cywbbK7F7EXLtKOwzQqMvth53b27iI2
8nmXg588FdXIhX0UQkvYqXtXjyWqUxEt5c5oZjQD874geOztDmK+rpmv+CsG
FmaUcLRbi4rufZMRW9PCwNKWntlu/o+KXuZsZ/BsZGLd9rVHSvWp6OlHdUz4
DRM7uknE6rc1FaXaWZGp31nYuZVES+YRKlKbkRftmmRh/i1ylrJHqWiwIdFS
S4yNJd5QP3TWnooSB+vLbxxkYz//HbZYOE1FJQqD7dl1bMyi9JGptB8VHeLT
VZ15toydm3XmSF2molqjq+rB75ax62pKJVIBVHSV9lX0YdMyVv68fJ1UCBWd
XdMyHsBZxhSe/JqSiKQickVy6qD1CqbbmZIpEU1FzNimvi6XFcxW5vRxiZtE
vqkqZ5wDV7CYuzMfqbFU1P3kCZXydAVbiBJ9IJ5IRZ8upUh8HV7BxGp+m4k/
pKKwTWf3UxdXsG3cj7nEk6noclNyZzcfB3MKUnYVe0xFSsmf/IU2cbCAN7Oy
YmlU9JW68sJ9Bwe7v/D2p2g6Ffkob3tstZeDNXia6IlmUYn35TXdfDsONpgn
NiOSQ0VaiSNqG85xMM5YS5bIcyrKCai9tNaHg2meOSsmkk9F+1s/JSXf5GAW
6dtrhF9RUc/elz2y9znY+Z65K8JFVPTA+NGuzU842ONj1weESqlo43dFyfeF
HKw80fShUDkVCbXcoJq/5WA/f4ofEHpLRe8+hMs7VHGwCbG2VUIVVPTmv3De
qXoOJmCRVkqppKJ/a0/FkH5wMIVbLm4UnIqC2BeuJ7dwML06FXlKFZFf5JmK
wi4OdpR3oZlcTdRD2VUh0wEO5q3//gb5ExVZDXuYnxrhYDGh4XvIdVT0LfPY
0eVxDpZdYTYr2EBFu4OGRenTHKyKQc0R/EJFqhd1bIrnOFjnznZ7wW9UFHJm
Wvz7IgdbuPRUXLCRiuRP7NjuxuRg4oXnPgk0UdHhoKf3o9gcTHlCNVCgmYre
jzjpblzhYEbbFlUFfhP1FSUjvZdD+HOucpC/lai/6wuruwkcmBmRxN9ORRcL
soxYBE7sN7fg76SiqjL7hw8J/EpOkoe/m4p41b5TS4l4DfYdZXy9VJR3UafC
epmDDSWlu/P1U9FqI5vHXiwOxtVyfj3fIJHf9fOfRBkcbLWk+m/eYcLvw1qG
KguEf5ZLN3lHiPHLKypfZzjYwVgMeMeIetx389H4BAdz/Rw5Rxqnon1h67Ji
xjhYuIBFLmmCivw2BF7IGyL8NJQ6QZqiIqjplzjYy8HehHVSSTNURBIVxbza
Cf/YrkE8C1T09zz7839fOdixo2ZbGYuEfx/50vk/cbDq4m2/JxjE/jm7da1d
JQdLch1XbV+mIrn07m+JeRyM9OlL53cOwbf+wuXQDA7msT7vRs0qCSSqKJgz
mczBDFovDLzilUB29JlUl0gOVrDDIj6LXwLJxlhPXAwk+Map6KUISqCzWf2t
XJ4cbMpwMjFKWALpMiqL3ttysEfFnqYnpCSQgYtW2sv1HIxP1HLRmiaBuB1E
fnJLcDBPV/UMExkJ5HX+nt0gD+Hf+pllzXUSqPXgSZLZ4Ao2E3upkLJJAl0p
nvYverKCOYxZn1ilKIESC/fxXby9gtUZalIWt0ggtFv71NuAFSyVPXe6X1kC
5XZlBHKI/W/s6kd/oymB1NXyTlmuWsGKa2xq8ndKILq5RXzC32VMdr22d4aO
BNL+O1l29tcyNtuy+DlOVwINamzc25C9TOh/JfSsgQQ6Hf6sPnb/MjYnHzQs
cVgCvS8TNk2+xMYcg+zvCtpIIPmQp72HbdlYQ4su4thKoPal9OKX/7GxJ7HL
SWN2BJ/MzVM7udiYKTvkwIdTEmjhy62TDZEs7GnLtRKPSxLI5e2N3IdhTGy4
Rq0n1lcCbb2p75fswMSUS3oEC/wl0KFIIXynDhMrjddznAyUQNZNKdR94wzs
iwlD0DNcAl2t7VWoP8jAlt55Onrdl0DGLwTGw3mXMIs0R7JPmQQyMjl3rm/H
PHYvVkTr3hsJZPrhRYULaR5rC3rvWPJOAplVf57La57DTh9b83oOk0BMHnne
UJ857Aq1xdG3jtAredHNpnAWywi3eO3XJoEk+QbQtPwMxjyn53SFJYGUQ4K/
UD/8w9Yt37HzCpBEq0dtyn/t+ogZ9x948yBIEoksztZpJn3AfGoFaZUhkqj1
wlDF8VkMa7hzrYl8XRINBicr8wa9wfw2e5lk3JJEvbzGGy9Z52KNBw9pt6RI
onjLcz5znBwISxeR0MMkkd7YwuMlq2+QF9XgeeqDJKIWbQ0u/PQdWt0jv934
KIlCTLImHFMaQUV75cbvWknU49ThOUJpgo7P/7g8GyWR6iOvgDe9zaA5/2Ui
vU8SKf93qP0/p3YY3n+rQYAkhYa3flEct+0HZzMn+U18Usj8a5DGqsx+6LLQ
8tsrIIVW5Sa4Pp3uh+YjPesDhKSQNJrqCrsxAFWndlz5KymFMkT/SdYWD0Jq
aIfit01S6FgLF8NsZhgOl22LuLtfCjn5CbXU0P5C41uujgITKSQ310M1sfkL
ZpW/1L6YSaH1S+wrx+/9Bf2a0E7SISn0+7kd/1bRcVD7+XOH31EpJJEc7xLC
GQehycD+o+elkIGGvIbD5wn4uPkLyN6SQv2zCfdDBafBNLbHVPq2FBIYOEY/
LT8NjfMzR0TipJBuyvPj67Snobtaxn0lQQqpR34UFj09DUvOLg+7k6VQUXl3
+/y7aVB+wj39+LkU4gv4ICVwegaK+KTZiS+lUIX9dOmRyzOwy2Mrf1y+FDqU
JSIaFDMDRnqH1oUWSaHi8ypT1iXE+7wj1cTxrRRqNDzdqc09C4m0XelyDVIo
+AXNR+jBLKwNNc+jfZFCyUukCN7cWXg27Fgu+k0KnSmefdTxdhZevY78xvkh
hTzivBfkumfhs3Uzs6dNCn1Q9pMV3zAHXPEXrdNGpdDGd+2BP7PmwFUgi7Re
UBp9yqx90PBgHj5zR9/eR5FGrMAPY+uy50F5+bz0WWFpdMvE7JZV6TxMTm/f
8kJcGo3MhkqebJ4Hn47XZlqrpVFcSvaPtaILEJxfk2CyTRqZRaTSj4cuQPzh
IXnvA9KoP/kGvv3AIkxb1ObeOyiNhsNyzh44tghWJrkaZZbSqHRw77WjZxZB
as8FA/YRaaS+Y8MOjeBFSFacd4k8IY0+BD7WY71YhAwmqSD5ojQS92WoyBH9
YlnaRr2Pd6QRu18Fd8xfgo0cg8APd6XRKsriA7xsCeIdzrzB7hPjlz6ISH9Y
gnOrs7QqkqRRnh/N48nPJVh9T1Hl9VNpFHLarVN1aQmCopTksgulUerT3Zan
gQH6Hmqrbv2QRnunhXe3f2JA/pdDcOOnNDpvsr1B4DsD1mzzCo76JY1amfe2
qrYwYO5PIeN6mzR6UGt849QfBmSe3DET1CeN8mOqxt34mSBwZOeAx7Q0+q+0
0WuVERO+7datsRKnoTdfNPz13zPhZrkvy0iChiQtjd4dqGbCfq0C9d1SNHTW
sWfu0Gcm4CoKjzfI0FBo3ENBaGNC8XoB/zl5GtqWzf29bI4JD/mbtySq0VBq
pFSioBILjoQLO97UoKF3/vorN9VYQF21/36IJg1dHilhcGuz4BbzzSoXHRqq
/VSq8XsfC0L+PWnXRjR0wLdVk8+BBad+usW0HaShHtflygu3WSB/KLPqqyUN
lQsk+BrfZUHnl+6lD9Y0dOZFij8tiQU2nyzPPLelIatKvZd3Mlhg/EZ7T6Aj
ES81uHb6LQtUnvBMrb1IQ9uH1u7VGmLB2Bq9zeJeNKQidmtab4wF2Q/97Hkv
0dC8+t132pPEegmjdf/8aEh5/mvB8hILJCK+P60MIeK18l34QmHDkusja6dY
Gjq01rlNV4UNcQHP+EPjaajx7DubOA02bL754l1qApH/nRtun3ey4Ujuuw0d
iYQ+J5b7VvawoehPx+yRJzT0PCb9vLEFG0wWB7J9ntJQlfF3apclG3r5xu3u
PqMhgwIudPQIG0Q3sz82ZtPQlIF2BJc9G9xPr71n9oqGBJr6hYXPsYHHZ6Ox
axEN7VKq12hwZUPydWV2dAkNDc/eu+J6gQ316bqnP5XTUMne/gwrbzY4FRnQ
h97SUO7ZC+lJPgSfD+ZfeN7TkBhjdvaDH5F/n73m3g80xJgRLS8JYMP7qdMj
jh9paKzP+L+QIDYc5rqQElJDQ+QLtaqKIWwYF/U9lFpLQ51lV9YVhLLhulww
qaKehvaRt0ZJXWPDatWI8vbPNKQUFzh5LIzgv+e2O+MrDVXLL7QEXif4W9yX
pzcS9aiwggeEE/wdUpt3NtGQjWvHVpsINvhfyIw+0kxDdK238cKRbBAJztP1
+U1D9tvzvNMInBXzeiqhlYb+BBeYiUSxQS/lfUZhOw3NzWYl2hC4+UXN0cZO
Qh+1s18vE9j93VehyW4i/z/553wIzPP5Fy7cR0MvVTV7jQmc3N7lozxAQ9SB
lOfzRHz1saEtZkNEvZAj9QIIXMf413n+Dw0t20UI/ybycxJciI8epaGYz9ti
BQi8SF8xyP5LQ0ubBDTECT6xW/gYNf9oqBTPdZ0k+G/WEckbnKShgzrPctIJ
fd7vlz7JM0ND9+C2ndJVQl9bWSmFORpKDxWciSD0/Xt2cz1aoKGG6Jq2EkL/
MD+VYMclGvJoDg4tJfxZHblTPYRJQ1qtXAdvXmZD4f09QylsGopU0ihWJfw0
zjRKerdCQw/KhaWzLhH6llgcaOeiIwmRF73jnoSezSde03jpaOSa4oFRon4y
B86e38lPRxsPdVekurBBd9Zj3RFBOlKyFlaTP80GN2poRIIwHenNHyuOIeqR
WyFqV6EoHa0cLL/pe5TQTz3u33dxOqIzaHNbDxN6HXpyRFiajhbU27hnTdng
Wj1UyU+no6vii672RmwQ1lHewr2ajppuHSIn7mWDldwb5sI6OupbH9Dvr82G
uQTOqWk5OprL7peQI/ZXIp/R17/r6ai07f2Fe8ps6PjX9KR3E4H/exD5R54N
ISdlBDsU6ajKwvK/6tVskP/l6P1rKx2Zh7A5//9f4OmKcYOG7XR0dK4uU56f
DRM3+caKtejIkyoZsYo4D+JXzK3ztenI+PzBedV+FuzwvluRs4uO1iQU7Nzc
zoLLx+TjUvXo6Ed0K++5ehZwb/lPM8qQjpZ0HpWoZ7Ig49HV1Gv76ahnXD4u
7hEL9ovW8gWZ0NEvndqhV3dYELNg3eZ5gNATz2vdHcwCqZoLIceP0NHDidLw
U5YsKNcp+XPYlo6+rL85/dWQBcdfMg8dPEZHmrKuVxZ3seDx3agNBg50dK1p
XU7EehZscX5at/0MHeVFHl0f+o8JDb/+qG9xoaOSF2L8P3uYcMFE5ZHCeTpK
0Hj/rO8HE4rU3l2gXSD4b5H7ofyaCbqcZuoqXzqqCw3Ld7vMhG7vNUEsPzq6
+w5fjjjHhGvDJ4fmL9PRHnpNls1RJnz6OlE2FkRHQpzBDro2Ew6mCDg0hxN+
Vv+sEJ9mgPMu3ezse3Sk7BCw4GDDgPP/vs53JtJRxWz2XRXifvN86mhATaKj
8cgHtQ8VGRAqeL0vKJX4vnDdWu3FJUhpq19jlUVHvqpejVF3luD3Fdt4dhkd
ba2aNeotXISu7aPd6m/p6Nyr8fjFu4sw2Bew3aWCjrJu/cpO9V2EWZPHDT9w
OkLtd7C72osgtnqIlF1PR+4ml+9Jly6A6VvvK5YddEReI+g0nzIPlh6kusgu
Yhz7O1HkPw9HFRKlK3royPZjk8GC5Ty43HxTvHmQjtaGOhwR4p2H8ONcE6xx
OmIGFAmdPzMHlczbzlkrdHThubpepMgs1OTLFXZwyaC0Vr4ut74Z+OJcyBHj
kUEFdM/vjcUz0NHQnBLIL4Ms58SCabYzsJS8puWQmAxa7Y/84x9MA8cib1Mk
VQYNlTJEz5+dBj4e8HknKYN2R4sxKzWnQdLNWXyzjAyyqhAV6P8+BWvk5hzt
1sig6MIbrfkpU6DwMyI/fp0MalB5bL10bgqUomjLNXIySGtdxLFKzSlQ351r
xlovg2pzI79xcU3B/wDLw/5z
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$13577#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCwBWIQDQML/v0Hgvf2V19Xf355bpc9w+JuB+sPZ6D8U/YN
Yf/+T4x7uf/Bhzll+tJX7HnaQsxdM/7th8jfsrc7H8/idJbtQGqxrkXQwQf2
BcxymmmS3Acg6p/YTxF74WZ8j+tAdB7PVp7S5/YG9pf29zqyHYDof2UvcvUC
V2Pk3/0Bma8Nj2u8s2/4/mrXzYwX+yHmfbB3kF7cvGPNaXslo9TrDnmf7Bn+
CMno+L63h5j/xd5gSrqH9uvv9vPWXxGVO/HVfsbCn9vVLv+xh9j33d4lwfmn
i9t/ewldl5Dfij/tJ4D9+x/qv19w+UmrNk+6Uf0Hrh/inn9w83k1lC9uvfof
bj/EfQwOMPcdCTrZfnI6owPM/RD3MjnA/NcoyKi+w4XZAeZ/iPtZHGDhY3/B
4tiyjywOsPCD+IfVwQ0avn/6ClKnzmNz4GmHhD/Ef+wOsPjZ6buCpcWbw4Fh
NST+IP7ldIDFbxnPg8VFPzgdTPbXCxYf+g71P5fDiykm7/3af9ubnhZ3TlzK
7ZBgts01tv0PNDx4HEzaBG2Cvvy2/9Tp/8g/iNch4GLHvRcLf0HDh89hy2U9
zQ8vf9iv92hvtPvP55Cj9aJHcNM3aHjxO3Dou8bOaPlsv605foJYmIDDjesc
1bOr3kLDT8DhwHdWxpNe9+1Fk3/f79URdDigdDb+eN6W/ZDwFHRY0PxNOabx
+f5ip+n6rMxCDjySMwPDbn6Fhq+Qg0/d/gkNzn/3X1I0rq+5KeSgBEnWByDh
LQyXN2Q8f+7zemG4fkj4i8DN73+QJZfdJgK3HxIfInD3vdvPlvcoRtThxg2I
+yHxI+rAAvWfz/xFeyONxRwKoP6HxJcYPHxW19nxXuQUh4cfJP7E4eHLFXcr
xuOBODz8IfEpAY+fDNuyNfu3STiY7IXEHyR+JeHxCwAgutkO
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.011000000000000001`], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[1.6]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxTTMoPSmVmYGCwBWJGIGZiQIAF//4DwXv7q6+rP788t8ueYXG3g/WHM1D+
KfuGsH//J8a93P/gw5wyfekr9jxtIeauGf/2Q+Rv2dudj2dxOst2ILVY1yLo
4AP7AmY5zTRJ7gMQ9U/sp4i9cDO+x3UgOo9nK0/pc3sD+0v7ex3ZDkD0v7IX
uXqBqzHy7/6AzNeGxzXe2Td8f7XrZsaL/RDzPtg7SC9u3rHmtL2SUep1h7xP
9gx/hGR0fN/bQ8z/Ym8wJd1D+/V3+3nrr4jKnfhqP2Phz+1ql//YQ+z7bu+S
4PzTxe2/vYSuS8hvxZ/2E8D+/Q/13y+4/KRVmyfdqP4D1w9xzz+4+bwayhe3
Xv0Ptx/iPgYHmPuOBJ1sPzmd0QHmfoh7mRxg/msUZFTf4cLsAPM/xP0sDrDw
sb9gcWzZRxYHWPhB/MPq4AYN3z99BalT57E58LRDwh/iP3YHWPzs9F3B0uLN
4cCwGhJ/EP9yOsDit4znweKiH5wOJvvrBYsPfYf6n8vhxRST937tv+1NT4s7
Jy7ldkgw2+Ya2/4HGh48DiZtgjZBX37bf+r0f+QfxOsQcLHj3ouFv6Dhw+ew
5bKe5oeXP+zXe7Q32v3nc8jRetEjuOkbNLz4HTj0XWNntHy239YcP0EsTMDh
xnWO6tlVb6HhJ+Bw4Dsr40mv+/aiyb/v9+oIOhxQOht/PG/Lfkh4CjosaP6m
HNP4fH+x03R9VmYhBx7JmYFhN79Cw1fIwadu/4QG57/7Lyka19fcFHJQgiTr
A5DwFobLGzKeP/d5vTBcPyT8ReDm9z/IkstuE4HbD4kPEbj73u1ny3sUI+pw
4wbE/ZD4EXVggfrPZ/6ivZHGYg4FUP9D4ksMHj6r6+x4L3KKw8MPEn/i8PDl
irsV4/FAHB7+kPiUgMdPhm3Zmv3bJBxM9kLiDxK/kvD4BQAwFtkQ
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Second derivative N = 60\"", TraditionalForm], PlotRange -> 
     NCache[{{0, 2 Pi}, {-3.4476178873749634`, 1.9999990256889362`}}, {{
        0, 6.283185307179586}, {-3.4476178873749634`, 1.9999990256889362`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact Second derivative\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx Second derivative\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 7}, {20, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8295420344048705`*^9, {3.829542313250107*^9, 3.8295423157774825`*^9}},
 CellLabel->
  "Out[450]=",ExpressionUUID->"00eaee5c-3965-4439-ba37-732a8c844486"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Minimum", " ", "and", " ", "maximum", " ", "values", " ", "of", " ", 
    "the", " ", "error", " ", "of", " ", "the", " ", "first", " ", "and", " ",
     "second", " ", "derivatives"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"numderv1", "-", "derv1num"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"errormin11", " ", "=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{"Abs", "[", 
      RowBox[{"numderv1", "-", "derv1num"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"errormax11", " ", "=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{"Abs", "[", 
      RowBox[{"numderv1", "-", "derv1num"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"numderv2", "-", "derv2num"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"errormin12", " ", "=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{"Abs", "[", 
      RowBox[{"numderv1", "-", "derv1num"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"errormax12", " ", "=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{"Abs", "[", 
      RowBox[{"numderv2", "-", "derv2num"}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8295410600477495`*^9, 3.829541082087161*^9}, {
  3.82954119795998*^9, 3.8295412334697757`*^9}},
 CellLabel->
  "In[451]:=",ExpressionUUID->"e13b5d3f-9e9e-4d63-970c-8bad4a764bf6"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{
  3.8295420347963357`*^9, {3.829542313523572*^9, 3.8295423160111446`*^9}},
 CellLabel->
  "Out[452]=",ExpressionUUID->"92bf745b-3328-4197-8e0b-2cc7440a4aed"],

Cell[BoxData["7.105427357601002`*^-15"], "Output",
 CellChangeTimes->{
  3.8295420347963357`*^9, {3.829542313523572*^9, 3.8295423160160985`*^9}},
 CellLabel->
  "Out[453]=",ExpressionUUID->"7df2133e-222a-4498-ad7c-502780bbbfc8"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{
  3.8295420347963357`*^9, {3.829542313523572*^9, 3.8295423160200877`*^9}},
 CellLabel->
  "Out[455]=",ExpressionUUID->"c8bf1f15-ebfd-48fd-ae49-17f90fe01911"],

Cell[BoxData["1.6431300764452317`*^-13"], "Output",
 CellChangeTimes->{
  3.8295420347963357`*^9, {3.829542313523572*^9, 3.8295423160251074`*^9}},
 CellLabel->
  "Out[456]=",ExpressionUUID->"d4b9c578-8cce-45dd-87e8-dc8b12e8fcc0"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["9.2 Spectral Chebyshev Differentiation Matrices",
 FontWeight->"Bold"]], "Section",
 CellChangeTimes->{{3.8295423534292507`*^9, 
  3.829542371581922*^9}},ExpressionUUID->"f76e0496-cc94-485a-b743-\
90a63c15903e"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["a) Write a program in Mathematica that computes the \
first and second derivatives, constructing the Chebyshev matrix using (9.5) \
and (9.6)",
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0.5, 0]]], "Subsection",
 CellChangeTimes->{{3.8295423903411026`*^9, 
  3.8295424407638583`*^9}},ExpressionUUID->"2e6f7fef-ac7b-431c-bda7-\
c61a6d359250"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["N = 20",
 FontWeight->"Bold",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Subsubsection",
 CellChangeTimes->{{3.82953880355753*^9, 3.829538815067209*^9}, {
  3.829538873567161*^9, 3.829538902796723*^9}, {3.8295389411967516`*^9, 
  3.8295389454073877`*^9}, {3.8295390785622897`*^9, 
  3.829539083787052*^9}},ExpressionUUID->"9195dc2e-c189-4a92-92da-\
a820ee4543fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
   "Set", " ", "up", " ", "grid", " ", "and", " ", "the", " ", 
    "differentiation", " ", 
    RowBox[{"matrix", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NN", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h2", " ", "=", " ", 
     RowBox[{"Pi", "/", "NN"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"Cos", "[", 
         RowBox[{"h2", "*", "i"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "NN"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Chebyshev", " ", "spectral", " ", "diff", " ", "matrix"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"MatCheb", ":=", 
    RowBox[{"MatCheb", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "MatCheb", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.829539141477397*^9, 3.8295391418770657`*^9}, {
   3.829539172617295*^9, 3.8295392054351377`*^9}, {3.829539314587134*^9, 
   3.829539316127084*^9}, 3.829542559726664*^9, {3.8295427187679763`*^9, 
   3.829542740968455*^9}},
 CellLabel->
  "In[660]:=",ExpressionUUID->"c771918e-cd1f-407d-a027-0eea540260d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MatCheb", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", " ", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"NN", "^", "2"}]}], " ", "+", " ", "1"}], ")"}], "/", "6"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatCheb", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"NN", "+", "1"}], ",", 
      RowBox[{"NN", "+", "1"}]}], "]"}], "]"}], "=", " ", 
   RowBox[{"-", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", 
         RowBox[{"NN", "^", "2"}]}], " ", "+", " ", "1"}], ")"}], "/", "6"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatCheb", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"NN", "+", "1"}]}], "]"}], "]"}], "=", " ", 
   RowBox[{"0.5", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", "NN"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatCheb", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"NN", "+", "1"}], ",", "1"}], "]"}], "]"}], "=", " ", 
   RowBox[{
    RowBox[{"-", "0.5"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", "NN"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "2"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "NN"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "2"}], ",", 
     RowBox[{"j", "\[LessEqual]", " ", "NN"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[NotEqual]", "j"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MatCheb", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"i", "-", "1", "+", "j", "-", "1"}], ")"}]}], " ", "/", 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "MatCheb", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "2"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "NN"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatCheb", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", "i"}], "]"}], "]"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"x", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "/", 
      RowBox[{"(", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "^", "2"}]}], ")"}]}], ")"}]}], 
     "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"j", "=", "2"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "NN"}], ",", 
   RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatCheb", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "j"}], "]"}], "]"}], "=", 
    RowBox[{"2", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"j", "-", "1"}], ")"}]}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"x", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}]}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "2"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "NN"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatCheb", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", "1"}], "]"}], "]"}], "=", 
    RowBox[{
     RowBox[{"-", "0.5"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}]}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"x", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"j", "=", "2"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "NN"}], ",", 
   RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatCheb", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"NN", "+", "1"}], ",", "j"}], "]"}], "]"}], "=", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"NN", "+", "j", "-", "1"}], ")"}]}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"x", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}]}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "2"}], ",", 
    RowBox[{"i", "\[LessEqual]", " ", "NN"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MatCheb", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", 
        RowBox[{"NN", "+", "1"}]}], "]"}], "]"}], "=", 
     RowBox[{"0.5", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"NN", "+", "i", "-", "1"}], ")"}]}], " ", "/", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}]}]}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "MatCheb", "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.829542629547882*^9},
 CellLabel->
  "In[666]:=",ExpressionUUID->"e10150ce-2e3c-40a7-90a5-b42231ef5b89"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{"Differentiation", " ", "of", " ", 
      RowBox[{"v", "[", "y_", "]"}]}], ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", "y", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", "y"}], "]"}], "  ", "\[IndentingNewLine]", 
       RowBox[{"v", "[", "y_", "]"}]}], ":=", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"Sin", "[", "y", "]"}], "]"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"v", "[", "y_", "]"}], ":=", 
    RowBox[{"Exp", " ", "[", 
     RowBox[{
      RowBox[{"Sin", "[", "y", "]"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Cos", "[", "y", "]"}], ")"}], "^", "2"}]}], " ", "]"}]}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"First", " ", "derivative"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derv1", "[", "y_", "]"}], "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"v", "[", "y", "]"}], ",", "y"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Second", " ", "derivative"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derv2", "[", "y_", "]"}], "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"v", "[", "y", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Plots", " ", "of", " ", "the", " ", "exact", " ", "sol", " ", "using", 
     " ", "command", " ", "D"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot1", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"v", "[", "y", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", "\"\<Original function N = 20\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Exact Original function\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"derv1", "[", "y", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", "\"\<First derivative N = 20\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Exact First derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot3", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"derv2", "[", "y", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{"Purple", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", "\"\<Second derivative N = 20\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Exact Second derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numv", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"v", "[", 
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"derv1num", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"derv1", "[", 
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"derv2num", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"derv2", "[", 
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", "of", " ", "the", " ", "approximated", " ", "sol"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot4", " ", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"numv", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Dotted", ",", " ", "Green"}], "}"}]}], ",", " ", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", "\"\<Original function N = 20\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Approx Original function\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot5", " ", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"derv1num", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Dotted", ",", " ", "Green"}], "}"}]}], ",", " ", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", "\"\<First derivative N = 20\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Approx First derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot6", " ", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"derv2num", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Dotted", ",", " ", "Green"}], "}"}]}], ",", " ", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", "\"\<Second derivative N = 20\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Approx Second derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8295427973529778`*^9, 3.829543214118887*^9}, {
  3.8295432827383704`*^9, 3.8295432835101156`*^9}, {3.829544163028172*^9, 
  3.8295441658065815`*^9}},
 CellLabel->
  "In[678]:=",ExpressionUUID->"8955abe6-5c7e-43ff-be24-8caef2200d4e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "We", " ", "compare", " ", "the", " ", "results", " ", "obtained"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"Plot1", ",", " ", "Plot4"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"Plot2", ",", " ", "Plot5"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"Plot3", ",", "Plot6"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8295432210494604`*^9, 3.829543230640086*^9}, {
   3.8295432649057617`*^9, 3.8295433168878593`*^9}, 3.8295440347565284`*^9},
 CellLabel->
  "In[693]:=",ExpressionUUID->"abf59a1c-ea66-4c79-8c27-b4ffce002576"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
A1YcY+F3AVz4//9vcCjfUu26Pxf+B61x4+0=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$41430#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7D+3H5JqL/liH/NEf4rK7Pf2yeUX/86Z/cX+
f4iLMF/+O/szvx+sK+L7ap+rYyur0PzG/ucxPetNB7/ar/gyfXb545f2blre
UU+mfrM/Y12fNm/BM3vn1yzqpV7f7eOiSlmUzz+yP2rE6D+l9rs9wz0XbT2+
u/bPRZYEMJ39Zh/wUt/8/bHL9iL/nrreF/1qXxq8Ip2b7Yh92wrthsoFn+wZ
UMAHmPx+7s9z3u6oeQ3Tv9+zJ3mjtccLmPn7D7oVv5hQ8gxm//4V0gVvj51+
CnPf/is3DinM+/0U5v79x1ledMWufgbz3/4PL9TWlnU8h/l///oX+oWnA17A
wmf/RJ6/wV43XkDd92G/GbdXzWH2l/YAuEuilw==
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.012833333333333334`], 
                  AbsoluteThickness[1.6], 
                  Dashing[{0, Small}], 
                  RGBColor[0, 1, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxTTMoPSmVmYGAQBWJGIGZigIEP9p/bD0m1l3yxj3miP0Vl9nv75PKLf+fM
/mLPEOoizJf/zv7M7wfrivi+2ufo2MoqNL+x/3lMz3rTwa/2K75Mn13++KW9
m5Z31JOp3+zPWNenzVvwzN75NYt6qdd3+7ioUhbl84/sjxox+k+p/W7PcM9F
W4/vrv1zkSUBTGe/2Qe81Dd/f+yyvci/p673Rb/aVwSvSOdmO2LftkK7oXLB
J3sGFPDBvgQiv5/785y3O2pew/Tv9+xJ3mjt8QJm/v6DbsUvJpQ8g9m/f4V0
wdtjp5/C3Lf/yo1DCvN+P4W5f/9xlhddsauf2edC/Lf/wwu1tWUdz+3/h4D9
v3/9C/3C0wEvYOGzfyLP32CvGy+g7vuw34zbq+Yw+0t7AJTXoZw=
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.680518573631345}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Original function N = 20\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact Original function\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx Original function\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 7}, {40, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {40, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.829544141468106*^9, 3.8295441949072495`*^9, 
  3.829544411768403*^9},
 CellLabel->
  "Out[693]=",ExpressionUUID->"a0925485-273e-404c-97b1-a385d48aefe7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
8E0/Gf0fMpUh9g==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$41490#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7O2dDB6033yxP+aJ/hSV2e/tL2+JO2W2/8X+
/yEuwnz57+ynruyZa631Yn+ujq2sQvMb+wfzr1WluT/bv+LL9Nnlj1/a278L
+MJ95uH+M9b1afMWPLP/t1t35oQbl/bHRZWyKJ9/ZF8aeeVctP0Oe4Z7Ltp6
fHft09axWPwOfWgf8FLf/P2xy/bqbBGah9ne2pcGr0jnZjti3+sx3caR/6M9
Awr4AJPfv0TH4N0ynZcw/fvnd7juWLntAcz8/S7OyX17hC7aQ+3fz8LW/mhy
/TJ7qPv2v/1tU7jg5EGY+/f/vPNxxfc7F2H+26/y7+dqUckbMP/vX3c/7syB
57dh4bP/Afcf7/1X7+6Humv/f95/iSkZ9/YDAP4Zp8E=
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.012833333333333334`], 
                  AbsoluteThickness[1.6], 
                  Dashing[{0, Small}], 
                  RGBColor[0, 1, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxTTMoPSmVmYGAQBWJGIGZigIEP9vZOBg/ab77YH/NEf4rK7Pf2l7fEnTLb
/2I/Q6iLMF/+O/upK3vmWmu92J+jYyur0PzG/sH8a1Vp7s/2r/gyfXb545f2
9u8CvnCfebj/jHV92rwFz+z/7dadOeHGpf1xUaUsyucf2ZdGXjkXbb/DnuGe
i7Ye3137tHUsFr9DH9oHvNQ3f3/ssr06W4TmYba39hXBK9K52Y7Y93pMt3Hk
/2jPgAI+2JdA5Pcv0TF4t0znJUz//vkdrjtWbnsAM3+/i3Ny3x6hi/ZQ+/ez
sLU/mly/zB7qvv1vf9sULjh5EOb+/T/vfFzx/c7F/bkQ/+1X+fdztajkjf3/
Q8D+37/uftyZA89vw8Jn/wPuP977r97dD3XX/v+8/xJTMu7tBwDapabG
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"First derivative N = 20\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact First derivative\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx First derivative\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 7}, {40, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {40, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.829544141468106*^9, 3.8295441949072495`*^9, 
  3.829544411915454*^9},
 CellLabel->
  "Out[694]=",ExpressionUUID->"8572b562-7268-44cf-bce1-79652c6ca4b0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$41550#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7Ms++Sh8YDy1P+aJ/hSV2e/t9+1jM7mefWX/
/xAXYb78d/ZBwVar3y5/uj9Xx1ZWofmN/by10uzRi77sX/Fl+uzyxy/tu3yS
TJo/MBw4Y12fNm/BM/ulx1PjH+5jPxAXVcqifP6R/ZlLf7j6WrgPMNxz0dbj
u2ufo82bpLOJ40DAS33z98cu2wdk8rdV9f/dXxq8Ip2b7Yj9hQX2G1wtL+xn
QAEf7KHy+43Sy3ybeH7ZQ/Xv/8d/YU1G2x97qPn7NVgW9WhN/G0PtX+/cYTN
llnzf9pD3befMfe+wSn/7/ZQ9+/vS5S+WNn6xR7qv/2vM1TZFUI+2kP9v7/p
zgEVk5Y39tDw2d/8SSBiguALe6i79k/+d+vZ0aJn9gAtT50n
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.012833333333333334`], 
                  AbsoluteThickness[1.6], 
                  Dashing[{0, Small}], 
                  RGBColor[0, 1, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxTTMoPSmVmYGAQBWJGIGZigIEP9mWffBQ+MJ7aH/NEf4rK7Pf2+/axmVzP
vrKfIdRFmC//nX1QsNXqt8uf7s/RsZVVaH5jP2+tNHv0oi/7V3yZPrv88Uv7
Lp8kk+YPDAfOWNenzVvwzH7p8dT4h/vYD8RFlbIon39kf+bSH66+Fu4DDPdc
tPX47trnaPMm6WziOBDwUt/8/bHL9gGZ/G1V/X/3VwSvSOdmO2J/YYH9BlfL
C/sZUMAH+xKI/H6j9DLfJp5f9lD9+//xX1iT0fbHHmr+fg2WRT1aE3/bQ+3f
bxxhs2XW/J/2UPftZ8y9b3DK/7s91P37+xKlL1a2frHPhfhv/+sMVXaFkI/2
/0PA/t/fdOeAiknLG3to+Oxv/iQQMUHwhT3UXfsn/7v17GjRM3sACducLA==

          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Second derivative N = 20\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact Second derivative\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx Second derivative\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 7}, {40, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {40, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.829544141468106*^9, 3.8295441949072495`*^9, 
  3.8295444120689487`*^9},
 CellLabel->
  "Out[695]=",ExpressionUUID->"b6db397d-6173-4119-9d3c-59280d92d03e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numderv1", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numderv1", " ", "=", " ", 
   RowBox[{
    RowBox[{"Dot", "[", 
     RowBox[{"MatCheb", ",", "numv"}], "]"}], " ", "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numderv2", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numderv2", "=", " ", 
   RowBox[{
    RowBox[{"Dot", "[", 
     RowBox[{"MatCheb", ",", "numderv1"}], "]"}], " ", "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot7", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"numderv1", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", "Orange"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot8", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"numderv2", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", "Orange"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.82954392781641*^9, 3.829543963750169*^9}, {
  3.8295443649203415`*^9, 3.8295443954060507`*^9}},
 CellLabel->
  "In[696]:=",ExpressionUUID->"7d5853f3-8283-44e0-9f9e-ca57b232c978"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"Plot2", ",", " ", "Plot5", ",", " ", "Plot7"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"Plot3", ",", " ", "Plot6", ",", " ", "Plot8"}], "]"}]}], "Input",
 CellChangeTimes->{{3.829543965024678*^9, 3.8295439819819455`*^9}, {
  3.829544080304401*^9, 3.8295441065105104`*^9}},
 CellLabel->
  "In[704]:=",ExpressionUUID->"a232178c-9092-45ba-97f2-27b94e8d7d14"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
8E0/Gf0fMpUh9g==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$41490#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7O2dDB6033yxP+aJ/hSV2e/tL2+JO2W2/8X+
/yEuwnz57+ynruyZa631Yn+ujq2sQvMb+wfzr1WluT/bv+LL9Nnlj1/a278L
+MJ95uH+M9b1afMWPLP/t1t35oQbl/bHRZWyKJ9/ZF8aeeVctP0Oe4Z7Ltp6
fHft09axWPwOfWgf8FLf/P2xy/bqbBGah9ne2pcGr0jnZjti3+sx3caR/6M9
Awr4AJPfv0TH4N0ynZcw/fvnd7juWLntAcz8/S7OyX17hC7aQ+3fz8LW/mhy
/TJ7qPv2v/1tU7jg5EGY+/f/vPNxxfc7F2H+26/y7+dqUckbMP/vX3c/7syB
57dh4bP/Afcf7/1X7+6Humv/f95/iSkZ9/YDAP4Zp8E=
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.012833333333333334`], 
                  AbsoluteThickness[1.6], 
                  Dashing[{0, Small}], 
                  RGBColor[0, 1, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxTTMoPSmVmYGAQBWJGIGZigIEP9vZOBg/ab77YH/NEf4rK7Pf2l7fEnTLb
/2I/Q6iLMF/+O/upK3vmWmu92J+jYyur0PzG/sH8a1Vp7s/2r/gyfXb545f2
9u8CvnCfebj/jHV92rwFz+z/7dadOeHGpf1xUaUsyucf2ZdGXjkXbb/DnuGe
i7Ye3137tHUsFr9DH9oHvNQ3f3/ssr06W4TmYba39hXBK9K52Y7Y93pMt3Hk
/2jPgAI+2JdA5Pcv0TF4t0znJUz//vkdrjtWbnsAM3+/i3Ny3x6hi/ZQ+/ez
sLU/mly/zB7qvv1vf9sULjh5EOb+/T/vfFzx/c7F/bkQ/+1X+fdztajkjf3/
Q8D+37/uftyZA89vw8Jn/wPuP977r97dD3XX/v+8/xJTMu7tBwDapabG
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7B1ut1p03HyxP+aJ/hSV2e/tD0zzmGu2/8X+
/yEuwnz57+wVgtPOWmu92J+rYyur0PzG3uFrklua+7P9K75Mn13++KX9AwkZ
fZ4zD/efsa5Pm7fgmX1DKa/IhBuX9sdFlbIon39kz1DFWhZpv8Oe4Z6Lth7f
XXuHhKTu36EP7QNe6pu/P3bZ/kOL5flDbG/tS4NXpHOzHbHfYnco25H/oz3M
hT/8khf8//8eJr9fwLDUZ7nOS5j+/TPqtWNXbnsAM3+/Rk+yzV6hi/ZQ+/c3
sIdt76tfZg91336GhEqz+ScPwty/P2B+qf2POxdh/tv/Iea5lKjkDZj/9yv4
dEYefH4bFj77GSZrHtx39e5+aPjtZygRLkvNuLcfAG+fn8k=
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.012833333333333334`], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0.5, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxTTMoPSmVmYGAQBWJGIGZigIEP9g63Wy06br7YH/NEf4rK7Pf2B6Z5zDXb
/2I/Q6iLMF/+O3uF4LSz1lov9ufo2MoqNL+xd/ia5Jbm/mz/ii/TZ5c/fmn/
QEJGn+fMw/1nrOvT5i14Zt9Qyisy4cal/XFRpSzK5x/ZM1SxlkXa77BnuOei
rcd3194hIan7d+hD+4CX+ubvj122/9Bief4Q21v7iuAV6dxsR+y32B3KduT/
aA9z4Q+/5AX//7+3L4HI7xcwLPVZrvMSpn//jHrt2JXbHsDM36/Rk2yzV+ii
PdT+/Q3sYdv76pfZQ923nyGh0mz+yYMw9+8PmF9q/+POxf25EP/t/xDzXEpU
8sb+/yFg/+9X8OmMPPj8Nix89jNM1jy47+rd/dDw289QIlyWmnFvPwBMK57O

          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]]}, {}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"First derivative N = 20\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact First derivative\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx First derivative\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 7}, {40, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {40, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8295441420561028`*^9, 3.8295441953484955`*^9, {3.829544400425169*^9, 
   3.829544412362626*^9}},
 CellLabel->
  "Out[704]=",ExpressionUUID->"c67ca2e3-449f-4aa3-8622-a7ce9c6fb014"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$41550#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7Ms++Sh8YDy1P+aJ/hSV2e/t9+1jM7mefWX/
/xAXYb78d/ZBwVar3y5/uj9Xx1ZWofmN/by10uzRi77sX/Fl+uzyxy/tu3yS
TJo/MBw4Y12fNm/BM/ulx1PjH+5jPxAXVcqifP6R/ZlLf7j6WrgPMNxz0dbj
u2ufo82bpLOJ40DAS33z98cu2wdk8rdV9f/dXxq8Ip2b7Yj9hQX2G1wtL+xn
QAEf7KHy+43Sy3ybeH7ZQ/Xv/8d/YU1G2x97qPn7NVgW9WhN/G0PtX+/cYTN
llnzf9pD3befMfe+wSn/7/ZQ9+/vS5S+WNn6xR7qv/2vM1TZFUI+2kP9v7/p
zgEVk5Y39tDw2d/8SSBiguALe6i79k/+d+vZ0aJn9gAtT50n
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.012833333333333334`], 
                  AbsoluteThickness[1.6], 
                  Dashing[{0, Small}], 
                  RGBColor[0, 1, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxTTMoPSmVmYGAQBWJGIGZigIEP9mWffBQ+MJ7aH/NEf4rK7Pf2+/axmVzP
vrKfIdRFmC//nX1QsNXqt8uf7s/RsZVVaH5jP2+tNHv0oi/7V3yZPrv88Uv7
Lp8kk+YPDAfOWNenzVvwzH7p8dT4h/vYD8RFlbIon39kf+bSH66+Fu4DDPdc
tPX47trnaPMm6WziOBDwUt/8/bHL9gGZ/G1V/X/3VwSvSOdmO2J/YYH9BlfL
C/sZUMAH+xKI/H6j9DLfJp5f9lD9+//xX1iT0fbHHmr+fg2WRT1aE3/bQ+3f
bxxhs2XW/J/2UPftZ8y9b3DK/7s91P37+xKlL1a2frHPhfhv/+sMVXaFkI/2
/0PA/t/fdOeAiknLG3to+Oxv/iQQMUHwhT3UXfsn/7v17GjRM3sACducLA==

          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7BnWif2LZj61P+aJ/hSV2e/tH7z7Me1Z9pX9
/0NchPny39lv4Nlk9nr50/25OrayCs1v7HdELDgavejL/hVfps8uf/zSPr4s
7HXTB4YDZ6zr0+YteGYfp+gx5+E+9gNxUaUsyucf2Z846X6jt4X7AMM9F209
vrv2m363deps4jgQ8FLf/P2xy/Y2cmKBVf1/95cGr0jnZjtiP+FGmqib5YX9
MBeumGHz7///9/ZQ+f0WDZ0pTTy/7KH69x9e9qs5o+2PPdT8/RrbHI9oTfxt
D7V//6ScV7mz5v+0h7pv/6P5/l2n/L/bQ92/P2FGU3hl6xd7qP/2T9p19IhC
yEd7qP/3B2yJVzVseWMPDZ/9B2Zzdc4WfGEPDb/9DjmzEkOLn9kDAH3xpds=

          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.012833333333333334`], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0.5, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxTTMoPSmVmYGAQBWJGIGZigIEP9gzrxP5FM5/aH/NEf4rK7Pf2D979mPYs
+8p+hlAXYb78d/YbeDaZvV7+dH+Ojq2sQvMb+x0RC45GL/qyf8WX6bPLH7+0
jy8Le930geHAGev6tHkLntnHKXrMebiP/UBcVCmL8vlH9idOut/obeE+wHDP
RVuP7679pt9tnTqbOA4EvNQ3f3/ssr2NnFhgVf/f/RXBK9K52Y7YT7iRJupm
eWE/zIUrZtj8+///vX0JRH6/RUNnShPPL3uo/v2Hl/1qzmj7Yw81f7/GNscj
WhN/20Pt3z8p51XurPk/7aHu2/9ovn/XKf/v9lD370+Y0RRe2frFPhfiv/2T
dh09ohDy0f5/CNj/+wO2xKsatryxh4bP/gOzuTpnC76wh4bffoecWYmhxc/s
AVp9pOA=
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]]}, {}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Second derivative N = 20\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact Second derivative\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx Second derivative\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 7}, {40, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {40, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8295441420561028`*^9, 3.8295441953484955`*^9, {3.829544400425169*^9, 
   3.829544412522128*^9}},
 CellLabel->
  "Out[705]=",ExpressionUUID->"16121417-0159-484b-b189-f4caf2559990"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "We", " ", "calculate", " ", "the", " ", "maximum", " ", "and", " ", 
    "minimum", " ", "values", " ", "of", " ", "the", " ", "error", " ", "for",
     " ", "the", " ", "first", " ", "and", " ", "second", " ", 
    "derivatives"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"error21", "=", 
     RowBox[{"numderv1", "-", "derv1num"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"errormin21", " ", "=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{"Abs", "[", "error21", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"errormax21", " ", "=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{"Abs", "[", "error21", "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"error22", "=", 
     RowBox[{"numderv2", "-", "derv2num"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"errormin22", " ", "=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{"Abs", "[", "error22", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"errormax22", " ", "=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{"Abs", "[", "error22", "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"error21", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", "Orange"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"error22", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", "Orange"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.829544007524415*^9, 3.8295440083699226`*^9}, {
  3.8295440400631104`*^9, 3.8295440708610463`*^9}, {3.8295442257555385`*^9, 
  3.8295442438995085`*^9}},
 CellLabel->
  "In[706]:=",ExpressionUUID->"c2171ac2-ca79-4f27-9290-05108c084cfc"],

Cell[BoxData["8.397995754361176`*^-8"], "Output",
 CellChangeTimes->{3.8295441422954597`*^9, 3.829544195664221*^9, 
  3.829544245743281*^9, 3.8295444127365804`*^9},
 CellLabel->
  "Out[707]=",ExpressionUUID->"485512cb-60a8-4ebf-8e92-3304f2444f75"],

Cell[BoxData["2.571228777115131`*^-7"], "Output",
 CellChangeTimes->{3.8295441422954597`*^9, 3.829544195664221*^9, 
  3.829544245743281*^9, 3.829544412741599*^9},
 CellLabel->
  "Out[708]=",ExpressionUUID->"0052cde6-a4b1-4737-b249-ebaa99e609db"],

Cell[BoxData["3.2843940900306734`*^-9"], "Output",
 CellChangeTimes->{3.8295441422954597`*^9, 3.829544195664221*^9, 
  3.829544245743281*^9, 3.8295444127475815`*^9},
 CellLabel->
  "Out[710]=",ExpressionUUID->"5853e4a2-7272-4c14-85f0-1ffebf932809"],

Cell[BoxData["0.00006841634915633055`"], "Output",
 CellChangeTimes->{3.8295441422954597`*^9, 3.829544195664221*^9, 
  3.829544245743281*^9, 3.829544412751573*^9},
 CellLabel->
  "Out[711]=",ExpressionUUID->"3d00cdc7-55e7-4494-8c9a-8416247fd2e4"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7BkYHBzSRNv2xTzRn6Iy+z2Q38DJ311m9z/E
RZgv/x2If/TKm/J9uTq2sgrNb4B8hoCrllV2K75Mn13++CVIPmBqau2+M9b1
afMWPAPyD5znWNJgFxdVyqJ8/hGQv+J32bGmfQz3XLT1+O6C1JflXG+xC3ip
b/7+2GWQet8F7W37SoNXpHOzHQHJC1dPbbdjQAAnneftMPn9QL6048R2mH4g
/4Bj07E2mPlAfoMM54FWmP1AvsCvw2taYO4D8i/ss1zTDHM/kP/Aq+JCE8x/
IP1qIUpNMP8D+Q59vksbYeEDsl/GP6oR6r4PIPMTwhwn7gMAHl2Fkg==
       "]]}}, 
    {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[7]], CompressedData["
1:eJxTTMoPSmVmYGAQBWJGIGZigIEP9gwMDg5pom37Yp7oT1GZ/R7Ib+Dk7y6z
Ywh1EebLfwfiH73ypnxfjo6trELzGyCfIeCqZZXdii/TZ5c/fgmSD5iaWrvv
jHV92rwFz4D8A+c5ljTYxUWVsiiffwTkr/hddqxpH8M9F209vrsg9WU511vs
Al7qm78/dhmk3ndBe9u+iuAV6dxsR0DywtVT2+0YEMBJ53n7vhKI/H4gX9px
YjtMP5B/wLHpWBvMfCC/QYbzQCvMfiBf4NfhNS0w9wH5F/ZZrmmGuR/If+BV
caFpXy7EfyD9aiFKTXb/Q8D+B/Id+nyXNsLCB2S/jH9UI9R9H0DmJ4Q5TtwH
APrahJc=
      "]]}, {
     {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
      AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
      AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.}, {-2.571228777115131*^-7, 1.7571381660808072`*^-7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8295441422954597`*^9, 3.829544195664221*^9, 
  3.829544245743281*^9, 3.829544412875208*^9},
 CellLabel->
  "Out[712]=",ExpressionUUID->"b35dcf2b-ebb2-41f6-a6c7-5e9092f669ee"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/aHEyjw1/b09A8Mdw4dHj+/7H+IizJf/DsgXMHVa
stkuV8dWVqH5DZDvkDz1wvJ9K75Mn13++CWQf6Drq9MiuzPW9WnzFjwD8hvu
6BTO2xcXVcqifP4RkM/Q1BI1047hnou2Ht9dEF/5xZ7J+wJe6pu/P3YZxO9a
WtNlVxq8Ip2b7QiI/+GsZ+U+BgRoKDXT2QeV3w/ks0kKl9tB9QP5DXO3ZLXs
g5oPkme4eb7bDmo/kO/womrKxH1Q94H4O3hiptlB3Q/S722UNm8f1H9A/gMT
ri3L7aD+B/InOHL+3r5vV01mAoPOeyDfJW3fvuN2AEKofUk=
       "]]}}, 
    {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[7]], CompressedData["
1:eJxTTMoPSmVmYGAQBWJGIGZigIEP9gwLdsy+s5dtf8wT/Skqs9/bMzC4JDw5
em4fQ6iLMF/+OyBfwNRpyWa7HB1bWYXmN0C+Q/LUC8v3rfgyfXb545dA/oGu
r06L7M5Y16fNW/AMyG+4o1M4b19cVCmL8vlHQD5DU0vUTDuGey7aenx3QXzl
F3sm7wt4qW/+/thlEL9raU2XXUXwinRutiMg/oeznpX7GBCgodRMZ18JRH4/
kM8mKVxuB9UP5DfM3ZLVsg9qPkie4eb5bjuo/UC+w4uqKRP3Qd0H4u/giZlm
B3U/SL+3Udq8fbkQ/wH5D0y4tiy3+x8C9j+QP8GR8/f2fdDwAfKrgj4nXrOD
ht9+hgVb34a/F7QHAPhKh7k=
      "]]}, {
     {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
      AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
      AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.}, {-2.8339585601555584`*^-6, 2.8306356388840825`*^-6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8295441422954597`*^9, 3.829544195664221*^9, 
  3.829544245743281*^9, 3.8295444130068865`*^9},
 CellLabel->
  "Out[713]=",ExpressionUUID->"7024945c-64a2-494f-9503-e3a13bedeca7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["N = 60",
 FontWeight->"Bold",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Subsubsection",
 CellChangeTimes->{{3.82953880355753*^9, 3.829538815067209*^9}, {
  3.829538873567161*^9, 3.829538902796723*^9}, {3.8295389411967516`*^9, 
  3.8295389454073877`*^9}, {3.8295390785622897`*^9, 3.829539083787052*^9}, {
  3.8295442719938774`*^9, 
  3.8295442724196987`*^9}},ExpressionUUID->"ff047eb7-0bd8-42c0-b110-\
0eaa475077cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
   "Set", " ", "up", " ", "grid", " ", "and", " ", "the", " ", 
    "differentiation", " ", 
    RowBox[{"matrix", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NN", "=", "60"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h2", " ", "=", " ", 
     RowBox[{"Pi", "/", "NN"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"Cos", "[", 
         RowBox[{"h2", "*", "i"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "NN"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Chebyshev", " ", "spectral", " ", "diff", " ", "matrix"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"MatCheb", ":=", 
    RowBox[{"MatCheb", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "MatCheb", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.829539141477397*^9, 3.8295391418770657`*^9}, {
   3.829539172617295*^9, 3.8295392054351377`*^9}, {3.829539314587134*^9, 
   3.829539316127084*^9}, 3.829542559726664*^9, {3.8295427187679763`*^9, 
   3.829542740968455*^9}, {3.829544274623523*^9, 3.829544275050426*^9}},
 CellLabel->
  "In[714]:=",ExpressionUUID->"0e79de3c-f394-405d-8811-3dbb6d89abfd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MatCheb", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", " ", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"NN", "^", "2"}]}], " ", "+", " ", "1"}], ")"}], "/", "6"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatCheb", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"NN", "+", "1"}], ",", 
      RowBox[{"NN", "+", "1"}]}], "]"}], "]"}], "=", " ", 
   RowBox[{"-", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", 
         RowBox[{"NN", "^", "2"}]}], " ", "+", " ", "1"}], ")"}], "/", "6"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatCheb", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"NN", "+", "1"}]}], "]"}], "]"}], "=", " ", 
   RowBox[{"0.5", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", "NN"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatCheb", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"NN", "+", "1"}], ",", "1"}], "]"}], "]"}], "=", " ", 
   RowBox[{
    RowBox[{"-", "0.5"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", "NN"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "2"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "NN"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "2"}], ",", 
     RowBox[{"j", "\[LessEqual]", " ", "NN"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[NotEqual]", "j"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MatCheb", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"i", "-", "1", "+", "j", "-", "1"}], ")"}]}], " ", "/", 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", 
           RowBox[{"x", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "MatCheb", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "2"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "NN"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatCheb", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", "i"}], "]"}], "]"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"x", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "/", 
      RowBox[{"(", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "^", "2"}]}], ")"}]}], ")"}]}], 
     "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"j", "=", "2"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "NN"}], ",", 
   RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatCheb", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "j"}], "]"}], "]"}], "=", 
    RowBox[{"2", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"j", "-", "1"}], ")"}]}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"x", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}]}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "2"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "NN"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatCheb", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", "1"}], "]"}], "]"}], "=", 
    RowBox[{
     RowBox[{"-", "0.5"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}]}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"x", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"j", "=", "2"}], ",", 
   RowBox[{"j", "\[LessEqual]", " ", "NN"}], ",", 
   RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatCheb", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"NN", "+", "1"}], ",", "j"}], "]"}], "]"}], "=", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"NN", "+", "j", "-", "1"}], ")"}]}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"x", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}]}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "2"}], ",", 
    RowBox[{"i", "\[LessEqual]", " ", "NN"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MatCheb", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", 
        RowBox[{"NN", "+", "1"}]}], "]"}], "]"}], "=", 
     RowBox[{"0.5", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"NN", "+", "i", "-", "1"}], ")"}]}], " ", "/", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}]}]}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "MatCheb", "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.829542629547882*^9},
 CellLabel->
  "In[720]:=",ExpressionUUID->"bc678c90-d655-46f0-89cf-8fa04bbab491"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{"Differentiation", " ", "of", " ", 
      RowBox[{"v", "[", "y_", "]"}]}], ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", "y", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", "y"}], "]"}], "  ", "\[IndentingNewLine]", 
       RowBox[{"v", "[", "y_", "]"}]}], ":=", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"Sin", "[", "y", "]"}], "]"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"v", "[", "y_", "]"}], ":=", 
    RowBox[{"Exp", " ", "[", 
     RowBox[{
      RowBox[{"Sin", "[", "y", "]"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Cos", "[", "y", "]"}], ")"}], "^", "2"}]}], " ", "]"}]}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"First", " ", "derivative"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derv1", "[", "y_", "]"}], "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"v", "[", "y", "]"}], ",", "y"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Second", " ", "derivative"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"derv2", "[", "y_", "]"}], "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"v", "[", "y", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Plots", " ", "of", " ", "the", " ", "exact", " ", "sol", " ", "using", 
     " ", "command", " ", "D"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot1", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"v", "[", "y", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", "\"\<Original function N = 60\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Exact Original function\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"derv1", "[", "y", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", "\"\<First derivative N = 60\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Exact First derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot3", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"derv2", "[", "y", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{"Purple", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", "\"\<Second derivative N = 60\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Exact Second derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numv", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"v", "[", 
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"derv1num", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"derv1", "[", 
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"derv2num", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"derv2", "[", 
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", "of", " ", "the", " ", "approximated", " ", "sol"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot4", " ", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"numv", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Dotted", ",", " ", "Green"}], "}"}]}], ",", " ", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", "\"\<Original function N = 60\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Approx Original function\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot5", " ", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"derv1num", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Dotted", ",", " ", "Green"}], "}"}]}], ",", " ", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", "\"\<First derivative N = 60\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Approx First derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot6", " ", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"derv2num", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"Dotted", ",", " ", "Green"}], "}"}]}], ",", " ", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", "\"\<Second derivative N = 60\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Approx Second derivative\>\"", "}"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8295427973529778`*^9, 3.829543214118887*^9}, {
  3.8295432827383704`*^9, 3.8295432835101156`*^9}, {3.829544163028172*^9, 
  3.8295441658065815`*^9}, {3.8295442798925433`*^9, 3.829544308848795*^9}},
 CellLabel->
  "In[732]:=",ExpressionUUID->"018a0a00-9a86-437f-bdab-4d4c40364f00"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "We", " ", "compare", " ", "the", " ", "results", " ", "obtained"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"Plot1", ",", " ", "Plot4"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"Plot2", ",", " ", "Plot5"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"Plot3", ",", "Plot6"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8295432210494604`*^9, 3.829543230640086*^9}, {
   3.8295432649057617`*^9, 3.8295433168878593`*^9}, 3.8295440347565284`*^9},
 CellLabel->
  "In[747]:=",ExpressionUUID->"a343b17f-da2d-47a1-b410-937d5f089fd3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
A1YcY+F3AVz4//9vcCjfUu26Pxf+B61x4+0=
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$42290#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxVk3tIk1EYxtfSrVr5h5cKu2ioSd6WioVNe6PUzMRMrWRlZqYjJdZF08TL
bDUjDI3UApcoSQ3zgmahph10qem6aJbXvMy2b9+0uZXfNkXLjDp/dOBwOBzO
Oe/7PL9n21l+WBydRqP5Ls8/69+hg9mcNuucJAq2EOaadkoLtlkh/ZOpFHTw
5gps+rSQ0MKM0N2k4JSCXWBfrIXYlN6f4mIKBLQ0j8VgLUSXlc+9bqTAEgUe
HCVnYJ9D1JjzBAVLEX4WZvwZeLswUX3ZTA+mDUtminENrKrt3cny00Nh1lK1
lKOBhsxelx0CPVxw8d1iK/wG8x1unLpWPVQER5JpL6bBMVvq78o0wBd2tSS2
fwogJDXuWYgBJNT94pSvaghwOsxVFBrA8ZGVV8wYCePmM3z5kAHaXnlKBjpV
4PResyZsgxHecrLiS0oJODBt4pgcZIRB1mTRjfNKiOlrv76fb4RXaYE3ztkp
INJTPiTONsJpbrKJ3YdJaPdYcaQgwwibUy4OVF+Qwwmlg93zaCP81W8CaClV
wpMOy/sxP2c3s1FQWZaH0t8ZoMeasW2eOQzeNizX7OMG8Ol7byPQ9oNsD03q
JtVDqJq9W9vRB5a/lP7jVnrIY9xrzcjvgUWX5rzmMAr0kfsrh8TdQDI1TxYy
ZyE5XMJjMV6DSOIsuFb6AxJP+BSfaWuCbon8WXDLd1jXpQ3slFVAEsN788kR
HdD+Gzp8jo4KEyuLomfwfVT4WS5u+vINv49Ys2JNQ/o0/h9Zc1Y20g9M4frQ
ncWXD2Pc1bh+dCg3tpYTSOL+kKI+gT0iUuH+kU39bVHtNIH1Qa0BV8j8JALr
h2oucUXDWwmsL6KOHZwoUymx/kiy6aKmQ6bE/qD11qbC1W+U2D+kSY7hbRxS
Yn/Rp8E225IFJfYfUU0hVLALgflAtU51w1M8AvODOk3I21FPCcwXEviPer+Y
JTB/iNtljPLZq8J8Ih25verqLRXmF33n5D5271FhvlFi6lVvoQWJ+Uc1JPuS
LJTE+UDjU2vj60Qkzg8q/zhGs68ncb7Q3bU/w4MGSZw/5HXqAS/nB4nziRzd
rY7z6ep/+unQLlZQupSpht+6XviB
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.011000000000000001`], 
                  AbsoluteThickness[1.6], 
                  Dashing[{0, Small}], 
                  RGBColor[0, 1, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxVk3tMk1cYxj8Qqa6GGAVdGA4MMhSQDokzWNhjFJQhYYiiBEFkTDtvKSoI
EpWyumKMyzCCM6EzmpGt8YLhokEUTqBcBjgHY0NAuRTbr1/B0gpfWwwokn07
f3iS94+Tk3PO+z7P71n5jTzhwDyGYSLmymmunBm6rJgsbPQszOLhxS4xN/MW
+OTH9Yzk8miRTRV7d1twuE60y/oDjxS9pHhVqQUZOV1v1aU8FEzeuplYC9Ju
lk01PeThTqK3DXDj2OSXOhg4zINJjFzqJh/Hk+nh8hNuNrjUzLrph8xYUNH1
uTjShuL82XKt1Iyac11BaxQ2HA2KWOGjfIU3LcHSygYbbsUmcXkPxuBfoI1a
K7LjhaRck9EzCsTlHqiKs0PD/1ya89KErQHbk/Uldqz+1WN9+iCHoSXjcl2f
HY31oZpnrUYEPDV/lLDcgSfS/IPXb7DYMubinx3jQK945Or5Qwakdzd/v1nu
QH1e9PlvffVICtX1qQsc2Jec7eL71wia1zl9XXzWAa+czGflx3TYY/DzvZ/m
gKDfMJicu8q9fnP7wcjAYLcBGN3L4p3/tKPT03XlG1E/wrzFawt22xHe/dRb
YelBx0ZGG6y1Id4k2WBp6Yb7O0PUkIcNRa5XGs4WdWIm6PFPjxN4TCVtvtOn
bgcnMv8+fW4SuTs1MrFrE1SaQMXpGxPI3BNeur+xFu0aXVVs3WswbZbo1o5b
yHIN89r73Armg2XFYuGc7FAeuXM1bRzfCfdJyb86de2LV8gS3ifiSbW55swY
eOF/4imd99B5yyjtj/w48+iX9BAT7Z98dSmjQhrN0fmIvvqw5LnKSOcn3tUX
VRVjLNWHNGw9yRVlsVQ/cu94sqr/U5bqS/jEbcM3jQaqP9F8kmlu6TBQf8gy
z/nKhX8YqH/EnJ0u+7jPQP0l//Q2+lyfNlD/CV8bx8cGsfAX+CAVAZX9ozKW
8kNaXbiLqbdZyhdRRA2EPZhkKX8kuc2RGv6lEccEPomV++zuqQtGlAj8ktfS
S7+FdBoxX+CbHMk9FaZcymF213/8k3uc5HhHPEfzQYZGFx2sVHE0P6Ts70Fm
VTVH80UuL3q7M6aXo/kj61OuyQonOKwQ8kn8Qzx2y51N/+tnJV+IY85oRSa8
B1Oc94A=
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.680518573631345}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Original function N = 60\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact Original function\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx Original function\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 7}, {40, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {40, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.829544141468106*^9, 3.8295441949072495`*^9, 
  3.829544329290766*^9, 3.8295444222827797`*^9},
 CellLabel->
  "Out[747]=",ExpressionUUID->"559f0f91-ba6a-4d52-aac0-2ea9055d7f7a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
8E0/Gf0fMpUh9g==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$42350#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxVk2dM01EUxavBakKoouBAsSAKqGVJXFC8YQkqUeKIRaURwVZB3IjWGEhE
cRUHApGyIgZrJU0QrESQq4gsEZRiodiWsv+IHcQ6iEjVwPvgTV7eh5f33r3n
/I7jgWPbD06l0Wh+f9e/faKMAAGe2lQlhfYDs3VvTAbIv7ZJ6NZOYS3/512m
3AAp7bSMwBYK9/V53F0qMoC8jNu4BilMpglWjYUZQCA87SC7T6ENhoaoKT3w
7EWM4lMUmncGzWEc00PGoxu5visonFZuZvR16cD+3KrhuspBzEgyS1/76mBx
lhd/psMgxrP87B0ufgFtvkLACxlASRiHEsiGgeNTymYu60eVh1QcrfgMGnrr
IdbjXhSbskSJvUMA+nCTZVM3uhTaro7SULBzI6PS/EOD1VXe4va6QfjpLGcv
OajEJt8kXl7BAIxXuN271dGKHZY9mSmH+yHqjKOssaQWqwShKTFOfXBp66Z5
AcMPkbsnwcKppQcSItqa90I5LEo83i6N74aSwPU5Pk4tMKGfFowVHpfj1iuB
pgla6c5QA09qse7Xrm54b0d3HJ3eCdnFNiZaTT+w5c3MZIMC/MvlGSefDUH4
kMdaQ60cXOic5a/pOrhJT3914dZ7iI10z3K7Y4BvnIBiZU4j2Mm4s4ILjZCw
Q8y3pNeAMDSL7T9zBOJ2s0X7q5/D3FxIm2I9AlYNhtC6txK47pJ3yvqJEWj/
lZGcY2Y+q9XLVk/uI7PM+Su/Zpi8jw9Ynvoi1hD5H7O/l5ZxDw+Q/lC218s3
+nYv6R/zrwSXP5JpyXzIrKoL83z3icyPR2PHVdxdCqIPBgVGp1XO/kD0w/Aj
diGchfVEXwzc0Pab7f4CJvVHC3pqT3pSEUz6g0ck8a765ZnEP3xWMRZ/2vUp
8Rd1v9gnChpeEf9RvXHRLMmBesIHnokROQkjmwk/OKoaEf9QfSB8IWt7brCE
3Ub4w7P+Id6ybQrCJy4dH31su6CD8Itr5gu/yHOUhG+MiDUpNV2dhH+UdnGb
Xg5+IvnAXMEMh83PVSQ/aORdXe0dqSb5Qq3l2Bb8qCb5Qxv/2+f5rhqSTywN
bk1O52hw0lc0W41HxRzS4B9b/Px0
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.011000000000000001`], 
                  AbsoluteThickness[1.6], 
                  Dashing[{0, Small}], 
                  RGBColor[0, 1, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxVk3tQjGEUxj9kmWmspFxStoTCdtO4tpzppqKhQWNd2pGym5RrbmtMzcjd
NtFt2JLBsFazM5TVKB2XFEnRZmvZ3bb7l+ylsUONtIyv9w9n5vz1zvu+5zzP
7/HYtX/j7nEURa3622P+9liKlAUgxN9wTkOja4+j8bXVDMUXoyQ+LTTWiAZz
OSozZLZQeaGNNO7o8sudKzWDqkxQtxRpzKDEi4ejzSCWpLkrb9HohJEROtoE
Qjcpu+QwjVRs2FT2fhPk3b9cFLSQRrtyG7urzQhuJxb311b2Ym66TfEqyAiz
CwJEk917MYW7ys399DcwFKvFwogelEfzabGyH/grS3mced2o9VPIEtRfQc9q
SuI+6ESZtUB6rLMPwBRjta9vR+/bzkvi9TRsXsOutP3U48uqQFlLbS8Mzlfx
5uzWYH1QuvDGzR4YqfC5lt3ahK32HfmZe7oh/qiHsu5hDVaJIzMTPbvgzPqo
6SH991Cw7YidZ2MHHNna3LAdysH12IEWRWo7PAxdUbjSsxEY/QxgqfA7u3eF
Bih92CJftg6ECrvlv2Lb4YMLy2Nowme4XuJkpaq7gadq4GSY1RBcrso79KQP
Yvr8lplrVODF4i94xTJCNivnxansD5Ac51vgc9UMg/yQEk1hHbgoBQ7hty1w
fJNMZM+qBklkAS948gAc2MKT7nz5FKYVQdaYKQNAvTVH1r6TwyWvG4enPLIA
9V9ZwIE5x/xiblOAswmSmPvIKZv/XVTdD2nM+3iH62+6y+0DK/M/Xv9RWibY
00PmQ+X2gKCEK51kfiw+H15+X2kg+yGnqjba//0Xsj/uSx7RCmLVRB8MC03I
qnT8SPTDmBSXCP6sN0RfDF3d/Jvn+wxG9Uc71rmOnPS7MOoPpshTvU0L8ol/
+KRiODXN+zHxF42/eAdvvn1B/EfdGlcH+a436MXwgUcTpZ6SuAbCDw5pB2Q/
tR8JX8jdWBQu5zUT/vB4cESgcoMaUxk+ce7I0APnma2Yx/CLS2dIvqkKNTie
4Ru3Jls1+rbPaNv8j39UtAnqn/d+IfnAIvFE97VPtSQ/aBFeWBIYpyP5QoP9
8Dr8pCP5Q6fgKydF3np0Y/KJpeFNGTl8PY76irZJI/GJSXr8A/Ur+3M=
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"First derivative N = 60\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact First derivative\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx First derivative\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 7}, {40, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {40, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.829544141468106*^9, 3.8295441949072495`*^9, 
  3.829544329290766*^9, 3.8295444224010077`*^9},
 CellLabel->
  "Out[748]=",ExpressionUUID->"fbc6e9f6-f245-4fcc-b578-61822250a332"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$42410#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxVk2tQzFEYxpdqV6VQ8UHRklwSNQpDmRcTdpuMncq0xaRSkqzKJaxLO5Xc
yQgzohKx2pVbU8Zl31OkkbBktoTKVmuz1f7Lbq1ahXF88M6cOR/OnHPe93l+
z5SYpOC4kSwWa8nv9Wf/Wwyk9gZxmRE1OEnj0FVl0MNWtl9r6bWX+DzelONa
p4fiPQdVRp4S17d55UzL1YNCwfatT3yPEpZ4njlIDzbJ8lT5ikZ0Qt6qz9pu
qHwSI8zqacHh0ABH+6RuCA5ZLOu60Y5WD4bt25q7YIs64cgrvg7PpQ2XPPXr
gslFFd5TdQyKPJdM4mZ0Qt4tZ866QgMWBwm14jIdhEwsaDpJTPjJq0S6UfUN
XPhFVX0+P1FquJC7u7UDjgXF+GYwLDLj6vj50U1aiC5j9a8VWJBKhY+0vvor
hKkX1JTmW5Fav7RNeQUaKKqO2/BFwSENturzmQnt0Hlfdpx/1JooxLzMWLc2
uMZWD3+styGREbss3d6oofad2eZUpi1x2Z1cXyL6Ah5yH+b9NlvyV78WsEsJ
vpousSGspoDZc+0/w9bZdjGe90YR5UT2lB+cRnAMD/VwtWcT/7rXrhK9CtZt
OjnB8u5IIujwWqh/XgeChDFZ4tM/8TT7bMWBbCVcj/C2WDreiEbhcvmHSzUQ
eJjLDf+oxV0h0nhb9jNQFsCdFYuUmBjmnxtV+RAeDK5Z2Tj9Fdi90POqXxaD
5e38R9ZVbcD6r5h/52jVEHkzLtkA9D4GgspKhf1A38d58amr00cPAP0fdZLO
HW5pg0D7Q4mzXfysADPQ/nFojFK+OcsMdD5UiozlxxLNQOfHIy9ac90dzED1
wZmWhSc8zgzS/lowSmQs5ZsGgOqLzKW3dxnBAFD90UfoX3ox/wdQf7Bhx1qZ
f7sJqH9IwpIspFwTUH9xhKjZu2ZNP1D/0Z2bFlie3AeUD/zwONZlZ7oRKD94
Ktr57d5DBqB8Yc6zAd73fd+B8oecPj7vYUIvUD5Rt9mdww3tAcovLu2pTMle
xgDlG4d6Z5Fl27uB8o/pn8g038xOoPnA1+ulYqfqb0Dzg7Xlstg3qzqA5gsz
escKs8dpgeYP919eKAuf8xVoPlFw3qmMXNFQ/Rg8O9SoqdqugV8LRfcT
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.011000000000000001`], 
                  AbsoluteThickness[1.6], 
                  Dashing[{0, Small}], 
                  RGBColor[0, 1, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxVk31Mk1cUxl+ktAIDFWF/CI4qMhV1EMGZDcxRg9oSjA0foYBxwkBgUqkf
Q9dNaYChc35gRE1EhaloRzsUR8D40XNhIBFR6zAFUREL1GKBvmALFSrM7L37
Yyc5f93ce895nt8zLzUnJt2ZYZhVH9vpY09j/isWckeihaxTC/oZvQabrBbI
5of31Fx+gPcy7CX+bRao3HdAbxPpcHNvcMmCUgtotfyw9u1PUckoljuiLeAm
1+Rq1nWiN4o2vDQNQcPdVGnRcDcy8ZGzPXOGICb2a/Xg1T7k3Zzy7H01CN8Z
sg49FJuxJG+q6q/wQfisoj5kvpnF7KWr5goLBuDCH76C5ItWrIyWmhS1Zoid
U951lNjxRXCV6lv9W/ATVzSNhn5AlfVM6d6efjgcnRpWwDJk0SWfFSldJkip
ZcbiJc6kQRuqam9+AwmGL1tqylxIa3jetgvlRqhoTv/mtVZAOtwNpwuz+mDg
T/Wv4l9ciVYhKkwL6IXLfMPU83Y3siXpe17AYwO0/u1wO1boTvz2yturZK8h
SBPKPt3hTjj9usFjZ8ylfKUbYboil3zh+RKyl3ikLr0xnejm8Oe9F3TC7MS4
IH9PPoloe+SvtOghedvRT3nV04ikP3il5V4bSLJmFCmOf8Bi/sn6/cU6uJIU
4rzax4Z26VrNs3MtEHVQKEx8bsJ9saoMd34j6Mrh+rqvdChPiCjd2nALbk5s
Wt/5+UNg7ltEzQ8qgXet7LZrUy8w/ysWZnLn6NKx5fd0uRUyufsYBXoXPY7B
Hu59XJ6RuzH/k3Gwcv+jWTmwOyBvAuh8qPT1yFgc6QA6P07O0GkyixxA90Od
zFZ3eLsD6P546H5PaaCXA6g+uIh38UjQiQk6XzduldlqxPZxoPoie+5JNSsZ
B6o/hkojas6WvQfqD3bsjldH9NmB+ockIcdZJbQD9RedZK9CWjaNAfUfA4V5
UXXyUVjI8YHP7qT57cm3AeUHj6X4PvnhZytQvrCkcVz07sd3QPlDwahYdCtr
BGQcn2jODBQI44bhFMcvrh5u2Fm8hgUXjm+cHFlM1uwagqm4f/nH/BdkQVjh
ANB84KPNKoV381ug+cHWOnXa4w39QPOFBSMzpcWzTEDzhz+dX6lOXPYG5nL5
RMlp71rym5Hqx+LJyU5j0y4j/AOkdPYS
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Second derivative N = 60\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact Second derivative\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx Second derivative\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 7}, {40, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {40, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.829544141468106*^9, 3.8295441949072495`*^9, 
  3.829544329290766*^9, 3.829544422543167*^9},
 CellLabel->
  "Out[749]=",ExpressionUUID->"6786577c-1185-43be-9e50-4563c7f3637e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numderv1", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numderv1", " ", "=", " ", 
   RowBox[{
    RowBox[{"Dot", "[", 
     RowBox[{"MatCheb", ",", "numv"}], "]"}], " ", "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numderv2", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numderv2", "=", " ", 
   RowBox[{
    RowBox[{"Dot", "[", 
     RowBox[{"MatCheb", ",", "numderv1"}], "]"}], " ", "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "[", "%", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot7", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"numderv1", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", "Orange"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot8", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"numderv2", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.82954392781641*^9, 3.829543963750169*^9}, {
  3.8295444353267593`*^9, 3.829544440695798*^9}},
 CellLabel->
  "In[768]:=",ExpressionUUID->"c650d549-789d-4b44-874d-23c94de9c9f7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"Plot2", ",", " ", "Plot5", ",", " ", "Plot7"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"Plot3", ",", " ", "Plot6", ",", " ", "Plot8"}], "]"}]}], "Input",
 CellChangeTimes->{{3.829543965024678*^9, 3.8295439819819455`*^9}, {
  3.829544080304401*^9, 3.8295441065105104`*^9}},
 CellLabel->
  "In[776]:=",ExpressionUUID->"48131c96-98a8-4717-bcc3-3a298ddb76e1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJwt2Hk0Vd37AHCVocj4ImOGohKipIkeEhmSohBlSCGl5FWUkpBEJFMqJLNk
KPO4Tdc8z/M8XJd7z7lRhtfwO9+1fn/d9Vn32Xs9a5+9n2efI3HroeGd7QwM
DErbGBj+9ysP/JStLQwJuoDGbfsR9HB1n9/qGoY+25yXvGo9grKyFaUX/2Bo
+vc1W1WzEXT0oP6tmXnCn9Nk1vVG0Alun4GmXgxFbjltyRwZQWqT9IZPmRjy
XdTOvrw0jAzfNKcds8TQx5QO5s6nw8i11cfRroyGCpibDe2dh9C7+Se9SwU0
lMufpsR9dwjFsdxV98qmob8zE5rZlkOoCfT5olNoqPrnU+bJi0NIMouvtCOE
hij5JCe69BBqCU7afdaOhk78V+XQ3D+IpA3r0ni5aEijxqIm+vQg6upio1RY
U5HmRt3is7l+JFr+kPeEyAK6d79VIlC5F+Xeq2biHKYgA7VOi+mLXcjqnSLe
7zWHrN6KhbRPtKGVEHc/BGR0iVk1/PNGA4rnGBGMHJ9BjbxHatvPVaEoXUXn
zrfTiNFMdeV9eh7yum/tdkhnCuEqR/brvYxG7ju+uzpTJ9BbvUunhl3jwdqz
dX9PyjjiYQ4+7y9VBOGl05FRDmOIs0ZPfekSCYpGD+7+ITmCgg/6lGk7tcA+
LrVzV2MGUZ2qh7/3+074JePnMDHZh848vrqhatIHo6Sf4srKPWj5C8kqin8Y
pmXDj6K8TtQl8Tl5D2kMuD1SleW3tSOJ8+d0SuQmQVYZk01cbELYHD/fQ9tp
8D5PbSt0q0XFS5zXNdEs8F3NCL6+pxJZOHvu6Vycg19/SZx1+4tQXFPssQ/j
85A4OB0455OBCvrSdUTqqDDwnP9r9LEMZDeZMVHZQgWOvReyrkyko7Lpqek7
3VR4YpXSUQjpaKZ5RvTbBBW0ph32+K+lIT2/jpX5dSqQaVisjFMqelbP+LxN
gQYy29ey75knoM2As19Kw2lw84pIzqBNGAozDv573wiDhcU/px5XhyL+DoWP
y6YYPI9oRRxSoch1pHH5hQUGUYNejeozH9DIJdaFF3cxyGnsIBm0ByHhn6Cl
+xKDzKX7+8gDPkhqVIDK/R0Dz66DXcJVqmiROeyy1joGspzDDkxy+2GbI9+1
bww49NC9vnKtaMMRjyU50R04uIdqNdxTsoKCHPth9p04VIm/fRPN5Qy2Qd5M
ndw42NnJ2OZteoFX8gH2+f04FLK6d1c+DgUBv4VALR0cYuX4OjMlw8ArmtU3
SQ8H38uZbVGtYXDcQNl7xyUcrkZMNj45FAHsl218cgxxwCUuVsoMR8L09k67
3+Y4SJ8SzQw5HwO+5ffGBx1xqM+2PP/zbQIUdtsLm7zHQYUkW3VgLAH4H+Vk
Gn3AIatnVT1GORH+qJOY9UNxiFgNhYDJREgu2lg6/hGH21B3+o5qMjzhNYgc
i8Fhq0FBUZCeCscsa458TMfh+MS2va9MM4HpP2TtXoeDfJEJXSE1E1iqp3/Q
64l8QtKrx1Yz4cVLe+rtRhzYvv04HqufBR3qjNrnWnBYv2w6tEXLgrFvh5T7
OnEYzso8hBR/QTbX5XcPR3AYiDL7Z4/ZL8js33cvZ5RYbz+mjQdev4Ce/kbq
7xgOLVbmbXs7f4GfTbS00yQOZVwsrh4u2WDzj5PcWTIOX50sqlXzcyBIdJmi
Rsch6saujPDRHLgr4lht+BuHSO2cj1SWXOBokLGyXsQhWJz1XrRpLoi+hD6X
Pzh4tuVyb6zmgrSB+leXVRyel1j9d1UyD4Z8bSzvr+HglsI2/UM3D3TsbnVb
/YeDk6d1wY0vefBtsmkINnCwVmC3LFHJh+iY6/I9DHSwECnQ5r2TD/KW1s7Z
2+hgttPm6P3AfDCeZbQK3E4Hw7ECJpGRfPjMuvvoCUY6nAu+/cP9ZQFkbhT7
3mKhwz68ePV0ZSFk6QnG8bPT4Xmzhs8StRA6KQuJjYR7vjdyZAgWgVZc77fn
HHTwvzO4T+JRETxodnnWwUkHfGBNn0W8GAxuxjzT56GDboFXX7leMQReXWSd
IJwQzmrzzLUY/MZe+Tj/QweTy0Ju1JZiMGZbPPyGlw5lpFNxnS9KwPTUusBL
fjoIxFfIBqaWgIHcAvpN2NlTJ1+ruwTsh73Vb+2hg9SZ602FsqUQse1ps5IA
HTwExo3/NS0F5zm1ro+E+/7Yj8v6lALp6euMv4TfZbn9/TpYCmfj7XqSBekw
E8jw6jpLGbSyPBNfI6x2z4/tn2NlYJz1W1lbiA6ftbkimizKoPsyp0AI4UWp
SHFf/zIQWOKo7CV8cYd4GuSVAdum4jFBYTokjSUfXx0vA0n5orvGhM2+5Ove
P4XAsYdFvJpwjht0S91B8PKHSdQSYQ7jWsvRYASydyV6xUXoYH/MgBJZgkCs
ML1Fm3AFV6+LIRlBwS+tV/cJs7tmbjGxloN33wlqAOGiO4vVE2Ll4CXcwpVM
2O7qCX90vBxih00opYR5NdwNovTKgWVpv1vb/+ZTRLxPrcvhZapvwQjhB+I7
Bq65lkNneWsqmbAw54WvRwPL4YjrVV0a4boN/9uc8eXwwtchEiP8eKHl0EJB
OTQeuBuyQFhykAeraymHFL5U5WnCLfXGOYlTRH5BPt79hN0LPj/1WiuH3SYm
rvWEDyaPnLXkqoDQEg+uXMJd4ZKMKtIV4Pjxun4U4Vc+tvUCKhWgr68t+5Kw
/L/fg/5cqYCEzh9pNwkPWtOMOuwqgOUXpf4EYb/LRwUzX1RAAKPda3bCx+HJ
SEBoBUh6+A2NEOs7IVcUb59aAZsO+c1phN+LbNprogqY/3XTxIWwCts5ecnu
CsgZnHE9SXhu9fXiJqUCvNjK5VaI5xtBri8YZKgEJTZT12zCGr3sHgX8lVCh
LWbkQBgnXdEIl62E8P43SISwTnx/8yXTSrgWw37ehdhP+OsMW5JjJQxKnNwt
TDjS3nvrjHcluF5Q8Csl9iNZTk7xUEYlzMXVhf8h9nMw1/aGr1WVwGP/bn8A
4ZOLPbf4+ytB9/dtaxHCfgWeYTsYqyBpX/qoInEeFL5ck3smWAXv1PX35vER
+/2FTA0uXwUa/DZMyoQPanQtD1+vAu3RW7UHifNV13zAvCCzCux+Ky31c9PB
KWt9UZ5UBZQrqwZnCAuEtr9LHKiCZ8PndSK5iP1o6l4WwlQNMXeFODWJ871z
skXC0bwapJvLKu/upkMWKb5o0qkaSnmzppPZ6GCa4mZk5lsNiQnJX8ZZ6ZDi
KPn6ws9qUE30L76wiw4XVh6TJVhI8PZvWvIIEx1oA7qvIkVIoDl7CVaJehRR
KibEeZQEZZJzlpyEZ7zq9dZvkCA9d+8JeaJ++bKLZvb8IoGcYq6w8ibRD3D6
Bf06EvC/ku2XJephT0fNWNUwCexPb+cXWyf6Q6QTz8+dNfDXSXzXX6K+1khW
Pw6wqIEI/5UcR6L+PmD6xLHdpQYUH0nrqy3hwE92THZ7WwNhB8LMOYh6bZu+
p/9OTg3cn6vuicJxYD55T0WNtRZ+v2U86D2Pg6Y+z44/ubUgbzam7UL0iyDr
XfTV+lowrBET2UP0k77HDKObw7XgKCNHyx3GwSGGVrSTuQ7sj/sGzA4Q8ViD
s4hxHTS7XQ8X6ibiP3hPaPytg+difCqI6HcSSc/atFnrYebgg1iJWmJ80aMy
/b31YPYzbvkliehvE5afTbTq4eHtQXeFSiJeScXwXkQ9PGoMr7MqJuJ7lipC
lBvA54Lg+MYPHLIp85kfdRvATL9/n1gaMX5zIjrKogFOWx0xUEkl8jnQ/jTJ
twHOMOrcdEgk4t3SFYt6GsCy6PyF8GgiXsj22/iTRtja29wnFYjDe8teT4X8
Jih1xXzk7xL3iQUVmGlqAlcuc4FIWxw8nsZtfJloAv8l3oZ1G2K9Qx2fsXA0
w6O0FN98Cxwu1e5wGbndDBr7TE1/G+HAcUTB7h1PC4ywzDC/UCXy2fTTJzu2
QtsYv/3UbmL+ABpbjHcrZP3cJfRzFzG/wNUGo0+tMGUsOe7GTMx/VOwCqm6F
APfcG4tbGBzINhNvZG+Dz6NnX3tOY8AyiwvG3W6DfCvt0MoMDGovibJf5mmH
rsgnF2ZOYcArP87vLNIOjaO7jtcexcCKPVE8TLodDpv4hX09jMFao6xS3+l2
WJ5c+64sStzXdFTMrWyI+Ofx5za3aBCsYZ7qlNMO0UavQxeraGB28pPmB+MO
aPwmZeOuSQOqBJ9Hx+dOGOtgv610hAon3b89qkjoBNVQxkJpaSp4dcndycro
hOr47zzcolTgf6N1MaiyE/iSeAeaWalwdsFVSJfSCTM/G6Zmpxfgfd5AXsWp
LlgIbDT6+nkBFPVisay+Llgae911YHMeHrsctn7P3wP8wutsXBkU4GfFSowl
ekBL1M5bMo4CBV9/CeyV7YHRwXoF2QgKrDecavuh3gNGXCunpTwo4CWhDQ33
eyBveeh+hj4FglpuizJV9cA75nNm4vNzkHQwpv/Zw17Q5kg8HSU2B71DXIa2
dX3g3obv7H04C1ZPVWZZLg6C4G3gYl6dhKrDJ/yrmEZgxXY5YSphFKR3lZAT
tMdAeueqXt21XhAtuafJ5DcORjz6lqWFzcCwtj3VeWIC5mC+TFI2D5avlFqQ
pKZgx0x4x4JDChpUshSW8pmG+JH62AnGOuRkwsUtOTQDvRPP22nKXUgwbMqU
UZQMe3ZvHHKQGUQZ5rHJi25zUOt+OH9qcgwp9e5bY/aYg0kjwU41bAwVGyZf
FPKeg5rBOovwtTFUp5NBVwucgzdKwsUHuMfR5ImSM0HfCNsaqdFVx5EAb1/r
wYY54Dr8wJAvYhx5NXGu3BSmgGvgt6Mf1CaQiepL7bpSChQ7x5InX0yioT8z
nJWVFFhLOqEv/GYS3cq41FtcS4GE/3pw3eBJdF9sr21mOwXoPCQsJG4SeW0r
9Y6YpsCXYPtkUs0kyiCtld1mn4dHy98nc9inEOOlJ8e33ZyHNqHuiF/hU8if
eWR9zXoelpqeBGDRU4gTaVYv2c6DBMr4sj9pCgkp8BmRneZB2dqbzTVvCh3h
yXFq9SHG17HzlPZMIbMeelr0j3lor5fjaeabRj8tHCVPr8+D+oahw0rgNLqV
i4vGbluAG3cVfnWFTyPe3S6CzCwLYBNEi0yOnkZPCp9xdXAvwLUJDXXF9Gl0
mtdv8+6BBXCOXqN3Nk6jyvq4gU+GC7C/m9vfmGUGdSn1haymLMALDszUwHUG
vQ4wD7LMWAC19a1tWy9mkPLEyFtS9gKoNwVoJvrMoMj3054fyhagbc9gVPeH
GXST8vvBoa4FSMwbDiGlzaCZr+x617eI/Hakj00Mz6AVVo0dhdeoUGh9WpL/
zCzioXGEVZpRwaCurvCM2iw63D6wv8mSClPXDilc15xFFh+dtUbvUkFkilbs
bjCLqvbFvWXyoMIjMflbljazKEhlG5dhEhUaUfHbb29nUYpYc6x5GhWi68Vv
aQbNoortnxTvZFHB5LiQ1HjILFqqUzByK6KCNOXIA4aoWWR2zSoihnhPfRZg
KzWSPoukHiCR+b9UoB9L+cvfNovOXglIX/qP+J9tY+pU1ywyVTI5u8lAg/3X
/jRd7ZtF/ms0S242oq4k7QhyHptFuO/e+BNiNEjtT/+tj8+ikq8vDvlcoIGS
Iaf6aw4yMmw/oywaSQNt6iu7zfNkxHqGraIkmgY+egq9L7XJqCJhQO9GPA36
/5NyW9YjIwW3p9ZfMmgQR+64Vk9cPDnE8t8JkmjgyRJRsGxJRvX3j07y/aYB
I617wdONjDx7tj3IXaYB+7mHdrbuZHRSrX3l6gYNCtTmlc55kFHSP04cYTsx
UDDxbh/yJiOfovRTPGIYvO4fvhwTREZqOw8Fc1zEwLwpwPlqHBmtPFoRyriC
wV+IUYhNIKPMwdpEfRMMFldU7SaSyGhvpm3xu1sYtEXya+umkdH6tYQZ1qcY
uDlE7E3JJqMc9O+j7x4YrPx7azY5l4zuHdJY1/HBAI/dVInJJ6OB9XHut+8x
kBHh+PSgmIzy48VUWZIwmLwubhFTSUYP2LHapDQMIiYoPYbVZCTtWmao9RMD
dDCTvkEiozDdm/avSzB4JbK+52Q9GTnTP4fu6MSAIq7jotJKRjLmDnvj+zA4
XOugk9RGRuPVp1LPjWCwv/RdD3MHGV2O7Ct7NYfBjxu8+390kdHO7Sk6EhgG
+h/3UfBuMkL3XLvKlzDYfdr3X9leMnrSrWVptYbBZWnBKos+Mvr/72Uw9qhk
8E0/Gf0fMpUh9g==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$42350#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxVk2dM01EUxavBakKoouBAsSAKqGVJXFC8YQkqUeKIRaURwVZB3IjWGEhE
cRUHApGyIgZrJU0QrESQq4gsEZRiodiWsv+IHcQ6iEjVwPvgTV7eh5f33r3n
/I7jgWPbD06l0Wh+f9e/faKMAAGe2lQlhfYDs3VvTAbIv7ZJ6NZOYS3/512m
3AAp7bSMwBYK9/V53F0qMoC8jNu4BilMpglWjYUZQCA87SC7T6ENhoaoKT3w
7EWM4lMUmncGzWEc00PGoxu5visonFZuZvR16cD+3KrhuspBzEgyS1/76mBx
lhd/psMgxrP87B0ufgFtvkLACxlASRiHEsiGgeNTymYu60eVh1QcrfgMGnrr
IdbjXhSbskSJvUMA+nCTZVM3uhTaro7SULBzI6PS/EOD1VXe4va6QfjpLGcv
OajEJt8kXl7BAIxXuN271dGKHZY9mSmH+yHqjKOssaQWqwShKTFOfXBp66Z5
AcMPkbsnwcKppQcSItqa90I5LEo83i6N74aSwPU5Pk4tMKGfFowVHpfj1iuB
pgla6c5QA09qse7Xrm54b0d3HJ3eCdnFNiZaTT+w5c3MZIMC/MvlGSefDUH4
kMdaQ60cXOic5a/pOrhJT3914dZ7iI10z3K7Y4BvnIBiZU4j2Mm4s4ILjZCw
Q8y3pNeAMDSL7T9zBOJ2s0X7q5/D3FxIm2I9AlYNhtC6txK47pJ3yvqJEWj/
lZGcY2Y+q9XLVk/uI7PM+Su/Zpi8jw9Ynvoi1hD5H7O/l5ZxDw+Q/lC218s3
+nYv6R/zrwSXP5JpyXzIrKoL83z3icyPR2PHVdxdCqIPBgVGp1XO/kD0w/Aj
diGchfVEXwzc0Pab7f4CJvVHC3pqT3pSEUz6g0ck8a765ZnEP3xWMRZ/2vUp
8Rd1v9gnChpeEf9RvXHRLMmBesIHnokROQkjmwk/OKoaEf9QfSB8IWt7brCE
3Ub4w7P+Id6ybQrCJy4dH31su6CD8Itr5gu/yHOUhG+MiDUpNV2dhH+UdnGb
Xg5+IvnAXMEMh83PVSQ/aORdXe0dqSb5Qq3l2Bb8qCb5Qxv/2+f5rhqSTywN
bk1O52hw0lc0W41HxRzS4B9b/Px0
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.011000000000000001`], 
                  AbsoluteThickness[1.6], 
                  Dashing[{0, Small}], 
                  RGBColor[0, 1, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxVk3tQjGEUxj9kmWmspFxStoTCdtO4tpzppqKhQWNd2pGym5RrbmtMzcjd
NtFt2JLBsFazM5TVKB2XFEnRZmvZ3bb7l+ylsUONtIyv9w9n5vz1zvu+5zzP
7/HYtX/j7nEURa3622P+9liKlAUgxN9wTkOja4+j8bXVDMUXoyQ+LTTWiAZz
OSozZLZQeaGNNO7o8sudKzWDqkxQtxRpzKDEi4ejzSCWpLkrb9HohJEROtoE
Qjcpu+QwjVRs2FT2fhPk3b9cFLSQRrtyG7urzQhuJxb311b2Ym66TfEqyAiz
CwJEk917MYW7ys399DcwFKvFwogelEfzabGyH/grS3mced2o9VPIEtRfQc9q
SuI+6ESZtUB6rLMPwBRjta9vR+/bzkvi9TRsXsOutP3U48uqQFlLbS8Mzlfx
5uzWYH1QuvDGzR4YqfC5lt3ahK32HfmZe7oh/qiHsu5hDVaJIzMTPbvgzPqo
6SH991Cw7YidZ2MHHNna3LAdysH12IEWRWo7PAxdUbjSsxEY/QxgqfA7u3eF
Bih92CJftg6ECrvlv2Lb4YMLy2Nowme4XuJkpaq7gadq4GSY1RBcrso79KQP
Yvr8lplrVODF4i94xTJCNivnxansD5Ac51vgc9UMg/yQEk1hHbgoBQ7hty1w
fJNMZM+qBklkAS948gAc2MKT7nz5FKYVQdaYKQNAvTVH1r6TwyWvG4enPLIA
9V9ZwIE5x/xiblOAswmSmPvIKZv/XVTdD2nM+3iH62+6y+0DK/M/Xv9RWibY
00PmQ+X2gKCEK51kfiw+H15+X2kg+yGnqjba//0Xsj/uSx7RCmLVRB8MC03I
qnT8SPTDmBSXCP6sN0RfDF3d/Jvn+wxG9Uc71rmOnPS7MOoPpshTvU0L8ol/
+KRiODXN+zHxF42/eAdvvn1B/EfdGlcH+a436MXwgUcTpZ6SuAbCDw5pB2Q/
tR8JX8jdWBQu5zUT/vB4cESgcoMaUxk+ce7I0APnma2Yx/CLS2dIvqkKNTie
4Ru3Jls1+rbPaNv8j39UtAnqn/d+IfnAIvFE97VPtSQ/aBFeWBIYpyP5QoP9
8Dr8pCP5Q6fgKydF3np0Y/KJpeFNGTl8PY76irZJI/GJSXr8A/Ur+3M=
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJw1kwtI00Ecx6+wVUjTSnsazuyhNTWVyvIfv1WKVlKiWSNzlGbLTLQ0BCM8
6EWQZfkqpiUJtqYJvaaE+VtqrszUnE1Xunz7N3PTWvSyzGh3cBw/jrv73ff7
+bpEJ4bFTiWEbJqc/9b/YxQI5951wcDjkoE5I88tZiDl2zI82nisk3/PdtZN
1t9JztYmHvf3eWUvU0zW52T165BHStJ8xkPMQBNTROrbPDpgcFAnbwKyWSEs
TeZxYnfAXGGiCejtSwX+q3icVjEh7PswAiTFZ1hbOYg56RNlNf6TdaG33E40
iAniTUtEZz6BJlufdjhoAFUhUj5NPQx060POeXk/dniVKWP0H4HYtBwRl/Si
0pKnSO0dAg0farFt6MaVRY5rDxp5oHuFlRPfjFhd5ats0w4CXaDjlsYasME/
/fDNwgGQaD1uZLa3YLttT+7ZuH4gx1zU9ffrsCot+Owh1z4gYdvmbxm+g7J9
J21cm3qAxLc2RkIFOKUmtZUldAP12JC/0bUJ/uvXBaTG63z8BgMQY8BqT2En
iO7Z+P2K6IbmRQKXH9PfgajUwUJq+4HTNTpTsx405bqcE+VDEDrktd5cpwPJ
DKl7jWAErgiynp3ObAZRpGeexzUzfJVuKTXk10OSWmYfWDQKJ8OVcltBLWiC
87jNdmMQv5dTHKh+AvYFcHnK7DGY9dIcrH2lgqSVN5NnPxgF5rCb1WfrPh64
JW7xdjSx8yh5tOKLvHaY3Y+Z4jWmYvEQex+bvz58JIsbYP2hJMrbP+ZqL+sf
6YXAirvqLvY/pFXakDWv37P/o+Tonw5ZhJ7pg5KAmMuVc94w/ZDELgqSLn7B
9EUa1vqb83wKVv2RjJ7vyUovBqs/SFQJbib3XOYf0rrxhBS3x8xfpJ+544Uv
nzH/kexxsldFv2B8IA1XuGZENTJ+UNM9pvzW8YbxhTSiIFDFtTL+kPgF+ap3
6RmfqJn5s8RxYTvjFyV2GZ90+QbGN2qSLAbjh3eMfyS8rEEz+J7lA+nOGaLt
TzpYfpBcvLjWN6qT5QtJ4PgOfNvJ8odk3tVTcjcjyycS+xaaJTWiNb9Irgui
Dx0x4l80DO9S
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.011000000000000001`], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0.5, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJw1k39MzGEcxx/ksLbr/MjPrEt+XFwlzc++9jnUCg2LuKEbJZcfrUPGMuvZ
/JpNFpXYFY2Nc9Lm19UsfY7SkVS6XB11+t036a44EyI3355ne/747NnzPJ/P
+/16+8QmRcWPIoSsdO0Rrj2SsNUHhPNrPmfl0atzQu9LpwNI4do0/3oey9UD
md5mVz1AstZU87izPTBzttZVn1FVLEEeKUlZNBjpAJqULDXc5HESRoQ38XYg
q7Ti/CM8kujQieIkO9CbF3JD5vPoVjQkbv/UCyR5UY+puAszU4cKSkNcdV6Q
2kPahQflK2dKT30BY6YlZW94J+ojlXyKoQfomkec95wObAws0MVZPgNxq02Q
32tDnTNbe6ytG4z8Jqd7ZQvKbnku3m3jgW4TFw/9sOGLkmBdvakL6FQzNyve
ipUhqXuv53WCwuR/Lb2hFhvcW6+c3tcB5KCPoeJBOZakRJze49sOJGrtlNU9
d1C1/aibb3UrkAN1VTugCLyOaeoLEluA+i/PWeFbDYJ+zUBKA88eWG4FYgtd
ECBuAul9t2W/o1ugZrrI5+eYDyDNn+QkZR3Amau8qcMCxkJz1uHCbtjUHbjU
UW4GxVilX6moF9JFGc9PpteAdEdAtv9lBwwoV+dbcypAY1BJwm71wfHNOrW7
qAyMEdncKo9+0GzjtLtePAVJLlwcMb4fyGtHhOmNHjTzrh8Z/7APmMOyYZ8l
wjnuuiGvDfK0Q4JwHxWP535Tl/VAsvA+pssX2m/Lu8Ep/I813x89Vu3rZP2h
IiYoJO5SG+sf6bmworuGZjYf0hJT5MK3H9n8qNj/t1EVbWH6oCI07mLxhHdM
PyTx08OVM14xfZFG1f3hAp7BsP5I+s62ZqTehmF/kOgTZXa/K8w/pOWDicmy
J8xfpF+5Q3mvnzP/kWz1kuhjX+E8gQ+km7W+aTFVjB80tvTrfjS+Y3whjc4N
03N1jD8ky8KDDRstmCjwicZxv+55TmvALIFfVHikfTHnWHG0wDcaNU6r7dMH
HNryn38kvKrS2PWR5QPphrHSdU8bWX6QnD+/ODimieULSdjgenzfxPKHZPKl
E2qZDWcK+UQiqaUZShsO5xfJVVHsngQb/gPNO+5R
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"First derivative N = 60\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact First derivative\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx First derivative\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 7}, {40, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {40, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8295441420561028`*^9, 3.8295441953484955`*^9, 3.8295443299150534`*^9, {
   3.8295444228365993`*^9, 3.829544443957203*^9}},
 CellLabel->
  "Out[776]=",ExpressionUUID->"ad5806cf-51fc-4d6a-8835-2725cac42494"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$42410#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxVk2tQzFEYxpdqV6VQ8UHRklwSNQpDmRcTdpuMncq0xaRSkqzKJaxLO5Xc
yQgzohKx2pVbU8Zl31OkkbBktoTKVmuz1f7Lbq1ahXF88M6cOR/OnHPe93l+
z5SYpOC4kSwWa8nv9Wf/Wwyk9gZxmRE1OEnj0FVl0MNWtl9r6bWX+DzelONa
p4fiPQdVRp4S17d55UzL1YNCwfatT3yPEpZ4njlIDzbJ8lT5ikZ0Qt6qz9pu
qHwSI8zqacHh0ABH+6RuCA5ZLOu60Y5WD4bt25q7YIs64cgrvg7PpQ2XPPXr
gslFFd5TdQyKPJdM4mZ0Qt4tZ866QgMWBwm14jIdhEwsaDpJTPjJq0S6UfUN
XPhFVX0+P1FquJC7u7UDjgXF+GYwLDLj6vj50U1aiC5j9a8VWJBKhY+0vvor
hKkX1JTmW5Fav7RNeQUaKKqO2/BFwSENturzmQnt0Hlfdpx/1JooxLzMWLc2
uMZWD3+styGREbss3d6oofad2eZUpi1x2Z1cXyL6Ah5yH+b9NlvyV78WsEsJ
vpousSGspoDZc+0/w9bZdjGe90YR5UT2lB+cRnAMD/VwtWcT/7rXrhK9CtZt
OjnB8u5IIujwWqh/XgeChDFZ4tM/8TT7bMWBbCVcj/C2WDreiEbhcvmHSzUQ
eJjLDf+oxV0h0nhb9jNQFsCdFYuUmBjmnxtV+RAeDK5Z2Tj9Fdi90POqXxaD
5e38R9ZVbcD6r5h/52jVEHkzLtkA9D4GgspKhf1A38d58amr00cPAP0fdZLO
HW5pg0D7Q4mzXfysADPQ/nFojFK+OcsMdD5UiozlxxLNQOfHIy9ac90dzED1
wZmWhSc8zgzS/lowSmQs5ZsGgOqLzKW3dxnBAFD90UfoX3ox/wdQf7Bhx1qZ
f7sJqH9IwpIspFwTUH9xhKjZu2ZNP1D/0Z2bFlie3AeUD/zwONZlZ7oRKD94
Ktr57d5DBqB8Yc6zAd73fd+B8oecPj7vYUIvUD5Rt9mdww3tAcovLu2pTMle
xgDlG4d6Z5Fl27uB8o/pn8g038xOoPnA1+ulYqfqb0Dzg7Xlstg3qzqA5gsz
escKs8dpgeYP919eKAuf8xVoPlFw3qmMXNFQ/Rg8O9SoqdqugV8LRfcT
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.011000000000000001`], 
                  AbsoluteThickness[1.6], 
                  Dashing[{0, Small}], 
                  RGBColor[0, 1, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxVk31Mk1cUxl+ktAIDFWF/CI4qMhV1EMGZDcxRg9oSjA0foYBxwkBgUqkf
Q9dNaYChc35gRE1EhaloRzsUR8D40XNhIBFR6zAFUREL1GKBvmALFSrM7L37
Yyc5f93ce895nt8zLzUnJt2ZYZhVH9vpY09j/isWckeihaxTC/oZvQabrBbI
5of31Fx+gPcy7CX+bRao3HdAbxPpcHNvcMmCUgtotfyw9u1PUckoljuiLeAm
1+Rq1nWiN4o2vDQNQcPdVGnRcDcy8ZGzPXOGICb2a/Xg1T7k3Zzy7H01CN8Z
sg49FJuxJG+q6q/wQfisoj5kvpnF7KWr5goLBuDCH76C5ItWrIyWmhS1Zoid
U951lNjxRXCV6lv9W/ATVzSNhn5AlfVM6d6efjgcnRpWwDJk0SWfFSldJkip
ZcbiJc6kQRuqam9+AwmGL1tqylxIa3jetgvlRqhoTv/mtVZAOtwNpwuz+mDg
T/Wv4l9ciVYhKkwL6IXLfMPU83Y3siXpe17AYwO0/u1wO1boTvz2yturZK8h
SBPKPt3hTjj9usFjZ8ylfKUbYboil3zh+RKyl3ikLr0xnejm8Oe9F3TC7MS4
IH9PPoloe+SvtOghedvRT3nV04ikP3il5V4bSLJmFCmOf8Bi/sn6/cU6uJIU
4rzax4Z26VrNs3MtEHVQKEx8bsJ9saoMd34j6Mrh+rqvdChPiCjd2nALbk5s
Wt/5+UNg7ltEzQ8qgXet7LZrUy8w/ysWZnLn6NKx5fd0uRUyufsYBXoXPY7B
Hu59XJ6RuzH/k3Gwcv+jWTmwOyBvAuh8qPT1yFgc6QA6P07O0GkyixxA90Od
zFZ3eLsD6P546H5PaaCXA6g+uIh38UjQiQk6XzduldlqxPZxoPoie+5JNSsZ
B6o/hkojas6WvQfqD3bsjldH9NmB+ockIcdZJbQD9RedZK9CWjaNAfUfA4V5
UXXyUVjI8YHP7qT57cm3AeUHj6X4PvnhZytQvrCkcVz07sd3QPlDwahYdCtr
BGQcn2jODBQI44bhFMcvrh5u2Fm8hgUXjm+cHFlM1uwagqm4f/nH/BdkQVjh
ANB84KPNKoV381ug+cHWOnXa4w39QPOFBSMzpcWzTEDzhz+dX6lOXPYG5nL5
RMlp71rym5Hqx+LJyU5j0y4j/AOkdPYS
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}], 
          RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJw1kwlM0lEcx/+lYmG58qit2aTs1vLosrJ+2LTQdVBZqbU8OsxcRYdTaU1m
xLIoaZVZdB+LyjltdMyav1dpLsuiUWKahoUIXmCCotKI1uttb2+/vb33fu/7
/Xwnpe5fv3M4wzBLnfPv+m+YgeHfumQaVoMT9V5dVRYTMCLvcuWdd/gmzXbe
X+2ste2NVp4Kt+qCz0+RO+veoVBNxmcUMcIw+ypnrXmSVRzdgD7IW9lk6Aau
pn+zpEeLjrgob8/93UCg4GHXvVZ0e+bw1H3vAvI48ERtTAdeyHWUvF7irMX1
IZM7zLg3aOlEzrFO4Dxiu2+5ZcEHq+INwicdcKO0uPk0seG34BLF9rp2kF2W
V/XN/Y0Ky0V51k8jyA7tmnfMzJDpt33npzQb4M5be99Gvgt5VTFXoalug/dX
F9cor7uR90tyd127oQd+bGpSS4U7qff4UShObwXSWnIqJn8kqRDyxDsCdFAf
/t3RqGGTbYmZrgEff4Ah1sE+I/YgflkCTcneFsheE2r+vM+D/NNPC6Oq427n
idiEaY4KnOPZBH5WdmrQoxFENYE1acC9AVyTNs3y92SRCPUHf5GpDiqlp8a5
lg0nfGPwQtMbNSRbvSTCgt9YwDr38qhMBQJ1kAvX14rW+OXFX6/UQEj2dE5C
owEzNyjSPFiVQFLCSqMXqTBjc4Q8+VU5iO4tWNEwrRZGvzXxqt89AE7T3ecj
q3Tw32GiG3A4HKb/+yhoSbm/U2ABeh6TF6jd6rAf6P3IZOeszhs1CPR9FKQb
DwXkDgHtD4sCx6TNjLID7R+5rNri3RI70P+hIt/29GSGHej/USrRyqd62YHq
g+GZd6Wzzg7R/rSo+tqjjLENAtUXZyz7UmbmDwLVH0VF4crL1weA+oMKacLD
iFYbUP9Q8WmPi4JjA+ovhq/XhdSs7QfqP9r1ObFPBX1A+UDxwj1+h/OsQPnB
Tonvp5zjFqB8Ie/4sJjeI71A+cMZeZG88vRfQPlETlqIOyeuByi/mJyvPCCL
NAPlG5lCPok82A2UfxStk06ZJ+4Emg/k6oxCn+p2oPlBZnzijo8rjUDzhVxx
abxsrAFo/pBpk91PmN0GNJ/ITIt/QW7qqX5mZMasG6o6qIc/6WD6Xg==
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.011000000000000001`], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0.5, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJw1k3lM00kUxweBosUQRHETg6GKCiu44I2K+8oGtRBcq6KCGgU8EF21XgFq
NjRYG1mr1IhnXXU9YlVC0NQjrOGNBxJR1poqRRAsbiktV4u0UKCm2+xvnGT+
eJnMzHvf7+c7KXvvqm2+hJDF3u3j3SPI92UHIr52weZTi2HmkO5qhw2IbGyl
9sZrfJnjKg3Xe2tjR5NTpMONptjSKWpv3Tc807DrPcqIdJY71VsbHuaVLWnE
cSha1mzpAaFhYJ2i14hkTdLYoL09QKHkbvetNvR77Akyfe4G+iD6WF1yJ5YW
esqfL/LW8oa4yZ12/C1m8UTBkS4Q3OcHbLjmwDup6Rbpw064WlHWcoK68FNs
uWZLfQeoLqqr+2d/Q43jnDrvXyuoDmyfc8ROaNT10LlZLRa48crdv0bsS59V
zdYYatrhzZ8La7VX/OmbRYXbL181gzgle3NrVQBtCPxyVp7bBrSt/Hhy8Sha
JRXJt0aYoCH+s6fJwKeb1h/yi3j7BSwpHv5JeSANy5MYyne3Qv6vM+3v9wRS
Tj8jjK5Ju14k41PSkhT9U1AzhDn52TH3R1LdBN6kwYBG8Nu8dnp4EI8m6P8J
l9nq4YXy+Hi/eyOo2Bo73/ZSD5nOEIW05BuqeKef/q7SgUQf4ysMdaIr/Zey
j5dqIS4/UpDRZMH81ZqcQN4LoFmzKpYs0KFkXYI681klyG7NW9o4rQ7IK5uo
5vUdEDTf/HtUtQm+O0xNgx6PxwbB3DlKWrNub5M4YAd3HzPn6f3rcQAOcu8j
yS9YXjR6CBzc/yjJtR6IKBwG1h+ejw7O+THJDax/FPLqynYo3MDmQ02x69Ef
u9zA5kelwqieGuIGpg/GH7qpnH5qmPVnRN3HXm2yawiYvhj184d7dvEQMP1R
dj5ee/HKIDB/UKPMuJvQ5gLmH2re7fTVCFzA/MX4Vaa42hUDwPxHt7kg5ZGk
HyI5PlA+f2fYwSInMH6wSxH6ruCoAxhfKDrqk9x3uA8YfxhVlCiqzP0Kuzk+
UZATFyBI64UzHL+YWazdp0q0gz/HN5KzYpq4vwc8af/zj7KVyilz5F3A8oFC
k1U6rqYDWH6Q/LB+69tlVmD5QqG8Il01xgIsf0jaVbczZrTDRC6fSKalP6F/
mZl+diTBK4er95vhP4Ke+V0=
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Second derivative N = 60\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact Second derivative\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx Second derivative\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 7}, {40, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    RGBColor[0, 1, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {40, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8295441420561028`*^9, 3.8295441953484955`*^9, 3.8295443299150534`*^9, {
   3.8295444228365993`*^9, 3.8295444441101785`*^9}},
 CellLabel->
  "Out[777]=",ExpressionUUID->"2cdc1ec6-1231-4bf4-85b8-32b9787b7604"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "We", " ", "calculate", " ", "the", " ", "maximum", " ", "and", " ", 
    "minimum", " ", "values", " ", "of", " ", "the", " ", "error", " ", "for",
     " ", "the", " ", "first", " ", "and", " ", "second", " ", 
    "derivatives"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"error21", "=", 
     RowBox[{"numderv1", "-", "derv1num"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"errormin21", " ", "=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{"Abs", "[", "error21", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"errormax21", " ", "=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{"Abs", "[", "error21", "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"error22", "=", 
     RowBox[{"numderv2", "-", "derv2num"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"errormin22", " ", "=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{"Abs", "[", "error22", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"errormax22", " ", "=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{"Abs", "[", "error22", "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"error21", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", "Orange"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"error22", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", "Orange"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.829544007524415*^9, 3.8295440083699226`*^9}, {
  3.8295440400631104`*^9, 3.8295440708610463`*^9}, {3.8295442257555385`*^9, 
  3.8295442438995085`*^9}},
 CellLabel->
  "In[760]:=",ExpressionUUID->"f9a9d59f-c006-43e7-9759-98a263a3578d"],

Cell[BoxData["3.7470027081099033`*^-16"], "Output",
 CellChangeTimes->{3.8295441422954597`*^9, 3.829544195664221*^9, 
  3.829544245743281*^9, 3.829544330311814*^9, 3.8295444231766667`*^9},
 CellLabel->
  "Out[761]=",ExpressionUUID->"872ba2dc-81be-405f-a846-676fbfb9420f"],

Cell[BoxData["5.1109227960921544`*^-11"], "Output",
 CellChangeTimes->{3.8295441422954597`*^9, 3.829544195664221*^9, 
  3.829544245743281*^9, 3.829544330311814*^9, 3.8295444231836853`*^9},
 CellLabel->
  "Out[762]=",ExpressionUUID->"144811b8-440a-484f-82f0-9c8fffaf3cd3"],

Cell[BoxData["4.416245147353948`*^-11"], "Output",
 CellChangeTimes->{3.8295441422954597`*^9, 3.829544195664221*^9, 
  3.829544245743281*^9, 3.829544330311814*^9, 3.829544423188668*^9},
 CellLabel->
  "Out[764]=",ExpressionUUID->"2c9262e1-7cc1-44e2-b8f1-30832b852a34"],

Cell[BoxData["6.270899505222971`*^-8"], "Output",
 CellChangeTimes->{3.8295441422954597`*^9, 3.829544195664221*^9, 
  3.829544245743281*^9, 3.829544330311814*^9, 3.8295444231956167`*^9},
 CellLabel->
  "Out[765]=",ExpressionUUID->"d0ed4e31-fbd1-4eaf-80b0-b2e0bb6f4c43"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.011000000000000001`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV0k9Ik3EYB/A3WRMRlyA7KIYOy8Q0/8xK831qypoedpgmJh7CtCURYkQi
COKg3ToURXVQQsjDENlRpN5n4pSslBIEnVKWOlPL2g4micHUnu976AcvLx9+
f58/lub2WnecoijWg+/w31rRbHaN/bqkHI6Am2N19hRTO1znpKMjMVP4y0/x
PTs97Yn5x8vhiRpuy6Pjmfe3xLZ6GnQ2bHQN/xC7avlTgd/XMvddHD1Hvu3n
vZ2rm+K/l+nUS/PZ60sb4rwaDgasvvnJdax30nR5z80X/d/EXgeHEleeeW+t
iYMlFOiq9t7ICotDe9q1xg5D1scV8YMiSu+8M+9vWxYXOfjfX/mK96qkLNlP
nzF9Fjed4Jk0o2U3flHsMbE6+yHDE5kTZyaza7PgfOTNrPhtIT00PhnrfjSD
eIv5d0Pl0ELfe+w3U8cVX2uicQJOoNtX1d6m4CuxEtKS3kWqJ6cG4T1N+W8Y
CPOj+jz2iz1RFedjPqzhfrEtlfE+cX8O4f3iqEWPD+v/qIgf561ryA/uO0bI
H9bnM/IrphJC/sWGbEZ9cN5rFfUTPz7JqK94sZhQf7HjIqM/xDs2vX/E6Va9
vxBfLqP/EF8loT/FpVWM/hVvVej9Le4r0/tfPGDju6sZ20fW4Atu2gdFTBRf

       "]], 
      LineBox[{{-0.9661853702924167, 
       6.032951915813101*^-13}, {-0.9781476007338057, \
-4.840572387365683*^-13}, {-0.9820453420186182, -6.179501355063621*^-13}}], 
      LineBox[{{0.9986783292813125, 6.032951915813101*^-13}, {
       0.9986463709726418, -6.179501355063621*^-13}}], 
      LineBox[{{0.9936078297217865, -6.179501355063621*^-13}, {
       0.9899515671358392, 6.032951915813101*^-13}}], 
      LineBox[{{0.9765168659973147, 6.032951915813101*^-13}, {
       0.9685087936306175, -6.179501355063621*^-13}}], 
      LineBox[{{-0.9886185906055771, -6.179501355063621*^-13}, \
{-0.9944792722291924, 6.032951915813101*^-13}}], 
      LineBox[{{-0.9986364161936624, 
       6.032951915813101*^-13}, {-0.9986890010008693, \
-6.179501355063621*^-13}}]}}, 
    {RGBColor[1, 0.5, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
     1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[7]], CompressedData["
1:eJxV019IU1EcB/CbrVUIS0qhYqKilZQ1nfYP78+W2NzDHtSsJCK0UiscLrAW
g3DQnupllNXDJIR6GBJ7jKgdh9O0P1bCQKeklS3dStseRqwcLPP7uw9duBc+
/M459/x+53cKznU2tK6VJIlW3jUrb4akPPEj/76prWOknd+89DIRW7Wj9JoY
aU/25AVhqcoqzoR1PUVujkdt5JDs+pSZ438slO031c5EfsLvrgjpRM0WTSe7
0UyqZ2lN+NMS3FVDPd1p71Ale7hedJRQbv7NRdhwkvrNTRH70x9wXYP4qPN6
zk98h+MHyJN44LZ9jcKpY1T8KGd/y2wELqkXgYFyz+ToAo8301hld9vDvnnY
aRShzLn7zkvf4EAFDdhNzguFYTi07Dt7+qqq8MMcfLuMtDbrpNfyBS4zCtTv
M+9XJmm2Zs8+zQzcXCTGt6sLfq+fhh0aIQff5zliE3B+lqiL6g7GRoLwq1Jy
qe8O3nCNc756kWyqfjLV+4bn59D14572TPUweyNZT8nu5sBzWAr5pNcx0+jb
fvayT/rvUVEW4n4lfhHzYUdc7sL6HA/7Evg/bNgmeH9wXzHx/uF4gZIfj0/K
nD+vt+Dj+vD/NhHXj8fvFVxfmCqI6w+rdgo+H17vhcznB9/ZIfh84Wk98fnD
xiqxC/0B/zIo/QNry5X+4vx2C+4/zq+aLOhP+FCtuIf+hReP0jr0N9x7WKQb
V/sffmwQfD/8aIc25f4gvqFFuV+wq0O5f/CtVsrF/cT8qctcv/iqM7IHxV+t
Nkz5
      "]]}, {
     {RGBColor[1, 0.5, 0], PointSize[0.011000000000000001`], 
      AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[1, 0.5, 0], PointSize[0.011000000000000001`], 
      AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.}, {-6.179501355063621*^-13, 6.032951915813101*^-13}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8295441422954597`*^9, 3.829544195664221*^9, 
  3.829544245743281*^9, 3.829544330311814*^9, 3.8295444232654314`*^9},
 CellLabel->
  "Out[766]=",ExpressionUUID->"c1a7cbb1-596b-425d-a1e3-ddcfd76afbb8"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.011000000000000001`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw102tIU1EcAPCL6KRG+9JLeip+6EPWoNGL7awIy0EKVkYjLOarh7Hch0QY
pDeSGAQl9LIcMqoPQ2RFH8Ie5/qKvO6Ra6tN2zOdui1tQg96GMv9z/4HLvf+
OPec+z////8W1TYdbcjhOG7X0pW5ywYPVXCq1L6lR37bpnxhVb+mLBT/Cra8
WK5OV5WulDUxr1fmCXl9aVksMp8xd3xNmtxpS9uGlcwPIz+pvoRsLLw6B279
u0B6yrVx4/Mv4AclCRqU26x1viS44NQUsX6/19UylWA2R+mWR6t31oTj4HhD
hAwJCqt/ZBZsDYSoU9l2ptsyw5wMkHHp5N3289Ngy40JKhg17fXFMbDuoo+c
PtmcWzw2CY4OeOmGFoPfpv8M7pj3EA5GFPzriYdy4dKt22UhMP/sPXGvkxT9
zv8ENsndVOV9t5lP+cCG+y5SmZDvTr31svd1TnpTcmvwcocb/HSvk/zQHuid
MNvBncMO2nzMelYqeQMubLWTCydUXbqhl+A9VaN0xWhKM+LoYfv3idn4skMv
4nx/htrDIq4HV5aJuD/YcE3E74PHX4kYH3iAFzF+8EKFiOdj82ERzw+OrrVj
fsC8yYH5YzY7Mb9s/TIX5h/c+c+F9QHvr3Nj/cC6Ag/WFxy87cX6gx/HPmB/
gHuTH7F/wKZGP/YX2J0TwP4DC7NR7E9w4+I09i+Ld2yOZvsbfOXIN5Ltf+aD
f2j2/8iYD9Zwap4z7lgsT8G84lyu0F39WiG5DuZnLknV/wFqCF2q
       "]], 
      LineBox[{{0.9955142560188336, 7.990934580703879*^-10}, {
       0.9952645724620011, -6.728189116955718*^-10}}], 
      LineBox[{{0.9902188836540051, -6.728189116955718*^-10}, {
       0.988772237084474, 7.990934580703879*^-10}}], 
      LineBox[{{0.9840236002916078, 7.990934580703879*^-10}, {
       0.9791323730937321, -6.728189116955718*^-10}}], 
      LineBox[{{-0.9882721119334611, 
       7.990934580703879*^-10}, {-0.9906462447989517, \
-6.728189116955718*^-10}}], 
      LineBox[{{-0.9951913567087418, -6.728189116955718*^-10}, \
{-0.9956014530634449, 7.990934580703879*^-10}}]}}, 
    {RGBColor[1, 0.5, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
     1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[7]], CompressedData["
1:eJxN039IU0EcAPDLdFHCsOyHlKJiUJQ0SMxi3ivC0MjCataIjJnazFruj8oQ
0hdJ+FcIrrJmMSpiiGj1R1hxz6WlzzlzbfmrOV06dS5toySsjOX7Xgcd3B8f
7t29u++PxNOlR4qWIoTw4lyyOMMQG8HdCFkOqfr0XOzkqtl3c4FFox3ttSqu
QztviHeC1fefpQonvQrDRiM4mHcsgeNR+faFbLCm9EmUsLo1K9Pt+yqZN71c
waHcjGh5KfUGZYQQ3hKSe0dnJaPctSFsqAw1tSupH47+IOeTcVzC9Rlwxe8g
bshW+8pffAHfS54mw4omc0G/HxyTN47Nc3eMZePT1PUesvnRmtT8ER/YVzSK
24QU80DnFNjschObsvLMA9Mktd+FByPHblednQCbbg4RoTyrqjDJC9Zc6Men
TlwKT+odA3ssThJbph9o0n0G18w6MI2fBzzf7CBoJGPrNrkbzD//gO3rZYk/
l30CVyvsJN35Pp4P9IP1d3twzrQiLdDhpN9rbKRGVvvmao0d/HSXDc+r9zYO
1VvBde3d5MpRszZS9hacUGHF+uPpRk3bK/BOVRdBXYGszu4Gen6LiNH/QyeS
KLreKlF9QMTFdD84J1MkF+n5YP0NEc/R/4MHX4vsfmALL7L7g4MHRfY+uj4i
sveDPeusLD5gvrqbxY+63sbiS/cv72HxB9f96WH5Ae8psLP8gTUxDpZf8LDB
yfIPfuz9SDbR+gA3+vtY/YCrSwZYfYHtYS5Wf2BhykN0tD7BJQsT+BatX3rf
3hkSQesbfO3wdxxSQf1T7/tF/vWHZH44H7H+gfWU4nDWX5JNad+iWf9JtmjP
bRHiaH+COfl+jsYvKFm38nIh9xfpPYkK
      "]]}, {
     {RGBColor[1, 0.5, 0], PointSize[0.011000000000000001`], 
      AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[1, 0.5, 0], PointSize[0.011000000000000001`], 
      AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.}, {-6.728189116955718*^-10, 7.990934580703879*^-10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8295441422954597`*^9, 3.829544195664221*^9, 
  3.829544245743281*^9, 3.829544330311814*^9, 3.8295444233315105`*^9},
 CellLabel->
  "Out[767]=",ExpressionUUID->"eb12d5c2-2b74-4d6b-a81b-b6c47de6c1b7"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["9.3 Chebyshev Series and FFT",
 FontWeight->"Bold"]], "Section",
 CellChangeTimes->{{3.829544454073696*^9, 
  3.829544469480507*^9}},ExpressionUUID->"819aef57-13c7-42ae-9c9a-\
4feea333a006"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["a) Modify the program \
(Spectral-example-trefethen-pag81-p18.nb), written in Mathematica, that \
computes the first derivative, using the algorithm for spectral Chebyshev \
differentiation defined as a Module",
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0.5, 0]]], "Subsection",
 CellChangeTimes->{{3.8295553758571777`*^9, 
  3.8295554627672176`*^9}},ExpressionUUID->"ac9bcb76-cc47-43c0-86f2-\
3ad06c7454e2"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["N = 60",
 FontWeight->"Bold",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Subsubsection",
 CellChangeTimes->{{3.8295556159215207`*^9, 
  3.829555619157771*^9}},ExpressionUUID->"4d6c4198-cb8c-43cb-9b22-\
1578274957c2"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NN", "=", "60"}], ";", 
  RowBox[{"h", "=", 
   RowBox[{"Pi", "/", "NN"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"h", "*", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "NN"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u0", "[", "y_", "]"}], ":=", 
   RowBox[{"Exp", " ", "[", 
    RowBox[{
     RowBox[{"Sin", "[", "y", "]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Cos", "[", "y", "]"}], ")"}], "^", "2"}]}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v", " ", "=", " ", 
    RowBox[{"u0", "[", "x", "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Generate", " ", "a", " ", "table", " ", "with", " ", "the", " ", "NN", 
    " ", "values"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"derv1", "[", "y_", "]"}], "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"u0", "[", "y", "]"}], ",", "y"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"derv2", "[", "y_", "]"}], "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"u0", "[", "y", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d1v", " ", "=", " ", 
    RowBox[{"derv1", "[", "x", "]"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Generate", " ", "a", " ", "table", " ", "with", " ", "the", " ", "NN", 
    " ", "values"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d2v", " ", "=", " ", 
    RowBox[{"derv2", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Plot", " ", "of", " ", "the", " ", "original", " ", "function", " ", 
    "and", " ", "the", " ", "first", " ", "and", " ", "second", " ", 
    "derivatives"}], "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"v", "[", "y", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", " ", "\"\<Original function N = 60\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Exact Original function\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"derv1", "[", "y", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "  ", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<First derivative N = 60\>\""}],
      ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Exact First derivative\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"derv2", "[", "y", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "  ", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", " ", "\"\<Second derivative N = 60\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Exact Second derivative\>\"", "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.829555532491938*^9, {3.829555638110569*^9, 3.8295558487562075`*^9}},
 CellLabel->
  "In[778]:=",ExpressionUUID->"f21713e9-2598-474f-8618-f1a8a3b28a97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChebyshevDer", "[", 
   RowBox[{"v_", ",", "x_", ",", "NN_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "u", ",", "w", ",", "datav", ",", "datavhat", ",", "dataw", ",", "vect", 
      ",", "vect1", ",", "vect2", ",", "what", ",", "suma0", ",", "suma1"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"u", "=", " ", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"2", " ", "NN"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<=", 
        RowBox[{"NN", "-", "1"}]}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", "NN"}], " ", "-", "j", "+", "1"}], "]"}], "]"}], "=", 
        " ", 
        RowBox[{"v", "[", 
         RowBox[{"[", 
          RowBox[{"j", "+", "1"}], "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"w", " ", "=", " ", 
      RowBox[{"Drop", "[", 
       RowBox[{"u", ",", 
        RowBox[{"NN", "+", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"datav", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"v", ",", "w"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"datavhat", "=", 
      RowBox[{"Re", "[", 
       RowBox[{"Fourier", "[", 
        RowBox[{"datav", ",", 
         RowBox[{"FourierParameters", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vect1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"j", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", " ", 
          RowBox[{"NN", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vect2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"j", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{
           RowBox[{"-", "NN"}], "+", "1"}], ",", " ", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vect", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"vect1", ",", "0.0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vect", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Append", "[", 
        RowBox[{"vect", ",", "vect2"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"what", "=", 
      RowBox[{"I", "*", "vect", "*", "datavhat"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dataw", "=", 
      RowBox[{"Re", "[", 
       RowBox[{"InverseFourier", "[", 
        RowBox[{"what", ",", 
         RowBox[{"FourierParameters", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"w", "=", " ", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"NN", "+", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "2"}], ",", 
       RowBox[{"j", "<=", "NN"}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{
        RowBox[{"w", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "=", " ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"dataw", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], "/", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "^", "2"}]}], "]"}]}]}]}], "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"suma0", "=", "0."}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<=", 
        RowBox[{"NN", "-", "1"}]}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{"suma0", "=", " ", 
        RowBox[{"suma0", "+", 
         RowBox[{
          RowBox[{"j", "^", "2"}], " ", 
          RowBox[{"datavhat", "[", 
           RowBox[{"[", 
            RowBox[{"j", "+", "1"}], "]"}], "]"}]}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"suma0", " ", "=", " ", 
      RowBox[{"suma0", " ", "+", " ", 
       RowBox[{"0.5", " ", 
        RowBox[{"NN", "^", "2"}], " ", 
        RowBox[{"datavhat", "[", 
         RowBox[{"[", 
          RowBox[{"NN", "+", "1"}], "]"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"w", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "=", 
      RowBox[{"suma0", "/", "NN"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"suma1", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<=", 
        RowBox[{"NN", "-", "1"}]}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{"suma1", "=", " ", 
        RowBox[{"suma1", "+", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"j", "+", "1"}], ")"}]}], " ", 
          RowBox[{"j", "^", "2"}], " ", 
          RowBox[{"datavhat", "[", 
           RowBox[{"[", 
            RowBox[{"j", "+", "1"}], "]"}], "]"}]}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"suma1", " ", "=", " ", 
      RowBox[{"suma1", " ", "+", 
       RowBox[{"0.5", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"NN", "+", "1"}], ")"}]}], " ", 
        RowBox[{"NN", "^", "2"}], " ", 
        RowBox[{"datavhat", "[", 
         RowBox[{"[", 
          RowBox[{"NN", "+", "1"}], "]"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"w", "[", 
       RowBox[{"[", 
        RowBox[{"NN", "+", "1"}], "]"}], "]"}], "=", " ", 
      RowBox[{"suma1", "/", "NN"}]}], ";", "\[IndentingNewLine]", "w"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[790]:=",ExpressionUUID->"96f0bce2-1376-47a2-9a09-1a34158c3bb6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Du", "=", 
   RowBox[{"ChebyshevDer", "[", 
    RowBox[{"v", ",", "x", ",", "NN"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DerivDu", "=", 
    RowBox[{"ChebyshevDer", "[", 
     RowBox[{"Du", ",", "x", ",", "NN"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Plot", " ", "of", " ", "the", " ", "approximated", " ", "solution", " ", 
    "of", " ", "the", " ", "original", " ", "function", " ", "and", " ", 
    "the", " ", "first", " ", "and", " ", "second", " ", "derivatives"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot4", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
         RowBox[{"v", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", "Purple"}], ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", " ", "\"\<Original function N = 60\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Approx Original function\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot5", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
         RowBox[{"d1v", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", "Red"}], ",", " ", 
     RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<First derivative N = 60\>\""}],
      ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Approx First derivative \>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot6", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
         RowBox[{"d2v", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", "Red"}], ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", " ", "\"\<Second derivative N = 60\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Approx Second derivative\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot7", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", 
         RowBox[{"Du", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Dashed"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot8", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", 
         RowBox[{"DerivDu", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", " ", 
     RowBox[{"Joined", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Dashed"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.8295555493868523`*^9, {3.8295558747801685`*^9, 3.8295558960370445`*^9}, {
   3.829556164565813*^9, 3.829556262728442*^9}, {3.8295562967886553`*^9, 
   3.8295564101181803`*^9}, {3.8295567326744785`*^9, 3.829556734755791*^9}},
 CellLabel->
  "In[809]:=",ExpressionUUID->"983e9211-1b33-417b-814a-2412ca745ce6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "We", " ", "compare", " ", "now", " ", "the", " ", "exact", " ", 
    "solution", " ", "and", " ", "the", " ", "approximated", " ", "one"}], 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"Plot1", ",", "Plot4"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"Plot2", ",", "Plot5", ",", "Plot7"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"Plot3", ",", "Plot6", ",", " ", "Plot8"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.829556413356493*^9, 3.829556458672868*^9}},
 CellLabel->
  "In[816]:=",ExpressionUUID->"30555af0-5c45-498f-bdb8-a3a18b711bb9"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1:eJxVk2tIk1EYx6epqyb74KXCMg01S5dLJcJmPmFaZmOZWYmXzKxGWizLW6I5
m80IISO1wBVJUqPS0EzU0oPOZiVWZnm/zbZ379S52d5tipoVdT70wOF8OJxz
nuf///03nRJEnrGk0Wi7f68/+9/Sg6GwzakwjQJnwk77ltKBax6vdyKLAjl/
rsSlRwfJzfQo/XUK4pTsEvdyHSRldi9JyikQ0rL9Frk6SKionGtvpMARhe0f
IWdgj0f8qPc4BctRIfZMwQx0LYxXX2Iawbphmakc08LKmu7tjBAjlOYtV8s4
Wmi42s3aKjTCBdZuZ1fRNMzLfTi1rUZ4yo0ms+unwDNfFrqNboJhdrU0qXcS
gnhZZ17yTCCl7pZnftfAPq+DMcpSE2x55LgjcZSEMbsZgWLABG0t/tK+DjV4
fdSujlxrhi5O3tkHDwkImbLyTA83Qz9joqzgnApO9ry9FiwwQ0t2WMFpNyVE
+ysGJPlmOBGTbuX2aQLkfhaHSnLN4Jx5sa/6ggKOqzzcXiWY4a9+47CcUSWK
9TCDxWiItw9zBNQOlRGWXSbodrLZNE8fhAAXxrb8YyYI7PnoItT1QucumsxH
ZoQIDXunTt4DDj9VoWOORii2udOaW/wZFllvbr2JpMAUHfx8QPIBSLr2ycJV
A6QfkfIZNu0glnoLrzz8AeePB5afbGuCD1LFS27zLDDf68I6Op9Cmk3Ahtgh
PdD+Kz0+R4dFKc/LEmbwfVT6TSFpGp7G7yOGQaJtyJnC/yMnzopGy72TuD9U
tPj6fqKvBvePDhQl1XDCSDwfUtYls4fEajw/cqm7Ka6ZIrA+qHXfZbI4jcD6
oRepMeLBjQTWF1FH949XqFVYf/Rk/UWtvFOF/UFrnKxFq96psH9Im57IXzeg
wv6ir/1trg8WVNh/ZGjiUVwWgflANV61g5N8AvODOqzIm/HPCMwXEoaOBNQb
CMwfinlvjg8MUmM+kZ7cXJVxQ435RbOcose+n9WYb5SSlREgsicx/+gFyU7t
jCBxPtDYpO3ZWjGJ84Mqv4zS3OtInC9023bpSHg/ifOHdsTd4xf+IHE+kaev
4zGBpeaffnq0kxGeI6Nr4BdjpPmS
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.011000000000000001`], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0.5, 0, 0.5]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxVk30s1HEcx4/kqmv3B6mmhCGFXFhrOvVp5SmZhDAPIXFLtevBUyZOV6eZ
LS3U5jIty00e5qEmyXccJ4xIeczD6e53v6NzV/e7uxqSrb5/9Nk+f333/X4/
n/f79ba9wA1J2kCj0Y6ut9F6G9NwaUCb32mZn0qBFWGm6qbUYJMbNDqfSYGE
87PYekQNKe/oYZp7FMTIWMX2ZWpIzBheFZZRwKNlua8EqiHuWeXPrjcUWCB/
v2lyCY47xM44z1GwFuZtzuQuwcDyXN0Npg42tqwxZbMq2NQwfJDhrYOS3LU6
MVsFLTnDLvt5OrjqctTKhv8Nfklc2Y0dOqgOjCSzXi+CY57Y5wBdD19YdaLE
0QU4FpSZ1BSkBxH1uCzjqxJ8nU5HyUr0sO+5xaGEGRJmzZa40gk9dLZ7iMZ6
FOA0qNoSssMAA+zc5PIKArwXTRzTAgwwzpgvvXtJDvEj3XdOcA3QnuV/96Kd
DCI9pBPCPAOcj0ozsfswDxJ3ozPFtw1glXFtrO6qFCLkDnav4gzwV785WEuv
5Uc7GMBoxtvZlTkNim2VwcYDehi2NLX9RZ8ET2vGgbxwPXiNDFrz1KPQf4Qm
dhXrIFjJOqyWjMC233KfWQsdFJk+6rhdNAQrLm0P2kIo0EeeqJkQ9gFJV1Ut
52ghLVTEYZh2gUDkzLtV8QOuRHiVxXe2Qp9I2hT47jswe9X+Pf3VkGrquTt6
SgO0/0qDz9FZ/uWa0rglfB+VfJYKW798w+8jhlaoaslexP8jS/aGN8YnF/B8
qHDl7dMENyWeH50qTGxg+5N4PyRrTmFNCRR4f2TdXCBoWCSwPqjD9yZZlEpg
/VD99SjB5B4C64uoc35zzxRyrD+q2nVNJemXY3/QdsuN/M3v5dg/pEpL4Oyc
kGN/0afxTpvyZTn2H2lbg6hAFwLzgRqcGicXOATmB/WYkAWxLwnMF+L5THu+
1hKYPxTVa4j1OqbAfCINubc2/b4C84u+swtfuA0pMN/ocma6J9+cxPyjepJ1
vT+YxPlAswtbkxsFJM4Pqvw4Q7NvJnG+0MOtq6EB4yTOHzoU84ST/4PE+USO
bhbhXGPlP/006DAjIFtMV8IfcwD5lA==
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Original function N = 60\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact Original function\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx Original function\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 7}, {20, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8295567060594587`*^9, 3.8295567399005623`*^9},
 CellLabel->
  "Out[816]=",ExpressionUUID->"d9e6101b-b7e7-4f81-8bf1-1bba0ccb9157"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
8E0/Gf0fMpUh9g==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$46772#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxVk2tI01EYxmfUCoSV1bpYY5plavNOF3X2pmZqSUkXWpkj87Kyht3MmoVC
0o0Uyxs2byXZmiJkuqTMt9K0LDU3my63ede/mftPGpZoWpHnQy8czofDOed9
n+f3WB+L3Rs1h8FgeP9Zf/d/ZYRtvi7d1zUUcgYXj7410ZB/KyjFsZ3CetHP
DK6KhuR2RqZfC4VH+p0z1kppUFYIGzchhUkMidtUMA0XU85bKR5QyMbAAB1l
gGiOlFV6jsKZ/duXsGINkPP4dp6XA4XzqmZY/V2jwL3kNtJQPYSZiTNltV6j
YJ3tKlpoNYRinjfH6uo36C5QS6IDBlEeLKAkihEQeD7lc9cNoNa5TBah/go6
pvI4r6QPZaZsaXzfMIAhxGT+sQftitgbw/UUCHawqmd+6PFNjbusvWEIxm1V
/DVRGmzySozOLxwEs2rHnLQOJXaY92YlnxgA4QVrReOTeqyRBCZH2vTD5d1B
y31HHqHwcNxcm5ZekBxqaw6FKuDEn24vE/eAzM8j19OmBf7p1w3GF87XTnpo
wEy/fYMTSwdRZXO3TB7ogVZLpvXE/C+QU7rUxKgbAL6qmZtEq2FblSrz7LNh
CBl23kzXq8CBKbCvZY5CGjP99ZW0TxAT5pTteJeGcYFvqSa3ESwVwkX+RUaI
2ycTmTPrIDUwm++zcAxOHeRLj755DsvyINXMYgxY7+nAhg9yuLU+/5xFuREY
/5WRnGNWAU/pyjaQ+8itsP0uqhsh7+NDnouhmDdM/sd7408rhCcGSX9YGerq
FXGnj/SP92/4Vz1WdJP5kFPTEOzS1EnmR3HMtFZ4QE30QT+/iNTqxa1EPww5
ZRkgWPWO6IueW9t+8Z1ewqz+yGRe701PLIZZfzBCLrYz2GcR/7DyxZT4vF0l
8RfpSf6Zwvevif/YuWP1Ivmxd4QPTIiU2qSENRN+cEI7JvuhbSV84Ya9ef5y
fhvhDy/6BLgr9qgJn7h2eqKEvbKD8IueK1K+qXI1hG8MjTFp9F1fCP9Y3iX8
+Gqok+QDpZIFVjufa0l+0BB9c6N7mI7kC/XmU7vws47kD9k+dxJEdnqSTyz3
VyalC/Q46yvOYU2HRx7X42+JFfp7
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.011000000000000001`], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxVk2dMk1EUhoujmpDUWQfaFASVUZYEB1SPgAgqUYISq0gjMipo415VA4nE
FSEoK1iWErEUQiKjEkWOClJFBWmxUGnLph8i/UpsUCKCJnJ/eJLz6+bee877
Pq/dkRNhsTMZDMbmv231t2cwSJlhq79H9w0thZzBhSNvLDTk396R4tpOYaPo
ZwZXTUNyOyMzoIXCQ/3uGQ5SGlRVwqb1SGESQ7JuIoSGiylnbRUPKWRjcJCe
MkEcR8oqO0Ph1L5ti1gnTJBTcifP15nC2TVTrP6uEeBeWjesrDViZuJUeb3v
CNhle4rm2RpRzNvMsb32DboLNJK4oEGUhwgoiWIYBD6VfO7qAdS5l8uiNV9B
z1Qd5ZX2ocySLb3QNwRgCrVYf+hBxyK2d5SBAsF2Vu3UDwO+rvOStSuNMLZG
zV8Vq8WPvolx+YWDYFXrmpPWocIO696s5PgBEJ63UzQ9acQ6SXByjH0/XNm9
Y6n/8GMUHjw3y76lFyQH2pojoAY4F062l4t7QBawKdfHvgX+6dcN5ufu149t
0oKVYZuLG0sPseWzNv4K74FWG6bd+JwvkFO22MJoGAC+upmbRGtga4068/TT
IQgdct9AN6rBmSlwqmeOQBoz/dXVtE+QEOmW7XqPhjGBf5k2twlsFML5gUVm
OLdXJrJmNkBqcDbfb94oHN/Plx5+/QyW5EGq1YJRYL2jg5Xv5XB7bf6ZBRVm
YPxXZnKOWQU8lSfbRO4jt2rNd1HDMHkfH/E8TMW8IfI/3h+rrBLGD5L5sDrC
0zf6bh+ZHx/cDKwpUXST/ZBTpwzx+NhJ9kdxwqROGK4h+mBAQHRq7cJWoh+G
HrcJEqx4S/RFny1tv/luL2Baf2Qyb/SmJxbDtD8YLRc7mpyyiH9Y/XxCfNax
mviL9C/+qcJ3r4j/2Ll95Xz5kbeED7wcI7VPiWwm/OC4blT2Q9dK+EKXsLxA
Ob+N8IcX/YK8FHs0hE90mBwvZS/vIPyiz7KUb+pcLeEbIxIsWkPXF8I/VnQJ
P7w0dpJ8oFQy13bnMx3JD5ribnl7RepJvtBgPbELP+tJ/pDtd/eyyNFA8okV
gaqkdIEBp33FGazJqJijBvwDmHH6fQ==
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJw1k3tI01EUx2fYioxpD6lMUbNSa74a9nCzg5Y608heNDJHOW1ajh4mxiKU
XlakaGZSU5OMWib2sjVsdUpN03yks+nUrfncz3Sb0sgk0wp3L1zuH4d77znf
7+frGntiT/wcGo0W+G//P2fXGOSwfHUZagqdhhYbPppNoLwcnunVQWGt8Nct
Z6UJFB20vG0tFB4a8Lm1WmKC2gp+w0akMJ0m3jAVaQJW1hkX2X0K7ZEbpqGM
oHWUMMqSKZzZt30J44QRSh7fKGSvo3CufIYx8M0AXWc3jNQp9JiXNlNezTaA
KN9PaOuiRxEz0Mnl4ij4F6vER8OGsDSSR4llI3A94CXHec0g9viUSwWq71BE
b0tgPulHqTlfkto/DBpDlNmmsRc9Suz9j2gpeBbKUMxMaLHqHUvaUacHhruS
sypejU3stKNFxUMgUnjdye5sw06bvtuXEgchKcVV1vC8Ft+JuZfi3AbANjJ8
WfDII+QfTLF2a+mD1Qfbm6NBDk6pJzvKRb2gC9pSEODWArP66aDrjc+V41vU
YKXdvt6boYHRcuvNv/f3QqsD3XVyXhfwy5aaaTWDwFE2O6ebVBAsV+adfj0M
UcM+m0y1SrCi8zyr6QbIpud+OJ/9BQQx3vleN03wkxdcpi5oAE8Z3y6kZAxS
9kqFNvQakHLzOUG245B0gCM5XFUJ0wWQZbVoHBj1Jm7d51JIdi9KXvRiDIjD
DhafLXXMvcds87M3kvsYULH2h7BmhLyPGUxf40PmMPkfL/x8WcFPHCL9oTza
jy3I6Sf9Y+fVEPljmY7Mh0/f1kX6NnWT+VFxbLqHv19F9EGrbYIsxeJWoh9u
THII4638RPTFCmj/w/F+Cxb9ceucjL7ctIdg8Qd3PhB5GD1vE/8wUDElOuPx
iviL9VOcU8X1H4j/aBfqaFca+4nwgXqBxC0zppnwg5macelETyvhC5N2F4aU
ctoJfxgVHMaS7VIRPnHvn8kn9is6Cb8YvTxzVFmgJnxj9zGzWvuti/CPqTp+
43t9N8kHcsXzXXZU9pD84IL4a/6sGA3JF25aOBWBXzUkf3gXcs4JPbQkn8iO
aEvP5WnRkl9Mc5w+Epegxb9ypfvy
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Dashing[{Small, Small}]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.011000000000000001`], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0.5, 0, 0.5], 
                  Dashing[{Small, Small}]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJw1k3lM0mEYx6GDWja0w1WmU7NDC0+mlmDP8qSyZddimSxDQ03WYc5Ga7ou
q6XTvFaYuWxF5uwyYkU9HeZVaoqhqBCe/EwBXaxyedQW77s9f7173vd5vt/P
1/Xwsd0Js2k0WvC/ov+rWTRyxiCP7aPP0lDoNLTY+NFiBtXFrdmeHRTWin4X
OKvMoOygFYa2UHhwwLtgtdQMtdWCxgCkMJMm8ZuMMgM755SL/A6F9siL1FIm
0DlKmZWpFM7sDVvCPGaC8gfXbnHWUzhXMcMc+GaErtN+I3VKAxZmzFR94BhB
XOwrsnUxoJgV7ORyfhT8y9SSI5FDWBHFpyTyEbga9IzrvGYQe7yrZEL1dyhl
tCWyHvajzFIsTe8fBq0x2mLzuRfdy+3943QUPI5gKmd+6fD9G7aso84AzHUq
7qoEDTZxMo6Ulg2BWOl5I7ezDTtt+oouJA1CSpqrvPFJLb6R8C7Euw2AbdTW
ZSEj91FwIG2OW0sfrD7Q3hwDCnBKP95RJe4F/ZZNJUFuLfBfPz10vfK+dHST
Bui6sA1eTC2MVs3Z+GdfL7Q6MFwn5nWBoHKphVYzCFxVs3OmWQ0hClXhyRfD
ED3sHWiuVQGdwff4wDBCLiP/3dncLyCM9Sr2vG6Gn/yQSk1JI3jIBXbh5WOQ
tkcmsmHUgIxXzN1iOw4p+7nSQ+9fwnQJ5NAXjQOzwcyr+1QBqetKUxc9HQPi
sIPVZ+s95t9mtfnam0g/BlWv/SGqGSHvYxbLx3SPNUz+x3M/n1ULkobIfKiI
8eUI8/rJ/Nh5OVzxQK4n++Gj13VRPk3dZH9UJk/3CPapiT5IDxXmKBe3Ev0w
IMUhkr+ynuiL1dA+xfV6DVb9cfOsrL78jHtg9Qd33BW7mzyKiH8YrJwUn3J/
TvzFhknuibKGd8R/tItwtKs4XE/4QINQ6pYd20z4wWztuOxXTyvhC1N23Qqv
4LYT/jA6JJIt36kmfOKeqYmH9is6Cb8Yszx7VFWiIXxjd7JFo/vWRfjHdL3g
81tDN8kH8iTzXba97CH5wQUJV/zZsVqSLwxcOLkdv2pJ/vAm5J0RuetIPpGz
vS0zn69Da34xw3E6Lj5Rh38BggH79A==
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Dashing[{Small, Small}]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"First derivative N = 60\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact First derivative\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx First derivative \""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 7}, {20, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8295567060594587`*^9, 3.8295567400410156`*^9},
 CellLabel->
  "Out[817]=",ExpressionUUID->"47f2f584-88c3-468a-91c9-8c065bf4985b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$46832#1"]& ]}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxVk3tQzFEUxze1m4qVR2ZI2hQToabCUOZgol2iRhkbRkqphlUehTW0KnmT
kBmhlMZqV15NGY/OlR5T9JLZUiRbre25v2q3Vi1hXH84M3fuH3fuved8v5+v
XUjUxrAxLBZr+e/1Z/9bDAT1+/AYowq0UU3qKdFqQMTxaM27+xZLw/VXbes0
kH74uELHr8Ftbc5XHdI0UFXIca/f/QElLLGrwUcDZtHyWPnqRrRCvvdndS+Q
VyHCpL4WHA3wmsyN6gWB/zJZz712ZD8b5bZ96YEIZeTpSkEXXosbzX3j0QMz
s1+7zOpiUDR/uQ0voRtuPbA23ZqpxRwfoVqc3wW+0zOaLxA9fnLOle5UdMI0
QXbJoNsPlGqvpx1q7YCzPiHuCQyLOGZZLQpuVkNQPmtok58xKSp0k9aXfQOh
cnFFXjqbVHrE7bqdoYLssrCgr4WmpMFCmZoY2Q6dT2XnBGfMSKGYnxhq3wb3
OMrRpnpzsn1LjIl9tRIq3xvMLyZaEJtD0fW5oq/gJHdjPuy1IH/1awHuvo1Z
8RJzYtTs5bSQ+xlETuND5j8ZS2qnc+y+mzaCVWDAPFsuh3jWVdlKNArYuuvC
VJPHY4hfh/MSTWkdrI+ckCS+9AOTOVdeH0uugZwtLsYrrHQ4KFwl/3izAtad
4vECm9QY4y8Nt+AUQ1UGPFq9tAb3bPZM21H0HApGfNc0zqkEbrmGX/Y2B4wf
pr8wK2kD1n/F/DtHdsP2+2HRWqD3cR0o2AocAvo+uobHro8fNwz0f+yUdB+w
jxsB2h+esB4fPtfLALR/ZFnWyCOSDEDnw2qRruDsbgPQ+fF0eWva7EkGoPqg
o0nm+XmXR2h/LRgs0uUJ9MNA9UXmZu1jxm8YqP7oKvTMu5H+Hag/2HRgk8yz
XQ/UPySbo4ylPD1Qf9FI9MWlwncIqP/owItbWxA9CJQPbHgZOuNgvA4oP3gx
2Lr2yEktUL4wpXiYP3B0ACh/yB4U8J9H9gPlE7siZpvyAvqA8our+or2Ja9k
gPKNP/vnkpX7e4Hyj5JPxME9sRtoPvDdNql4Slkn0PxgeYEstNq7A2i+MKnf
Upg8UQ00f3jk1hJZ4IJvQPOJG1Kn5JM7Kqofgyk/G1Ul+1XwCywO9fw=
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.011000000000000001`], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJxVk3tQzFEUx3/ZdlOx8sgMSUtlEGoqDGUOJuxSasjYMFJ6Dqu8WUMryZsk
zKiUaKx25dWU8ehckabopWZLkWy1tuf+ym6tWmLG9Yczc/66c+895/v9fKeF
xqwL5zAMs+RPm/3pEcy/YiG4z1fAmpWhvWZcd7FeBxKeV0venXf4NtKY4lCj
g4xDx1QGYRVuaXVNcUrVQUUhz7NuRy3KGKm7yVcHlrHKA8oVDWiLwlWftT1A
XoaKE3ubcTjQZzw/pgdE6xcruu+2IffpML/1SzdEqaNPl4s68WrccO5rr26Y
mv3KbXoni5I5S+wFJ7og/b6dxeYsPeb4irXS/E7wn5zZdIEY8ZNrrny7qgMm
ibKL+z1+olx/PfVgSzuc9Q31PMEyZOZt2/khTVoIzmcGNgRwSFGhh7yu5BuI
1QvK8jK4pNwrLuJmpgayS8KDvxZakHpr9bWE6DboeKI4JzpjSQqlwoQwx1a4
y1MPN9ZZka2b9ps7Vqqh/IPJ6mKCNbE/GFuXK/kKLkoPtnaXNfmrXzPwd6+7
HS+zImZNPi7z+J9B4jI6dM7jkaR6Mm/aD4sGsA0KnO3A5xHvmgoHmU4FmyMu
TDR/NIIEtLsu1L2tAb/oMYnSSz8xiXfl1dGkKsjZ5MZZamvAfvFy5ce0Mlhz
SiAIatTi/vXySGveG6jIhIcrFlXhzo3eqduKnkHBkP/KhhnlwC/VCUve5QDn
QcZzy+JWYP4r9t85cuu33guP1QO9j2tAxVXhAND30T3ygF/8qEGg/2OHrGuv
Y9wQ0PnwuN3oyFk+JqDzI2NTpYxKNAHdDyslhoKzO0xA98fTpS2pzuNMQPXB
meZZ52dfHqLzNWOIxJAnMg4C1RfZtOpHbMAgUP3RXeyddyPjB1B/sHHvBoV3
mxGof0g2xnDkAiNQf9FM8sWtzH8AqP/oJIhbXRDbD5QPrH8RNmVfvAEoP3gx
xK768Ek9UL4w+c2g8PuR70D5Q26/SPgsug8on9gZ5WwhCOwFyi8u7y3anbSM
Bco3/uqbRZbt6QHKP8o+ESfPhC6g+cD3W+TSCSUdQPODpQWKsMpV7UDzhYl9
NuKksVqg+cPD6QsVQXO/Ac0nrr02IZ/c0lD9WEz+1aAp3qOB3ztq9f4=
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJw1k31Qy3Ecx5eetDFC3XnYtYQroijyUD5yxSJnUtdUQqrpSAnJcEsmeUjz
7CzybGo63K4cd31+xeqaS6VuS0hWzdLDRlutNRfO1/fue98/Pvf9fj+f9/v1
dk9Ii0gaQ6PRgv7sv+e/ZYAPlsduBhslsrST+hRGPSgWDmjk999iNd982a1J
D87R2SoTpwHjOn0uz5Lo4Xivnb96dzNm0wSLrOF6MKU+yZSFtqILctZ+1vUD
tyyBl/ujHUcjQyYz0/rh1KblJX2PutD+xSiz80sf7GlLyasL68ErwtHS1yv6
oOJ6pe/MHgOmegex2Cd6YeXz6Y6xd41YHM7TCcp6YB/rdls+ZcZPPqXSnarv
cGbzA8Wg3y+UGq9JDnV0QxEnwf+EgUZ53nNZvKNNB+1y2lAU15aqqvCTqmu+
QalmiVJeZE/VrRAm37qtBUVN0ravFY5UC0NzVZTSBdqykrNhp52oCgFHlOjR
CVl2mtGPajoVH3PQzqNeAxffW+nnRQyKdShdXZr6FQqkfobmvQzqn37tsDAr
4l5ONp2yaQuZt4D5Gfw8xyd4Px9LNU5zcB92bAU6L3KuG9OBCmx655atV4Ez
P9/V7tkYitvtE6CvboJ6/oRcQcEvFDtcqjwmbgCvrb62q1xMOMhbLftQqATe
aTZ7y0cdHtws5TMc3sCmm/A0dFkD7okOlGyvegn9bO6a1jl1wKzVc2reFgPz
QdErJ0Un/Hc4jvhM6ni1Jf5xUroRyH0MAJW9CoeAvI9BKZkbcsZZgPyPMmHv
fg/hCJD+MHPqeL5XiBVI/+jp3CDblWsFMh/GpJvKz+y2ApkfM950SGZPsgLR
ByWMu+fmXhgh/bVjbKJJHma2ANEXI+43PjNwLUD0x/LIQPmNomEg/uDy/VEl
gV1mIP7hgtg0WynbDMRfdE394qvcOATEf8xzFa4rTx8EwgeKlYkzDuSYgPCD
3tHTGw+fNALhC4/WWjgDRwaA8IcRw2Gclyk/gfCJIt5sR3bkDyD8oi399T5x
sAEI35j8yYsKzugHwj8utVKz/EW9QPKBDzseCabUfAeSHyy0lyXWr+0Gki8c
OziRJ3bWAckfzjsfULJl/jcg+cT19awy6o6W6GfAAnWPVpGhhd86ePQS
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Dashing[{Small, Small}]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                EdgeForm[], 
                DiskBox[{0, 0}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.011000000000000001`], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0.5, 0, 0.5], 
                  Dashing[{Small, Small}]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}, Automatic, 
           Offset[7]], CompressedData["
1:eJw1k31Qy3Ecx5f1wKYR6o7sGuGKKIo8lA+uWB7OenCNPKaaTukBYbilJnlI
8+wM5SFG0+F25bjr8/OwuuZSqduoVFbN0sNGW62ZS3e+fe8+f33v8/1+Pu/3
6z0jNiUink6j0YJHym6kxtBGjxG+Wp94GO1UyNZN6lWaDKBc2K9VPPyIFQLL
VY96A7hEZ6rN3Frc3uF7dZbUAKd67AM0+xswkyZcZNtoAHPyswx5aCO6Infd
N30f8Epj+Tm/2nA4KmQyK6UPzoQvL+593IkOr4ZZHa29kNSSmFsd1o3XRMMl
71f0QvnNt34zu42Y7BPM5mT3wMqX7k4x9034dCNfLyzthjR2YUseZcFm3xLZ
XvVPOBdZpBzw/4sy0w3pkfYuKODGBmQbaZTXA9fFe1r00KagDW7h0al35f4y
TeUPKNEuUSkKHKjqFaKEu4U6UFbG7/pe7kR9YWqvixM7QVdafD7s7DiqXMgV
x3l2wFF77XCThkHt3HbY3rNGC5c/2xgXxUyKfSRVU5L8HfJl/saGA0zqv35t
sPBoxIOsTAZl1xIybwHrG/h7Ocf6vBxL1U1znDHk1AgMftRcD5YjFVT/ySPT
oAYXQZ6b/YsxFK/LN9BQUQ81ggk5wvy/KHG88vakpBa8d/jRV7macYC/Rv71
tgr4ZzmcrU16PBwpEzAdP0D4HXgeuqwWk6KDpLvfvYY+Dm9t45xqYFUZuJUf
nwKrqODNOGUHjDq8nfhM7vH6l51P4lNNQPoxENQOahwE8j4GJ2ZsyhpvBfI/
ykU9Bz1Ff4DMhxlTnQXeITYg86OXS618X44NyH64LdVcdm6/Dcj+mP6hXTp7
kg2IPihl3r8w99IfMl8bxsSZFWEWKxB9MeJh3QsjzwpEfyyLClLcKhgC4g8u
P7ilOKjTAsQ/XBCTQpdxLED8RbfkVj/V5kEg/mOum2h9WeoAED5QooqbfijL
DIQf9Il2rzt22gSELzxRZeX2H+8Hwh9GDIVxXyf+BsInivmznThRv4Dwi3TG
+zTJaiMQvjGh2Ztand4HhH9caqNmBYh7gOQDH7U/Fk6p/AkkP3jbQR5Xs64L
SL5w7MBEvsRFDyR/OO9iYPHW+T+A5BM31LBLqXs6op8R8zXdOmW6Dv4BSdT0
FA==
          "]]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Dashing[{Small, Small}]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Second derivative N = 60\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Exact Second derivative\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Approx Second derivative\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 7}, {20, 7}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 7}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "7", "]"}]}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8295567060594587`*^9, 3.829556740182071*^9},
 CellLabel->
  "Out[818]=",ExpressionUUID->"8caa465c-5b59-4a87-ba92-d45d11ed0d83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "We", " ", "calculate", " ", "the", " ", "maximum", " ", "and", " ", 
    "minimum", " ", "value", " ", "of", " ", "the", " ", "error"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"error31", "=", 
     RowBox[{"d1v", "-", "Du"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"errormin31", " ", "=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{"Abs", "[", "error31", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"errormax31", " ", "=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{"Abs", "[", "error31", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"error32", "=", 
     RowBox[{"DerivDu", "-", "d2v"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"errormin32", " ", "=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{"Abs", "[", "error32", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"errormax32", " ", "=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{"Abs", "[", "error32", "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"We", " ", "plot", " ", "the", " ", "error"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"error31", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Magenta"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"error32", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"NN", "+", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Small"}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", "Magenta"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.829555552448598*^9, {3.8295564708882275`*^9, 3.829556615184137*^9}, {
   3.82955664604552*^9, 3.8295566524720025`*^9}},
 CellLabel->
  "In[801]:=",ExpressionUUID->"b48c1508-7692-4282-8066-ce28465c19e7"],

Cell[BoxData["1.1102230246251565`*^-16"], "Output",
 CellChangeTimes->{3.8295567063806005`*^9},
 CellLabel->
  "Out[802]=",ExpressionUUID->"9856610b-1f64-40de-af1a-6745567bf472"],

Cell[BoxData["4.1722181265413383`*^-13"], "Output",
 CellChangeTimes->{3.8295567063877673`*^9},
 CellLabel->
  "Out[803]=",ExpressionUUID->"607f1f7e-1d96-475d-a1ec-2d4b24c6cef1"],

Cell[BoxData["4.107825191113079`*^-15"], "Output",
 CellChangeTimes->{3.8295567063937874`*^9},
 CellLabel->
  "Out[805]=",ExpressionUUID->"986f5873-67f5-4340-a0db-1bbf8fa95d6e"],

Cell[BoxData["2.9643565380155223`*^-10"], "Output",
 CellChangeTimes->{3.829556706398733*^9},
 CellLabel->
  "Out[806]=",ExpressionUUID->"b4747952-e482-4142-8371-04fec231185a"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[1, 0, 1], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJxV019I01EUB/Cb5bJGYxEiRLqJEULRoogedn4lIbQHi7AgiQgrS4LEXkQY
hYN86mmQ1cMiBr0MieFTSNyrZqFk/xnMNJ2/5qyZ6Yplbm1sJed7hX4wxodz
77nn3ntu9cX2xsslQgj3v9/q//Gs/0Ttp9QRsfo1OtRIa6bHEYFFns4lXD07
A9qT0ie8+/MNsLPCKB/0HJtOLiG+VRVP12+ztWtPUWl/0ZaYWWQPCXW3qxh+
7tZeb7TtMSqdt76z60qN3oampPfJAuZnacoVDl2KfoOFCv26H+icnWf7ylTt
o/KDF2JJxFdoeOBAaHz0KxylN+6uKw+DX7Bejj5a4/e6r86xgwU54PV0t9Qk
2H1pef5sx4aad3G2OScrO6+Ph9s+s+1bDM5rruVfF6vfvdc2jfx29WG7pTq7
cRLxAlHkrcOXisJBeXLedSg1EoHT5LfceXbT/x5+Tb+bjj6eeDAGL8mOU6FW
q+UFnJPXzlCgefgpnCHby5Rn9FXvmsV/3x+J+CC7nzAfXtD54UW9PpzU9cF9
un62Ly+xP8TzhP0jnpY4H/bQD9RnYvwY4XzZ9hV9/ux9BcL9sG9kJO4P+Ux9
v1gvp++fHcxK9Afb/CnRPxhfYqC/UE+ZQv/BVt2fbOdm3b+YH9f9za4TBvof
4zfp94H4sn4/7OYqhfeF/SwT3h/qr1C3D+/a4Z2FY1XGX6H9R9A=
       "]]}}, 
    {RGBColor[1, 0, 1], PointSize[0.011000000000000001`], AbsoluteThickness[
     1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 1]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[7]], CompressedData["
1:eJxV099Lk1EYB/CTP5Y1GrMSIVxO7CJImhTVheeQlNAuDKIfJGFhPyVI9KIw
RuEg/wChVReLGHQzJIZXIXGOmpWSWQmDWaL2tqbNbG4xxa2NLfH5nqIXXl4+
POd9znPOeU7VpfaTVwsZY2Lt3bD2FjD9JA6vf5rPq4r5rbE3y3Fy7VE10pry
VAZhluXNEYdnl1d7SrqZa1+2EbaXi+2DzmMz0SXESxU707DN0q49zYv685bI
lxh5iClPVz7wqk67UNyoETb7vZ/k+mLR29gUdT1fxP9pPu0I+C+HfsBM+Zcf
eTu/LZDdJWr307IDF2ejiK/y4YH9/snR73CIj9d1XXvim8d8Gf7JHH7YfX2O
7MvJAZez+0p1hNyXlBfO3Sqq/hgmG3OyorNjMtD2lWzdIiiv8Tc/m23Ys9cy
g/xWNbHDVJXeOIV4jvPgh0p3PAT75IkFx6H4SBBO8h7T/Zd3eybgcZ5qOvLs
8+MxeEnePuVvNZtewxnZcZZ7W4ZfwCnO3sado+96//m/57e0UnyQ3M/xP7wo
b1J+OKbnh6O6PrhP1092ZyXWh3iWY/2IJyX2hzyUQH0Gxo9xG+0v2bqq959c
m+M4H/KdlMT5IZ/B39P5Yr6MPn+yLy3RH2Tjl0T/YHyBQH+hnhKF/oPNoo36
k2zfrB5Q/+L/MC+m/ibXM5E/vd7/GL9JlNH9QHxF3x9yy06F+4X1rHDcP9Rf
rmx0P5HvIPovgfqOiz8jb0zv
      "]]}, {
     {RGBColor[1, 0, 1], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[1, 0, 1], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.}, {-2.781802566076408*^-14, 2.741556981433746*^-14}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8295567064829645`*^9},
 CellLabel->
  "Out[807]=",ExpressionUUID->"a6d8af8b-6e50-49e3-9429-ddba1def68bd"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[1, 0, 1], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQrXzoEWuhzHt7IJNhwdO6vaL7PdzvvngH5jOc8LX9
H+IizJcP5R/QsWXd8Z/vyf23EP4He9up9f/XHbaG8g9k2Obq2MoqNL+B8BuC
9q7yiXhRte01VL3H3jv661YkX3sF4d9J2bviy/TZ5Y9fQvgR8bYai0VNE++9
gPAFPGwP7TNecf34c6j5qnvPWtenzVvwDMJnENh7g/vRtJbMpxD+hfC9+6o8
WlKUn0D4CYG2cVGlLMrnH0HVy9rKlhdcX5f7EMK/EWMLEX8A4U/I2ct4z0Vb
j+8u1P+Rthel2BR/st+CyjvY2lw+J9/w/hrUPWZ7A17qm78/dhlqvoXtBLbJ
B2snXIDwFVz2fotwWnNzzikIv8Bgb2nwinRutiNQ9Tq2OeE2sxMO7YLw5wTZ
8p1873H89CoI/3XwXgYUIA6T3w/maijB9EP4DZ/2QM2H8CMcbKH2Q/gfjPdC
3QeTh7kfwl9gBPMfhB/gAvM/VH0ILHwg/DOxsPCD8LmS9kLDF8LviIWFP4T/
wBsWPxD+AWVY/EH4Bd620PiF8Bm+2kDjH8K3St4LTR8Qfl62LTT9QPhHUmDp
C+qfYFto+oO63wuWPiH89IK90PQL4R+ugKVvCH9G2l5o+ofwt+XbdudOY5+w
E8IH5RcAUtgc0A==
       "]], 
      LineBox[{{-0.9801588111701612, 
       1.766448098905471*^-12}, {-0.9876883405951378, 
       1.000310945187266*^-13}, {-0.9945218953682733, \
-4.352629368042926*^-13}, {-0.9946558018923088, 1.766448098905471*^-12}}], 
      LineBox[{{0.9947778396520041, 1.766448098905471*^-12}, {
       0.9946725699239533, -1.7562895582301508`*^-12}}], 
      LineBox[{{0.9919551654452043, -1.7562895582301508`*^-12}, {
       0.9901619034059564, 1.766448098905471*^-12}}], 
      LineBox[{{0.9831583780577556, 1.766448098905471*^-12}, {
       0.9798742852415258, -1.7562895582301508`*^-12}}], 
      LineBox[{{-0.9695721913509707, -1.7562895582301508`*^-12}, \
{-0.977185606286017, 1.766448098905471*^-12}}]}}, 
    {RGBColor[1, 0, 1], PointSize[0.011000000000000001`], AbsoluteThickness[
     1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.011000000000000001`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 1]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[7]], CompressedData["
1:eJxV019IU1EcB/BT2YKEMSoJwqG2AqmRofSH3A8lBg01sGm4QtdSc0XaFhjK
ILygDz3VoPUHpmH0MiT2KBEdXf7tj9VooCvUpq2lmW3UJAPB1r7nPHThXvjc
c+655/z+5NU7zBc2McYodW9I3RuZvBIlqYfyy5qk7Ni25dFk/J/ZvpU5GrOv
enJCsC3Ww2ujBZ49Xjig6yGFuQrXKmCF3+I7Bk0nZhZ+pM1enCR22rhd7RAO
6Cnjybo6+mm5RPyWPB3r/uFi4cBFataTNrfzO6yYeV+FZcHVvyTmm/h0gd/X
MPkNnm7kvuQ9b9vnRdhyjvIfZR06P7sAa0w0NFDkmxr/KtbfyyeKO5oe9MZg
puHhzPm7XZe+wMEaPuAydTXqorDtFFnPXsvQvZsX87WU3eac8rfMweFawvsI
7G7mbNa4/4B6Rpz/DAV3qfL+bPkoxkvJEHqbo8QnxX4O88rFgiPxsZBY/yi5
VbefX3cH4VwjX7Ucf/yh+xXsPMjbq3z2TNWImK8nZ43Baxt6Cnebib2Mm8Zf
98FLVZz9d+0kDcYH08zfLb+HlZ/PWrE+bCkl8X84UcTF/uS43D/cWyjPB1ca
5fnF/GoZH3iiTsYP3lrPtYgvfKNOxh+OlMv8wAGdzB/sLKc3yC/MVgwi//Cx
Bi7qA75ymUT9wCONsr7EeapI1J/Yfxm1oD5hu5PfQf3Cw+20GfUN32/i69Xp
+of7HZSF/oDLbnLRP3BrJ4n+EvkxyP6DH1q5Fv2Z9u+r70X8EmmvhSP0F79s
UVA=
      "]]}, {
     {RGBColor[1, 0, 1], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[1, 0, 1], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.}, {-1.7562895582301508`*^-12, 1.766448098905471*^-12}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8295567065539017`*^9},
 CellLabel->
  "Out[808]=",ExpressionUUID->"a6452639-60e7-461c-81c9-cad9ab0b955d"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{766, 772},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"12.0 para Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 283, 6, 113, "Chapter",ExpressionUUID->"3a9e9938-56c5-4a93-a580-c71afa66faf3"],
Cell[CellGroupData[{
Cell[887, 32, 235, 4, 67, "Section",ExpressionUUID->"2e35e026-edd2-4c6f-b0b9-b24c1279a971"],
Cell[CellGroupData[{
Cell[1147, 40, 436, 11, 105, "Subsection",ExpressionUUID->"f013bfa0-2f15-4856-b841-dd752c58d5da"],
Cell[CellGroupData[{
Cell[1608, 55, 382, 7, 44, "Subsubsection",ExpressionUUID->"6f786b53-6a5b-45af-9e77-c62819b1db33"],
Cell[1993, 64, 3007, 82, 417, "Input",ExpressionUUID->"5ac4c5af-b2d7-41f2-87fa-1220b3e280a3"],
Cell[5003, 148, 443, 9, 48, "Input",ExpressionUUID->"38bd1367-8cf4-487b-a70d-161127533acb"],
Cell[5449, 159, 2457, 81, 230, "Input",ExpressionUUID->"763b61e5-31e6-4961-b6ed-056154c2cf77"],
Cell[CellGroupData[{
Cell[7931, 244, 3616, 98, 422, "Input",ExpressionUUID->"854db9c4-a7fb-45f4-b184-54ea20c0ff96"],
Cell[11550, 344, 1210, 37, 41, "Output",ExpressionUUID->"2a8f6ad2-0d32-4b9f-9af2-d1731257b650"]
}, Open  ]],
Cell[12775, 384, 6161, 163, 991, "Input",ExpressionUUID->"460bbaf7-ee54-407c-ab59-a7c5b16b6daa"],
Cell[CellGroupData[{
Cell[18961, 551, 663, 16, 138, "Input",ExpressionUUID->"e7f2e41c-d0c7-4a0e-a666-0fb955246e8a"],
Cell[19627, 569, 36395, 682, 255, "Output",ExpressionUUID->"fd17e7b4-e789-4534-b6f4-f3cffa308106"],
Cell[56025, 1253, 35485, 667, 247, "Output",ExpressionUUID->"0d5a983b-1bf4-4072-b580-b474991f062a"],
Cell[91513, 1922, 38451, 716, 253, "Output",ExpressionUUID->"3e17fce5-5efa-48ad-a092-7a0d3baa2d72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130001, 2643, 1442, 38, 249, "Input",ExpressionUUID->"3444f1c0-eb5b-4db6-bac7-a4ae613ec519"],
Cell[131446, 2683, 256, 5, 32, "Output",ExpressionUUID->"dedc227f-f9b7-454d-a97d-ef71acfd29e6"],
Cell[131705, 2690, 274, 5, 32, "Output",ExpressionUUID->"1eff7885-100e-46b0-8867-c479d964c014"],
Cell[131982, 2697, 254, 5, 32, "Output",ExpressionUUID->"1672d95f-5256-4887-90a5-410aad7b39f1"],
Cell[132239, 2704, 275, 5, 32, "Output",ExpressionUUID->"d6ccb7e2-606e-489d-93c2-8d1e63e929ce"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[132563, 2715, 231, 5, 36, "Subsubsection",ExpressionUUID->"4910c300-715a-4f4e-9e3c-00612ca193c0"],
Cell[132797, 2722, 2907, 80, 417, "Input",ExpressionUUID->"d563f86c-c0a1-4be8-80d7-78d8daff044c"],
Cell[135707, 2804, 443, 9, 48, "Input",ExpressionUUID->"622e62d7-a7df-49f8-ac3a-3f6d0649f64c"],
Cell[136153, 2815, 2457, 81, 230, "Input",ExpressionUUID->"2ee9ae7b-fb5e-43f2-9a2c-1f7bdc2ff5bf"],
Cell[CellGroupData[{
Cell[138635, 2900, 3616, 98, 422, "Input",ExpressionUUID->"79a7e0fc-d1e3-482a-bea4-892f9ebcffc3"],
Cell[142254, 3000, 1159, 36, 41, "Output",ExpressionUUID->"8b783559-aead-4edc-930f-28038ce45e99"]
}, Open  ]],
Cell[143428, 3039, 6161, 163, 991, "Input",ExpressionUUID->"be1378a3-456c-4bcc-a103-75599be086a9"],
Cell[CellGroupData[{
Cell[149614, 3206, 663, 16, 138, "Input",ExpressionUUID->"806b907d-0b47-428f-b14b-700554f11986"],
Cell[150280, 3224, 37565, 701, 255, "Output",ExpressionUUID->"65efd565-ae7a-4fa3-8f95-8a1f3553d08b"],
Cell[187848, 3927, 36717, 688, 247, "Output",ExpressionUUID->"5ad15b75-3fce-4ca4-ad3f-527c7d0fced7"],
Cell[224568, 4617, 39621, 735, 253, "Output",ExpressionUUID->"00eaee5c-3965-4439-ba37-732a8c844486"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264226, 5357, 1442, 38, 249, "Input",ExpressionUUID->"e13b5d3f-9e9e-4d63-970c-8bad4a764bf6"],
Cell[265671, 5397, 208, 4, 32, "Output",ExpressionUUID->"92bf745b-3328-4197-8e0b-2cc7440a4aed"],
Cell[265882, 5403, 228, 4, 32, "Output",ExpressionUUID->"7df2133e-222a-4498-ad7c-502780bbbfc8"],
Cell[266113, 5409, 208, 4, 32, "Output",ExpressionUUID->"c8bf1f15-ebfd-48fd-ae49-17f90fe01911"],
Cell[266324, 5415, 229, 4, 32, "Output",ExpressionUUID->"d4b9c578-8cce-45dd-87e8-dc8b12e8fcc0"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[266626, 5427, 235, 4, 67, "Section",ExpressionUUID->"f76e0496-cc94-485a-b743-90a63c15903e"],
Cell[CellGroupData[{
Cell[266886, 5435, 367, 7, 79, "Subsection",ExpressionUUID->"2e6f7fef-ac7b-431c-bda7-c61a6d359250"],
Cell[CellGroupData[{
Cell[267278, 5446, 382, 7, 44, "Subsubsection",ExpressionUUID->"9195dc2e-c189-4a92-92da-a820ee4543fd"],
Cell[267663, 5455, 1711, 45, 269, "Input",ExpressionUUID->"c771918e-cd1f-407d-a027-0eea540260d9"],
Cell[269377, 5502, 6312, 201, 776, "Input",ExpressionUUID->"e10150ce-2e3c-40a7-90a5-b42231ef5b89"],
Cell[275692, 5705, 9335, 249, 1252, "Input",ExpressionUUID->"8955abe6-5c7e-43ff-be24-8caef2200d4e"],
Cell[CellGroupData[{
Cell[285052, 5958, 679, 16, 138, "Input",ExpressionUUID->"abf59a1c-ea66-4c79-8c27-b4ffce002576"],
Cell[285734, 5976, 26710, 527, 255, "Output",ExpressionUUID->"a0925485-273e-404c-97b1-a385d48aefe7"],
Cell[312447, 6505, 24170, 486, 255, "Output",ExpressionUUID->"8572b562-7268-44cf-bce1-79652c6ca4b0"],
Cell[336620, 6993, 26866, 531, 259, "Output",ExpressionUUID->"b6db397d-6173-4119-9d3c-59280d92d03e"]
}, Open  ]],
Cell[363501, 7527, 3015, 90, 509, "Input",ExpressionUUID->"7d5853f3-8283-44e0-9f9e-ca57b232c978"],
Cell[CellGroupData[{
Cell[366541, 7621, 469, 10, 101, "Input",ExpressionUUID->"a232178c-9092-45ba-97f2-27b94e8d7d14"],
Cell[367013, 7633, 26264, 536, 255, "Output",ExpressionUUID->"c67ca2e3-449f-4aa3-8622-a7ce9c6fb014"],
Cell[393280, 8171, 28979, 582, 259, "Output",ExpressionUUID->"16121417-0159-484b-b189-f4caf2559990"]
}, Open  ]],
Cell[CellGroupData[{
Cell[422296, 8758, 3025, 78, 418, "Input",ExpressionUUID->"c2171ac2-ca79-4f27-9290-05108c084cfc"],
Cell[425324, 8838, 247, 4, 32, "Output",ExpressionUUID->"485512cb-60a8-4ebf-8e92-3304f2444f75"],
Cell[425574, 8844, 245, 4, 32, "Output",ExpressionUUID->"0052cde6-a4b1-4737-b249-ebaa99e609db"],
Cell[425822, 8850, 248, 4, 32, "Output",ExpressionUUID->"5853e4a2-7272-4c14-85f0-1ffebf932809"],
Cell[426073, 8856, 246, 4, 32, "Output",ExpressionUUID->"3d00cdc7-55e7-4494-8c9a-8416247fd2e4"],
Cell[426322, 8862, 2827, 68, 246, "Output",ExpressionUUID->"b35dcf2b-ebb2-41f6-a6c7-5e9092f669ee"],
Cell[429152, 8932, 2839, 68, 242, "Output",ExpressionUUID->"7024945c-64a2-494f-9503-e3a13bedeca7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[432040, 9006, 435, 8, 36, "Subsubsection",ExpressionUUID->"ff047eb7-0bd8-42c0-b110-0eaa475077cd"],
Cell[432478, 9016, 1757, 45, 269, "Input",ExpressionUUID->"0e79de3c-f394-405d-8811-3dbb6d89abfd"],
Cell[434238, 9063, 6312, 201, 776, "Input",ExpressionUUID->"bc678c90-d655-46f0-89cf-8fa04bbab491"],
Cell[440553, 9266, 9383, 249, 1252, "Input",ExpressionUUID->"018a0a00-9a86-437f-bdab-4d4c40364f00"],
Cell[CellGroupData[{
Cell[449961, 9519, 679, 16, 138, "Input",ExpressionUUID->"a343b17f-da2d-47a1-b410-937d5f089fd3"],
Cell[450643, 9537, 28220, 553, 255, "Output",ExpressionUUID->"559f0f91-ba6a-4d52-aac0-2ea9055d7f7a"],
Cell[478866, 10092, 25642, 510, 255, "Output",ExpressionUUID->"fbc6e9f6-f245-4fcc-b578-61822250a332"],
Cell[504511, 10604, 28390, 555, 259, "Output",ExpressionUUID->"6786577c-1185-43be-9e50-4563c7f3637e"]
}, Open  ]],
Cell[532916, 11162, 3005, 89, 472, "Input",ExpressionUUID->"c650d549-789d-4b44-874d-23c94de9c9f7"],
Cell[CellGroupData[{
Cell[535946, 11255, 469, 10, 101, "Input",ExpressionUUID->"48131c96-98a8-4717-bcc3-3a298ddb76e1"],
Cell[536418, 11267, 29145, 583, 255, "Output",ExpressionUUID->"ad5806cf-51fc-4d6a-8835-2725cac42494"],
Cell[565566, 11852, 31986, 629, 292, "Output",ExpressionUUID->"2cdc1ec6-1231-4bf4-85b8-32b9787b7604"]
}, Open  ]],
Cell[CellGroupData[{
Cell[597589, 12486, 3025, 78, 418, "Input",ExpressionUUID->"f9a9d59f-c006-43e7-9759-98a263a3578d"],
Cell[600617, 12566, 271, 4, 32, "Output",ExpressionUUID->"872ba2dc-81be-405f-a846-676fbfb9420f"],
Cell[600891, 12572, 271, 4, 32, "Output",ExpressionUUID->"144811b8-440a-484f-82f0-9c8fffaf3cd3"],
Cell[601165, 12578, 268, 4, 32, "Output",ExpressionUUID->"2c9262e1-7cc1-44e2-b8f1-30832b852a34"],
Cell[601436, 12584, 269, 4, 32, "Output",ExpressionUUID->"d0ed4e31-fbd1-4eaf-80b0-b2e0bb6f4c43"],
Cell[601708, 12590, 4350, 95, 238, "Output",ExpressionUUID->"c1a7cbb1-596b-425d-a1e3-ddcfd76afbb8"],
Cell[606061, 12687, 4380, 94, 238, "Output",ExpressionUUID->"eb12d5c2-2b74-4d6b-a81b-b6c47de6c1b7"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[610514, 12789, 214, 4, 67, "Section",ExpressionUUID->"819aef57-13c7-42ae-9c9a-4feea333a006"],
Cell[CellGroupData[{
Cell[610753, 12797, 435, 8, 105, "Subsection",ExpressionUUID->"ac9bcb76-cc47-43c0-86f2-3ad06c7454e2"],
Cell[CellGroupData[{
Cell[611213, 12809, 235, 5, 44, "Subsubsection",ExpressionUUID->"4d6c4198-cb8c-43cb-9b22-1578274957c2"],
Cell[611451, 12816, 4365, 123, 659, "Input",ExpressionUUID->"f21713e9-2598-474f-8618-f1a8a3b28a97"],
Cell[615819, 12941, 6148, 172, 773, "Input",ExpressionUUID->"96f0bce2-1376-47a2-9a09-1a34158c3bb6"],
Cell[621970, 13115, 5599, 147, 695, "Input",ExpressionUUID->"983e9211-1b33-417b-814a-2412ca745ce6"],
Cell[CellGroupData[{
Cell[627594, 13266, 721, 17, 157, "Input",ExpressionUUID->"30555af0-5c45-498f-bdb8-a3a18b711bb9"],
Cell[628318, 13285, 18551, 384, 260, "Output",ExpressionUUID->"d9e6101b-b7e7-4f81-8bf1-1bba0ccb9157"],
Cell[646872, 13671, 28807, 575, 255, "Output",ExpressionUUID->"47f2f584-88c3-468a-91c9-8c065bf4985b"],
Cell[675682, 14248, 31510, 618, 292, "Output",ExpressionUUID->"8caa465c-5b59-4a87-ba92-d45d11ed0d83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[707229, 14871, 2968, 79, 399, "Input",ExpressionUUID->"b48c1508-7692-4282-8066-ce28465c19e7"],
Cell[710200, 14952, 178, 3, 32, "Output",ExpressionUUID->"9856610b-1f64-40de-af1a-6745567bf472"],
Cell[710381, 14957, 178, 3, 32, "Output",ExpressionUUID->"607f1f7e-1d96-475d-a1ec-2d4b24c6cef1"],
Cell[710562, 14962, 177, 3, 32, "Output",ExpressionUUID->"986f5873-67f5-4340-a0db-1bbf8fa95d6e"],
Cell[710742, 14967, 176, 3, 32, "Output",ExpressionUUID->"b4747952-e482-4142-8371-04fec231185a"],
Cell[710921, 14972, 3492, 79, 248, "Output",ExpressionUUID->"a6d8af8b-6e50-49e3-9429-ddba1def68bd"],
Cell[714416, 15053, 4203, 92, 238, "Output",ExpressionUUID->"a6452639-60e7-461c-81c9-cad9ab0b955d"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

